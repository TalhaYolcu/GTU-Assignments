a.a.a -> a.a.a:
    void <init>() -> <init>
a.a.b -> a.a.b:
    void <init>() -> <init>
bitter.jnibridge.JNIBridge -> bitter.jnibridge.JNIBridge:
    void <init>() -> <init>
    java.lang.Object invoke(long,java.lang.Class,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void delete(long) -> delete
    java.lang.Object newInterfaceProxy(long,java.lang.Class[]) -> newInterfaceProxy
    void disableInterfaceProxy(java.lang.Object) -> disableInterfaceProxy
bitter.jnibridge.JNIBridge$a -> bitter.jnibridge.JNIBridge$a:
    java.lang.Object a -> a
    long b -> b
    java.lang.reflect.Constructor c -> c
    void <init>(long) -> <init>
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void finalize() -> finalize
    void a() -> a
com.google.a.a.a -> com.google.a.a.a:
    android.os.IBinder a -> a
    java.lang.String b -> b
    void <init>(android.os.IBinder,java.lang.String) -> <init>
    android.os.IBinder asBinder() -> asBinder
    android.os.Parcel a() -> a
    android.os.Parcel b(int,android.os.Parcel) -> a
    void c(int,android.os.Parcel) -> b
com.google.a.a.b -> com.google.a.a.b:
    void <init>(java.lang.String) -> <init>
    android.os.IBinder asBinder() -> asBinder
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    boolean a(int,android.os.Parcel) -> a
com.google.a.a.c -> com.google.a.a.c:
    void <init>() -> <init>
    android.os.Parcelable a(android.os.Parcel,android.os.Parcelable$Creator) -> a
    void b(android.os.Parcel,android.os.Parcelable) -> a
    void c(android.os.Parcel,android.os.IInterface) -> a
    void <clinit>() -> <clinit>
com.google.a.b.a.a.a.a -> com.google.a.b.a.a.a.a:
    void <init>(android.os.IBinder) -> <init>
    void d(java.lang.String,java.util.List,android.os.Bundle,com.google.a.b.a.a.a.e) -> a
    void e(java.lang.String,android.os.Bundle,com.google.a.b.a.a.a.e) -> a
com.google.a.b.a.a.a.b -> com.google.a.b.a.a.a.b:
    com.google.a.b.a.a.a.c b(android.os.IBinder) -> a
com.google.a.b.a.a.a.c -> com.google.a.b.a.a.a.c:
    void d(java.lang.String,java.util.List,android.os.Bundle,com.google.a.b.a.a.a.e) -> a
    void e(java.lang.String,android.os.Bundle,com.google.a.b.a.a.a.e) -> a
com.google.a.b.a.a.a.d -> com.google.a.b.a.a.a.d:
    void <init>() -> <init>
    boolean a(int,android.os.Parcel) -> a
com.google.a.b.a.a.a.e -> com.google.a.b.a.a.a.e:
    void b(android.os.Bundle) -> a
    void c(android.os.Bundle) -> b
com.google.androidgamesdk.ChoreographerCallback -> com.google.androidgamesdk.ChoreographerCallback:
    java.lang.String LOG_TAG -> LOG_TAG
    long mCookie -> mCookie
    com.google.androidgamesdk.ChoreographerCallback$a mLooper -> mLooper
    void <init>(long) -> <init>
    void postFrameCallback() -> postFrameCallback
    void postFrameCallbackDelayed(long) -> postFrameCallbackDelayed
    void terminate() -> terminate
    void doFrame(long) -> doFrame
    void nOnChoreographer(long,long) -> nOnChoreographer
com.google.androidgamesdk.ChoreographerCallback$1 -> com.google.androidgamesdk.ChoreographerCallback$1:
    com.google.androidgamesdk.ChoreographerCallback a -> a
    void <init>(com.google.androidgamesdk.ChoreographerCallback) -> <init>
    void run() -> run
com.google.androidgamesdk.ChoreographerCallback$a -> com.google.androidgamesdk.ChoreographerCallback$a:
    android.os.Handler a -> a
    com.google.androidgamesdk.ChoreographerCallback b -> b
    void <init>(com.google.androidgamesdk.ChoreographerCallback) -> <init>
    void run() -> run
    void <init>(com.google.androidgamesdk.ChoreographerCallback,byte) -> <init>
com.google.androidgamesdk.SwappyDisplayManager -> com.google.androidgamesdk.SwappyDisplayManager:
    java.lang.String LOG_TAG -> LOG_TAG
    boolean DEBUG -> DEBUG
    long ONE_MS_IN_NS -> ONE_MS_IN_NS
    long ONE_S_IN_NS -> ONE_S_IN_NS
    long mCookie -> mCookie
    android.app.Activity mActivity -> mActivity
    android.view.WindowManager mWindowManager -> mWindowManager
    android.view.Display$Mode mCurrentMode -> mCurrentMode
    com.google.androidgamesdk.SwappyDisplayManager$a mLooper -> mLooper
    boolean modeMatchesCurrentResolution(android.view.Display$Mode) -> modeMatchesCurrentResolution
    void <init>(long,android.app.Activity) -> <init>
    void updateSupportedRefreshRates(android.view.Display) -> updateSupportedRefreshRates
    void setPreferredRefreshRate(int) -> setPreferredRefreshRate
    void terminate() -> terminate
    void onDisplayAdded(int) -> onDisplayAdded
    void onDisplayRemoved(int) -> onDisplayRemoved
    void onDisplayChanged(int) -> onDisplayChanged
    boolean callNativeCallback() -> callNativeCallback
    void nSetSupportedRefreshRates(long,long[],int[]) -> nSetSupportedRefreshRates
    void nOnRefreshRateChanged(long,long,long,long) -> nOnRefreshRateChanged
    android.app.Activity access$100(com.google.androidgamesdk.SwappyDisplayManager) -> access$100
com.google.androidgamesdk.SwappyDisplayManager$1 -> com.google.androidgamesdk.SwappyDisplayManager$1:
    int a -> a
    com.google.androidgamesdk.SwappyDisplayManager b -> b
    void <init>(com.google.androidgamesdk.SwappyDisplayManager,int) -> <init>
    void run() -> run
com.google.androidgamesdk.SwappyDisplayManager$a -> com.google.androidgamesdk.SwappyDisplayManager$a:
    android.os.Handler a -> a
    java.util.concurrent.locks.Lock c -> c
    java.util.concurrent.locks.Condition d -> d
    com.google.androidgamesdk.SwappyDisplayManager b -> b
    void <init>(com.google.androidgamesdk.SwappyDisplayManager) -> <init>
    void start() -> start
    void run() -> run
    void <init>(com.google.androidgamesdk.SwappyDisplayManager,byte) -> <init>
com.google.ar.core.Anchor -> com.google.ar.core.Anchor:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void finalize() -> finalize
    com.google.ar.core.Pose getPose() -> getPose
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    java.lang.String getCloudAnchorId() -> getCloudAnchorId
    com.google.ar.core.Anchor$CloudAnchorState getCloudAnchorState() -> getCloudAnchorState
    void detach() -> detach
    void nativeReleaseAnchor(long,long) -> nativeReleaseAnchor
    com.google.ar.core.Pose nativeGetPose(long,long) -> nativeGetPose
    int nativeGetTrackingState(long,long) -> nativeGetTrackingState
    void nativeDetach(long,long) -> nativeDetach
    java.lang.String nativeGetCloudAnchorId(long,long) -> nativeGetCloudAnchorId
    int nativeGetCloudAnchorState(long,long) -> nativeGetCloudAnchorState
com.google.ar.core.Anchor$CloudAnchorState -> com.google.ar.core.Anchor$CloudAnchorState:
    com.google.ar.core.Anchor$CloudAnchorState NONE -> NONE
    com.google.ar.core.Anchor$CloudAnchorState TASK_IN_PROGRESS -> TASK_IN_PROGRESS
    com.google.ar.core.Anchor$CloudAnchorState SUCCESS -> SUCCESS
    com.google.ar.core.Anchor$CloudAnchorState ERROR_INTERNAL -> ERROR_INTERNAL
    com.google.ar.core.Anchor$CloudAnchorState ERROR_NOT_AUTHORIZED -> ERROR_NOT_AUTHORIZED
    com.google.ar.core.Anchor$CloudAnchorState ERROR_SERVICE_UNAVAILABLE -> ERROR_SERVICE_UNAVAILABLE
    com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOURCE_EXHAUSTED -> ERROR_RESOURCE_EXHAUSTED
    com.google.ar.core.Anchor$CloudAnchorState ERROR_HOSTING_DATASET_PROCESSING_FAILED -> ERROR_HOSTING_DATASET_PROCESSING_FAILED
    com.google.ar.core.Anchor$CloudAnchorState ERROR_CLOUD_ID_NOT_FOUND -> ERROR_CLOUD_ID_NOT_FOUND
    com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOLVING_LOCALIZATION_NO_MATCH -> ERROR_RESOLVING_LOCALIZATION_NO_MATCH
    com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOLVING_SDK_VERSION_TOO_OLD -> ERROR_RESOLVING_SDK_VERSION_TOO_OLD
    com.google.ar.core.Anchor$CloudAnchorState ERROR_RESOLVING_SDK_VERSION_TOO_NEW -> ERROR_RESOLVING_SDK_VERSION_TOO_NEW
    com.google.ar.core.Anchor$CloudAnchorState ERROR_HOSTING_SERVICE_UNAVAILABLE -> ERROR_HOSTING_SERVICE_UNAVAILABLE
    int nativeCode -> nativeCode
    com.google.ar.core.Anchor$CloudAnchorState[] $VALUES -> $VALUES
    com.google.ar.core.Anchor$CloudAnchorState[] values() -> values
    com.google.ar.core.Anchor$CloudAnchorState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    boolean isError() -> isError
    com.google.ar.core.Anchor$CloudAnchorState forNumber(int) -> forNumber
    com.google.ar.core.Anchor$CloudAnchorState[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.ArCoreApk -> com.google.ar.core.ArCoreApk:
    com.google.ar.core.ArCoreApk getInstance() -> getInstance
    void <init>() -> <init>
    com.google.ar.core.ArCoreApk$Availability checkAvailability(android.content.Context) -> checkAvailability
    com.google.ar.core.ArCoreApk$InstallStatus requestInstall(android.app.Activity,boolean) -> requestInstall
    com.google.ar.core.ArCoreApk$InstallStatus requestInstall(android.app.Activity,boolean,com.google.ar.core.ArCoreApk$InstallBehavior,com.google.ar.core.ArCoreApk$UserMessageType) -> requestInstall
com.google.ar.core.ArCoreApk$Availability -> com.google.ar.core.ArCoreApk$Availability:
    com.google.ar.core.ArCoreApk$Availability UNKNOWN_ERROR -> UNKNOWN_ERROR
    com.google.ar.core.ArCoreApk$Availability UNKNOWN_CHECKING -> UNKNOWN_CHECKING
    com.google.ar.core.ArCoreApk$Availability UNKNOWN_TIMED_OUT -> UNKNOWN_TIMED_OUT
    com.google.ar.core.ArCoreApk$Availability UNSUPPORTED_DEVICE_NOT_CAPABLE -> UNSUPPORTED_DEVICE_NOT_CAPABLE
    com.google.ar.core.ArCoreApk$Availability SUPPORTED_NOT_INSTALLED -> SUPPORTED_NOT_INSTALLED
    com.google.ar.core.ArCoreApk$Availability SUPPORTED_APK_TOO_OLD -> SUPPORTED_APK_TOO_OLD
    com.google.ar.core.ArCoreApk$Availability SUPPORTED_INSTALLED -> SUPPORTED_INSTALLED
    int nativeCode -> nativeCode
    com.google.ar.core.ArCoreApk$Availability[] $VALUES -> $VALUES
    com.google.ar.core.ArCoreApk$Availability[] values() -> values
    com.google.ar.core.ArCoreApk$Availability valueOf(java.lang.String) -> valueOf
    boolean isUnknown() -> isUnknown
    boolean isUnsupported() -> isUnsupported
    boolean isSupported() -> isSupported
    boolean isTransient() -> isTransient
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.ArCoreApk$Availability forNumber(int) -> forNumber
    com.google.ar.core.ArCoreApk$Availability[] $values() -> $values
    void <clinit>() -> <clinit>
    void <init>(java.lang.String,int,int,com.google.ar.core.a) -> <init>
com.google.ar.core.ArCoreApk$InstallBehavior -> com.google.ar.core.ArCoreApk$InstallBehavior:
    com.google.ar.core.ArCoreApk$InstallBehavior REQUIRED -> REQUIRED
    com.google.ar.core.ArCoreApk$InstallBehavior OPTIONAL -> OPTIONAL
    int nativeCode -> nativeCode
    com.google.ar.core.ArCoreApk$InstallBehavior[] $VALUES -> $VALUES
    com.google.ar.core.ArCoreApk$InstallBehavior[] values() -> values
    com.google.ar.core.ArCoreApk$InstallBehavior valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.ArCoreApk$InstallBehavior forNumber(int) -> forNumber
    com.google.ar.core.ArCoreApk$InstallBehavior[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.ArCoreApk$InstallStatus -> com.google.ar.core.ArCoreApk$InstallStatus:
    com.google.ar.core.ArCoreApk$InstallStatus INSTALLED -> INSTALLED
    com.google.ar.core.ArCoreApk$InstallStatus INSTALL_REQUESTED -> INSTALL_REQUESTED
    int nativeCode -> nativeCode
    com.google.ar.core.ArCoreApk$InstallStatus[] $VALUES -> $VALUES
    com.google.ar.core.ArCoreApk$InstallStatus[] values() -> values
    com.google.ar.core.ArCoreApk$InstallStatus valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.ArCoreApk$InstallStatus forNumber(int) -> forNumber
    com.google.ar.core.ArCoreApk$InstallStatus[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.ArCoreApk$UserMessageType -> com.google.ar.core.ArCoreApk$UserMessageType:
    com.google.ar.core.ArCoreApk$UserMessageType APPLICATION -> APPLICATION
    com.google.ar.core.ArCoreApk$UserMessageType FEATURE -> FEATURE
    com.google.ar.core.ArCoreApk$UserMessageType USER_ALREADY_INFORMED -> USER_ALREADY_INFORMED
    int nativeCode -> nativeCode
    com.google.ar.core.ArCoreApk$UserMessageType[] $VALUES -> $VALUES
    com.google.ar.core.ArCoreApk$UserMessageType[] values() -> values
    com.google.ar.core.ArCoreApk$UserMessageType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.ArCoreApk$UserMessageType forNumber(int) -> forNumber
    com.google.ar.core.ArCoreApk$UserMessageType[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.ArCoreApkJniAdapter -> com.google.ar.core.ArCoreApkJniAdapter:
    java.util.Map a -> a
    void <init>() -> <init>
    int checkAvailability(android.content.Context) -> checkAvailability
    int requestInstall(android.app.Activity,boolean,int[]) -> requestInstall
    int requestInstallCustom(android.app.Activity,boolean,int,int,int[]) -> requestInstallCustom
    void <clinit>() -> <clinit>
    int a(java.lang.Throwable) -> a
com.google.ar.core.ArImage -> com.google.ar.core.ArImage:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session,long) -> <init>
    void close() -> close
    int getFormat() -> getFormat
    long getTimestamp() -> getTimestamp
    int getWidth() -> getWidth
    int getHeight() -> getHeight
    android.media.Image$Plane[] getPlanes() -> getPlanes
    android.graphics.Rect getCropRect() -> getCropRect
    void setCropRect(android.graphics.Rect) -> setCropRect
    void setTimestamp(long) -> setTimestamp
    void nativeLoadSymbols() -> nativeLoadSymbols
    void nativeClose(long,long) -> nativeClose
    int nativeGetFormat(long,long) -> nativeGetFormat
    long nativeGetTimestamp(long,long) -> nativeGetTimestamp
    int nativeGetWidth(long,long) -> nativeGetWidth
    int nativeGetHeight(long,long) -> nativeGetHeight
    int nativeGetNumberOfPlanes(long,long) -> nativeGetNumberOfPlanes
    int nativeGetRowStride(long,long,int) -> nativeGetRowStride
    int nativeGetPixelStride(long,long,int) -> nativeGetPixelStride
    java.nio.ByteBuffer nativeGetBuffer(long,long,int) -> nativeGetBuffer
    com.google.ar.core.Session access$000(com.google.ar.core.ArImage) -> access$000
    int access$100(com.google.ar.core.ArImage,long,long,int) -> access$100
    int access$200(com.google.ar.core.ArImage,long,long,int) -> access$200
    java.nio.ByteBuffer access$300(com.google.ar.core.ArImage,long,long,int) -> access$300
com.google.ar.core.AugmentedFace -> com.google.ar.core.AugmentedFace:
    java.lang.String TAG -> TAG
    java.nio.FloatBuffer verticesBuffer -> verticesBuffer
    java.nio.FloatBuffer normalsBuffer -> normalsBuffer
    java.nio.FloatBuffer textureCoordinatesBuffer -> textureCoordinatesBuffer
    java.nio.ShortBuffer triangleIndicesBuffer -> triangleIndicesBuffer
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    void populateMeshData() -> populateMeshData
    java.nio.FloatBuffer getMeshVertices() -> getMeshVertices
    java.nio.FloatBuffer getMeshNormals() -> getMeshNormals
    java.nio.FloatBuffer getMeshTextureCoordinates() -> getMeshTextureCoordinates
    java.nio.ShortBuffer getMeshTriangleIndices() -> getMeshTriangleIndices
    com.google.ar.core.Pose getRegionPose(com.google.ar.core.AugmentedFace$RegionType) -> getRegionPose
    com.google.ar.core.Pose getCenterPose() -> getCenterPose
    java.nio.ByteBuffer nativeGetMeshVerticesByteBuffer(long,long) -> nativeGetMeshVerticesByteBuffer
    java.nio.ByteBuffer nativeGetMeshNormalsByteBuffer(long,long) -> nativeGetMeshNormalsByteBuffer
    java.nio.ByteBuffer nativeGetMeshTextureCoordinatesByteBuffer(long,long) -> nativeGetMeshTextureCoordinatesByteBuffer
    java.nio.ByteBuffer nativeGetMeshTriangleIndicesByteBuffer(long,long) -> nativeGetMeshTriangleIndicesByteBuffer
    com.google.ar.core.Pose nativeGetRegionPose(long,long,int) -> nativeGetRegionPose
    com.google.ar.core.Pose nativeGetCenterPose(long,long) -> nativeGetCenterPose
    java.util.Collection getAnchors() -> getAnchors
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.ar.core.AugmentedFace$RegionType -> com.google.ar.core.AugmentedFace$RegionType:
    com.google.ar.core.AugmentedFace$RegionType NOSE_TIP -> NOSE_TIP
    com.google.ar.core.AugmentedFace$RegionType FOREHEAD_LEFT -> FOREHEAD_LEFT
    com.google.ar.core.AugmentedFace$RegionType FOREHEAD_RIGHT -> FOREHEAD_RIGHT
    int nativeCode -> nativeCode
    com.google.ar.core.AugmentedFace$RegionType[] $VALUES -> $VALUES
    com.google.ar.core.AugmentedFace$RegionType[] values() -> values
    com.google.ar.core.AugmentedFace$RegionType valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.AugmentedFace$RegionType[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.AugmentedImage -> com.google.ar.core.AugmentedImage:
    void <init>(long,com.google.ar.core.Session) -> <init>
    com.google.ar.core.Pose getCenterPose() -> getCenterPose
    float getExtentX() -> getExtentX
    float getExtentZ() -> getExtentZ
    int getIndex() -> getIndex
    java.lang.String getName() -> getName
    com.google.ar.core.AugmentedImage$TrackingMethod getTrackingMethod() -> getTrackingMethod
    com.google.ar.core.Pose nativeGetCenterPose(long,long) -> nativeGetCenterPose
    float nativeGetExtentX(long,long) -> nativeGetExtentX
    float nativeGetExtentZ(long,long) -> nativeGetExtentZ
    int nativeGetIndex(long,long) -> nativeGetIndex
    java.lang.String nativeGetName(long,long) -> nativeGetName
    int nativeGetTrackingMethod(long,long) -> nativeGetTrackingMethod
    java.util.Collection getAnchors() -> getAnchors
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.ar.core.AugmentedImage$TrackingMethod -> com.google.ar.core.AugmentedImage$TrackingMethod:
    com.google.ar.core.AugmentedImage$TrackingMethod NOT_TRACKING -> NOT_TRACKING
    com.google.ar.core.AugmentedImage$TrackingMethod FULL_TRACKING -> FULL_TRACKING
    com.google.ar.core.AugmentedImage$TrackingMethod LAST_KNOWN_POSE -> LAST_KNOWN_POSE
    int nativeCode -> nativeCode
    com.google.ar.core.AugmentedImage$TrackingMethod[] $VALUES -> $VALUES
    com.google.ar.core.AugmentedImage$TrackingMethod[] values() -> values
    com.google.ar.core.AugmentedImage$TrackingMethod valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.AugmentedImage$TrackingMethod forNumber(int) -> forNumber
    com.google.ar.core.AugmentedImage$TrackingMethod[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.AugmentedImageDatabase -> com.google.ar.core.AugmentedImageDatabase:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    com.google.ar.core.AugmentedImageDatabase deserialize(com.google.ar.core.Session,java.io.InputStream) -> deserialize
    void <init>(com.google.ar.core.Session) -> <init>
    void <init>(com.google.ar.core.Session,long) -> <init>
    int addImage(java.lang.String,android.graphics.Bitmap) -> addImage
    int addImage(java.lang.String,android.graphics.Bitmap,float) -> addImage
    int getNumImages() -> getNumImages
    void serialize(java.io.OutputStream) -> serialize
    void finalize() -> finalize
    java.nio.ByteBuffer convertBitmapToGrayscaleDirectBuffer(android.graphics.Bitmap) -> convertBitmapToGrayscaleDirectBuffer
    java.nio.ByteBuffer loadDirectByteBuffer(java.io.InputStream) -> loadDirectByteBuffer
    long nativeCreate(long) -> nativeCreate
    long nativeDeserialize(long,java.nio.ByteBuffer) -> nativeDeserialize
    int nativeAddImage(long,long,java.lang.String,java.nio.ByteBuffer,int,int,int) -> nativeAddImage
    int nativeAddImageWithPhysicalSize(long,long,java.lang.String,java.nio.ByteBuffer,int,int,int,float) -> nativeAddImageWithPhysicalSize
    java.nio.ByteBuffer nativeSerialize(long,long) -> nativeSerialize
    int nativeGetNumImages(long,long) -> nativeGetNumImages
    void nativeReleaseDatabase(long,long) -> nativeReleaseDatabase
com.google.ar.core.Camera -> com.google.ar.core.Camera:
    java.lang.String TAG -> TAG
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session,com.google.ar.core.Frame) -> <init>
    void <init>() -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void finalize() -> finalize
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    com.google.ar.core.TrackingFailureReason getTrackingFailureReason() -> getTrackingFailureReason
    com.google.ar.core.Pose getPose() -> getPose
    com.google.ar.core.Pose getDisplayOrientedPose() -> getDisplayOrientedPose
    void getViewMatrix(float[],int) -> getViewMatrix
    void getProjectionMatrix(float[],int,float,float) -> getProjectionMatrix
    com.google.ar.core.CameraIntrinsics getImageIntrinsics() -> getImageIntrinsics
    com.google.ar.core.CameraIntrinsics getTextureIntrinsics() -> getTextureIntrinsics
    long nativeAcquireCamera(long,long) -> nativeAcquireCamera
    void nativeReleaseCamera(long,long) -> nativeReleaseCamera
    int nativeGetTrackingState(long,long) -> nativeGetTrackingState
    int nativeGetTrackingFailureReason(long,long) -> nativeGetTrackingFailureReason
    com.google.ar.core.Pose nativeGetPose(long,long) -> nativeGetPose
    com.google.ar.core.Pose nativeDisplayOrientedPose(long,long) -> nativeDisplayOrientedPose
    void nativeGetViewMatrix(long,long,float[],int) -> nativeGetViewMatrix
    void nativeGetProjectionMatrix(long,long,float[],int,float,float) -> nativeGetProjectionMatrix
    long nativeCreateCameraIntrinsics(long) -> nativeCreateCameraIntrinsics
    void nativeGetImageIntrinsics(long,long,long) -> nativeGetImageIntrinsics
    void nativeGetTextureIntrinsics(long,long,long) -> nativeGetTextureIntrinsics
com.google.ar.core.CameraConfig -> com.google.ar.core.CameraConfig:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session,long) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    android.util.Size getImageSize() -> getImageSize
    android.util.Size getTextureSize() -> getTextureSize
    android.util.Range getFpsRange() -> getFpsRange
    com.google.ar.core.CameraConfig$DepthSensorUsage getDepthSensorUsage() -> getDepthSensorUsage
    java.lang.String getCameraId() -> getCameraId
    com.google.ar.core.CameraConfig$FacingDirection getFacingDirection() -> getFacingDirection
    com.google.ar.core.CameraConfig$StereoCameraUsage getStereoCameraUsage() -> getStereoCameraUsage
    void nativeDestroyCameraConfig(long,long) -> nativeDestroyCameraConfig
    void nativeGetImageDimensions(long,long,int[]) -> nativeGetImageDimensions
    void nativeGetTextureDimensions(long,long,int[]) -> nativeGetTextureDimensions
    void nativeGetFpsRange(long,long,int[]) -> nativeGetFpsRange
    int nativeGetDepthSensorUsage(long,long) -> nativeGetDepthSensorUsage
    java.lang.String nativeGetCameraId(long,long) -> nativeGetCameraId
    int nativeGetFacingDirection(long,long) -> nativeGetFacingDirection
    int nativeGetStereoCameraUsage(long,long) -> nativeGetStereoCameraUsage
com.google.ar.core.CameraConfig$DepthSensorUsage -> com.google.ar.core.CameraConfig$DepthSensorUsage:
    com.google.ar.core.CameraConfig$DepthSensorUsage REQUIRE_AND_USE -> REQUIRE_AND_USE
    com.google.ar.core.CameraConfig$DepthSensorUsage DO_NOT_USE -> DO_NOT_USE
    int nativeCode -> nativeCode
    com.google.ar.core.CameraConfig$DepthSensorUsage[] $VALUES -> $VALUES
    com.google.ar.core.CameraConfig$DepthSensorUsage[] values() -> values
    com.google.ar.core.CameraConfig$DepthSensorUsage valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.CameraConfig$DepthSensorUsage forNumber(int) -> forNumber
    java.util.EnumSet forBitFlags(int) -> forBitFlags
    com.google.ar.core.CameraConfig$DepthSensorUsage[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.CameraConfig$FacingDirection -> com.google.ar.core.CameraConfig$FacingDirection:
    com.google.ar.core.CameraConfig$FacingDirection BACK -> BACK
    com.google.ar.core.CameraConfig$FacingDirection FRONT -> FRONT
    int nativeCode -> nativeCode
    com.google.ar.core.CameraConfig$FacingDirection[] $VALUES -> $VALUES
    com.google.ar.core.CameraConfig$FacingDirection[] values() -> values
    com.google.ar.core.CameraConfig$FacingDirection valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.CameraConfig$FacingDirection forNumber(int) -> forNumber
    com.google.ar.core.CameraConfig$FacingDirection[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.CameraConfig$StereoCameraUsage -> com.google.ar.core.CameraConfig$StereoCameraUsage:
    com.google.ar.core.CameraConfig$StereoCameraUsage REQUIRE_AND_USE -> REQUIRE_AND_USE
    com.google.ar.core.CameraConfig$StereoCameraUsage DO_NOT_USE -> DO_NOT_USE
    int nativeCode -> nativeCode
    com.google.ar.core.CameraConfig$StereoCameraUsage[] $VALUES -> $VALUES
    com.google.ar.core.CameraConfig$StereoCameraUsage[] values() -> values
    com.google.ar.core.CameraConfig$StereoCameraUsage valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.CameraConfig$StereoCameraUsage forNumber(int) -> forNumber
    java.util.EnumSet forBitFlags(int) -> forBitFlags
    com.google.ar.core.CameraConfig$StereoCameraUsage[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.CameraConfig$TargetFps -> com.google.ar.core.CameraConfig$TargetFps:
    com.google.ar.core.CameraConfig$TargetFps TARGET_FPS_30 -> TARGET_FPS_30
    com.google.ar.core.CameraConfig$TargetFps TARGET_FPS_60 -> TARGET_FPS_60
    int nativeCode -> nativeCode
    com.google.ar.core.CameraConfig$TargetFps[] $VALUES -> $VALUES
    com.google.ar.core.CameraConfig$TargetFps[] values() -> values
    com.google.ar.core.CameraConfig$TargetFps valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    java.util.EnumSet forBitFlags(int) -> forBitFlags
    com.google.ar.core.CameraConfig$TargetFps[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.CameraConfigFilter -> com.google.ar.core.CameraConfigFilter:
    java.lang.String TAG -> TAG
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    com.google.ar.core.CameraConfigFilter setTargetFps(java.util.EnumSet) -> setTargetFps
    java.util.EnumSet getTargetFps() -> getTargetFps
    com.google.ar.core.CameraConfigFilter setDepthSensorUsage(java.util.EnumSet) -> setDepthSensorUsage
    java.util.EnumSet getDepthSensorUsage() -> getDepthSensorUsage
    com.google.ar.core.CameraConfigFilter setStereoCameraUsage(java.util.EnumSet) -> setStereoCameraUsage
    java.util.EnumSet getStereoCameraUsage() -> getStereoCameraUsage
    long nativeCreateCameraConfigFilter(long) -> nativeCreateCameraConfigFilter
    void nativeDestroyCameraConfigFilter(long,long) -> nativeDestroyCameraConfigFilter
    void nativeSetTargetFps(long,long,int) -> nativeSetTargetFps
    int nativeGetTargetFps(long,long) -> nativeGetTargetFps
    void nativeSetDepthSensorUsage(long,long,int) -> nativeSetDepthSensorUsage
    int nativeGetDepthSensorUsage(long,long) -> nativeGetDepthSensorUsage
    void nativeSetStereoCameraUsage(long,long,int) -> nativeSetStereoCameraUsage
    int nativeGetStereoCameraUsage(long,long) -> nativeGetStereoCameraUsage
    void <clinit>() -> <clinit>
com.google.ar.core.CameraIntrinsics -> com.google.ar.core.CameraIntrinsics:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    void getFocalLength(float[],int) -> getFocalLength
    float[] getFocalLength() -> getFocalLength
    void getPrincipalPoint(float[],int) -> getPrincipalPoint
    float[] getPrincipalPoint() -> getPrincipalPoint
    void getImageDimensions(int[],int) -> getImageDimensions
    int[] getImageDimensions() -> getImageDimensions
    long nativeCreateIntrinsics(long,float,float,float,float,int,int) -> nativeCreateIntrinsics
    void nativeGetFocalLength(long,long,float[],int) -> nativeGetFocalLength
    void nativeGetPrincipalPoint(long,long,float[],int) -> nativeGetPrincipalPoint
    void nativeGetImageDimensions(long,long,int[],int) -> nativeGetImageDimensions
    void nativeDestroyCameraIntrinsics(long,long) -> nativeDestroyCameraIntrinsics
com.google.ar.core.Config -> com.google.ar.core.Config:
    java.lang.String TAG -> TAG
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session) -> <init>
    void <init>(com.google.ar.core.Session,long) -> <init>
    void <init>() -> <init>
    com.google.ar.core.Config$LightEstimationMode getLightEstimationMode() -> getLightEstimationMode
    com.google.ar.core.Config setLightEstimationMode(com.google.ar.core.Config$LightEstimationMode) -> setLightEstimationMode
    com.google.ar.core.Config$PlaneFindingMode getPlaneFindingMode() -> getPlaneFindingMode
    com.google.ar.core.Config setPlaneFindingMode(com.google.ar.core.Config$PlaneFindingMode) -> setPlaneFindingMode
    com.google.ar.core.Config$UpdateMode getUpdateMode() -> getUpdateMode
    com.google.ar.core.Config setUpdateMode(com.google.ar.core.Config$UpdateMode) -> setUpdateMode
    com.google.ar.core.Config setCloudAnchorMode(com.google.ar.core.Config$CloudAnchorMode) -> setCloudAnchorMode
    com.google.ar.core.Config$CloudAnchorMode getCloudAnchorMode() -> getCloudAnchorMode
    com.google.ar.core.Config setAugmentedImageDatabase(com.google.ar.core.AugmentedImageDatabase) -> setAugmentedImageDatabase
    com.google.ar.core.AugmentedImageDatabase getAugmentedImageDatabase() -> getAugmentedImageDatabase
    com.google.ar.core.Config$AugmentedFaceMode getAugmentedFaceMode() -> getAugmentedFaceMode
    com.google.ar.core.Config setAugmentedFaceMode(com.google.ar.core.Config$AugmentedFaceMode) -> setAugmentedFaceMode
    com.google.ar.core.Config$FocusMode getFocusMode() -> getFocusMode
    com.google.ar.core.Config setFocusMode(com.google.ar.core.Config$FocusMode) -> setFocusMode
    com.google.ar.core.Config setInstantPlacementMode(com.google.ar.core.Config$InstantPlacementMode) -> setInstantPlacementMode
    com.google.ar.core.Config$InstantPlacementMode getInstantPlacementMode() -> getInstantPlacementMode
    com.google.ar.core.Config setDepthMode(com.google.ar.core.Config$DepthMode) -> setDepthMode
    com.google.ar.core.Config$DepthMode getDepthMode() -> getDepthMode
    void finalize() -> finalize
    long nativeCreate(long) -> nativeCreate
    void nativeDestroy(long,long) -> nativeDestroy
    int nativeGetLightEstimationMode(long,long) -> nativeGetLightEstimationMode
    void nativeSetLightEstimationMode(long,long,int) -> nativeSetLightEstimationMode
    int nativeGetPlaneFindingMode(long,long) -> nativeGetPlaneFindingMode
    void nativeSetPlaneFindingMode(long,long,int) -> nativeSetPlaneFindingMode
    int nativeGetUpdateMode(long,long) -> nativeGetUpdateMode
    void nativeSetUpdateMode(long,long,int) -> nativeSetUpdateMode
    void nativeSetCloudAnchorMode(long,long,int) -> nativeSetCloudAnchorMode
    int nativeGetCloudAnchorMode(long,long) -> nativeGetCloudAnchorMode
    void nativeSetAugmentedImageDatabase(long,long,long) -> nativeSetAugmentedImageDatabase
    long nativeGetAugmentedImageDatabase(long,long) -> nativeGetAugmentedImageDatabase
    int nativeGetAugmentedFaceMode(long,long) -> nativeGetAugmentedFaceMode
    void nativeSetAugmentedFaceMode(long,long,int) -> nativeSetAugmentedFaceMode
    int nativeGetFocusMode(long,long) -> nativeGetFocusMode
    void nativeSetFocusMode(long,long,int) -> nativeSetFocusMode
    void nativeSetInstantPlacementMode(long,long,int) -> nativeSetInstantPlacementMode
    int nativeGetInstantPlacementMode(long,long) -> nativeGetInstantPlacementMode
    int nativeGetDepthMode(long,long) -> nativeGetDepthMode
    void nativeSetDepthMode(long,long,int) -> nativeSetDepthMode
com.google.ar.core.Config$AugmentedFaceMode -> com.google.ar.core.Config$AugmentedFaceMode:
    com.google.ar.core.Config$AugmentedFaceMode DISABLED -> DISABLED
    com.google.ar.core.Config$AugmentedFaceMode MESH3D -> MESH3D
    int nativeCode -> nativeCode
    com.google.ar.core.Config$AugmentedFaceMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$AugmentedFaceMode[] values() -> values
    com.google.ar.core.Config$AugmentedFaceMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$AugmentedFaceMode forNumber(int) -> forNumber
    com.google.ar.core.Config$AugmentedFaceMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$CloudAnchorMode -> com.google.ar.core.Config$CloudAnchorMode:
    com.google.ar.core.Config$CloudAnchorMode DISABLED -> DISABLED
    com.google.ar.core.Config$CloudAnchorMode ENABLED -> ENABLED
    int nativeCode -> nativeCode
    com.google.ar.core.Config$CloudAnchorMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$CloudAnchorMode[] values() -> values
    com.google.ar.core.Config$CloudAnchorMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$CloudAnchorMode forNumber(int) -> forNumber
    com.google.ar.core.Config$CloudAnchorMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$DepthMode -> com.google.ar.core.Config$DepthMode:
    com.google.ar.core.Config$DepthMode DISABLED -> DISABLED
    com.google.ar.core.Config$DepthMode AUTOMATIC -> AUTOMATIC
    int nativeCode -> nativeCode
    com.google.ar.core.Config$DepthMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$DepthMode[] values() -> values
    com.google.ar.core.Config$DepthMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$DepthMode forNumber(int) -> forNumber
    com.google.ar.core.Config$DepthMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$FocusMode -> com.google.ar.core.Config$FocusMode:
    com.google.ar.core.Config$FocusMode FIXED -> FIXED
    com.google.ar.core.Config$FocusMode AUTO -> AUTO
    int nativeCode -> nativeCode
    com.google.ar.core.Config$FocusMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$FocusMode[] values() -> values
    com.google.ar.core.Config$FocusMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$FocusMode forNumber(int) -> forNumber
    com.google.ar.core.Config$FocusMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$InstantPlacementMode -> com.google.ar.core.Config$InstantPlacementMode:
    com.google.ar.core.Config$InstantPlacementMode DISABLED -> DISABLED
    com.google.ar.core.Config$InstantPlacementMode LOCAL_Y_UP -> LOCAL_Y_UP
    int nativeCode -> nativeCode
    com.google.ar.core.Config$InstantPlacementMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$InstantPlacementMode[] values() -> values
    com.google.ar.core.Config$InstantPlacementMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$InstantPlacementMode forNumber(int) -> forNumber
    com.google.ar.core.Config$InstantPlacementMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$LightEstimationMode -> com.google.ar.core.Config$LightEstimationMode:
    com.google.ar.core.Config$LightEstimationMode DISABLED -> DISABLED
    com.google.ar.core.Config$LightEstimationMode AMBIENT_INTENSITY -> AMBIENT_INTENSITY
    com.google.ar.core.Config$LightEstimationMode ENVIRONMENTAL_HDR -> ENVIRONMENTAL_HDR
    int nativeCode -> nativeCode
    com.google.ar.core.Config$LightEstimationMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$LightEstimationMode[] values() -> values
    com.google.ar.core.Config$LightEstimationMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$LightEstimationMode forNumber(int) -> forNumber
    com.google.ar.core.Config$LightEstimationMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$PlaneFindingMode -> com.google.ar.core.Config$PlaneFindingMode:
    com.google.ar.core.Config$PlaneFindingMode DISABLED -> DISABLED
    com.google.ar.core.Config$PlaneFindingMode HORIZONTAL -> HORIZONTAL
    com.google.ar.core.Config$PlaneFindingMode VERTICAL -> VERTICAL
    com.google.ar.core.Config$PlaneFindingMode HORIZONTAL_AND_VERTICAL -> HORIZONTAL_AND_VERTICAL
    int nativeCode -> nativeCode
    com.google.ar.core.Config$PlaneFindingMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$PlaneFindingMode[] values() -> values
    com.google.ar.core.Config$PlaneFindingMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$PlaneFindingMode forNumber(int) -> forNumber
    com.google.ar.core.Config$PlaneFindingMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Config$UpdateMode -> com.google.ar.core.Config$UpdateMode:
    com.google.ar.core.Config$UpdateMode BLOCKING -> BLOCKING
    com.google.ar.core.Config$UpdateMode LATEST_CAMERA_IMAGE -> LATEST_CAMERA_IMAGE
    int nativeCode -> nativeCode
    com.google.ar.core.Config$UpdateMode[] $VALUES -> $VALUES
    com.google.ar.core.Config$UpdateMode[] values() -> values
    com.google.ar.core.Config$UpdateMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Config$UpdateMode forNumber(int) -> forNumber
    com.google.ar.core.Config$UpdateMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Coordinates2d -> com.google.ar.core.Coordinates2d:
    com.google.ar.core.Coordinates2d TEXTURE_TEXELS -> TEXTURE_TEXELS
    com.google.ar.core.Coordinates2d TEXTURE_NORMALIZED -> TEXTURE_NORMALIZED
    com.google.ar.core.Coordinates2d IMAGE_PIXELS -> IMAGE_PIXELS
    com.google.ar.core.Coordinates2d IMAGE_NORMALIZED -> IMAGE_NORMALIZED
    com.google.ar.core.Coordinates2d OPENGL_NORMALIZED_DEVICE_COORDINATES -> OPENGL_NORMALIZED_DEVICE_COORDINATES
    com.google.ar.core.Coordinates2d VIEW -> VIEW
    com.google.ar.core.Coordinates2d VIEW_NORMALIZED -> VIEW_NORMALIZED
    int nativeCode -> nativeCode
    com.google.ar.core.Coordinates2d[] $VALUES -> $VALUES
    com.google.ar.core.Coordinates2d[] values() -> values
    com.google.ar.core.Coordinates2d valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Coordinates2d forNumber(int) -> forNumber
    com.google.ar.core.Coordinates2d[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Frame -> com.google.ar.core.Frame:
    java.lang.String TAG -> TAG
    java.util.ArrayList ANCHORS_EMPTY_LIST -> ANCHORS_EMPTY_LIST
    java.util.ArrayList PLANES_EMPTY_LIST -> PLANES_EMPTY_LIST
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    com.google.ar.core.LightEstimate lightEstimate -> lightEstimate
    void <init>(com.google.ar.core.Session) -> <init>
    void <init>(com.google.ar.core.Session,long) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    com.google.ar.core.Camera getCamera() -> getCamera
    boolean hasDisplayGeometryChanged() -> hasDisplayGeometryChanged
    void transformDisplayUvCoords(java.nio.FloatBuffer,java.nio.FloatBuffer) -> transformDisplayUvCoords
    long getTimestamp() -> getTimestamp
    long getAndroidCameraTimestamp() -> getAndroidCameraTimestamp
    com.google.ar.core.Pose getAndroidSensorPose() -> getAndroidSensorPose
    com.google.ar.core.LightEstimate getLightEstimate() -> getLightEstimate
    com.google.ar.core.ImageMetadata getImageMetadata() -> getImageMetadata
    com.google.ar.core.PointCloud acquirePointCloud() -> acquirePointCloud
    java.util.List hitTest(float,float) -> hitTest
    java.util.List hitTest(android.view.MotionEvent) -> hitTest
    java.util.List hitTest(float[],int,float[],int) -> hitTest
    java.util.List hitTestInstantPlacement(float,float,float) -> hitTestInstantPlacement
    java.util.List convertNativeHitResultsToList(long[]) -> convertNativeHitResultsToList
    java.util.Collection getUpdatedAnchors() -> getUpdatedAnchors
    java.util.Collection getUpdatedTrackables(java.lang.Class) -> getUpdatedTrackables
    android.media.Image acquireCameraImage() -> acquireCameraImage
    android.media.Image acquireDepthImage() -> acquireDepthImage
    void transformCoordinates2d(com.google.ar.core.Coordinates2d,java.nio.FloatBuffer,com.google.ar.core.Coordinates2d,java.nio.FloatBuffer) -> transformCoordinates2d
    void transformCoordinates2d(com.google.ar.core.Coordinates2d,float[],com.google.ar.core.Coordinates2d,float[]) -> transformCoordinates2d
    int getCameraTextureName() -> getCameraTextureName
    long nativeCreateFrame(long) -> nativeCreateFrame
    void nativeDestroyFrame(long,long) -> nativeDestroyFrame
    boolean nativeHasDisplayGeometryChanged(long,long) -> nativeHasDisplayGeometryChanged
    void nativeTransformDisplayUvCoords(long,long,java.nio.FloatBuffer,java.nio.FloatBuffer) -> nativeTransformDisplayUvCoords
    long nativeGetTimestamp(long,long) -> nativeGetTimestamp
    long nativeGetAndroidCameraTimestamp(long,long) -> nativeGetAndroidCameraTimestamp
    com.google.ar.core.Pose nativeGetAndroidSensorPose(long,long) -> nativeGetAndroidSensorPose
    long[] nativeHitTest(long,long,float,float) -> nativeHitTest
    long[] nativeHitTestRay(long,long,float[],int,float[],int) -> nativeHitTestRay
    long[] nativeHitTestInstantPlacement(long,long,float,float,float) -> nativeHitTestInstantPlacement
    void nativeGetLightEstimate(long,long,long) -> nativeGetLightEstimate
    long nativeAcquireImageMetadata(long,long) -> nativeAcquireImageMetadata
    long nativeAcquirePointCloud(long,long) -> nativeAcquirePointCloud
    long[] nativeAcquireUpdatedAnchors(long,long) -> nativeAcquireUpdatedAnchors
    long[] nativeAcquireUpdatedTrackables(long,long,int) -> nativeAcquireUpdatedTrackables
    long nativeAcquireCameraImage(long,long) -> nativeAcquireCameraImage
    long nativeAcquireDepthImage(long,long) -> nativeAcquireDepthImage
    void nativeTransformCoordinates2dFloatArrayOrBuffer(long,long,int,java.lang.Object,int,java.lang.Object) -> nativeTransformCoordinates2dFloatArrayOrBuffer
    int nativeGetCameraTextureName(long,long) -> nativeGetCameraTextureName
    void <clinit>() -> <clinit>
com.google.ar.core.HitResult -> com.google.ar.core.HitResult:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void finalize() -> finalize
    com.google.ar.core.Pose getHitPose() -> getHitPose
    float getDistance() -> getDistance
    com.google.ar.core.Trackable getTrackable() -> getTrackable
    com.google.ar.core.Anchor createAnchor() -> createAnchor
    void nativeDestroyHitResult(long,long) -> nativeDestroyHitResult
    com.google.ar.core.Pose nativeGetPose(long,long) -> nativeGetPose
    float nativeGetDistance(long,long) -> nativeGetDistance
    long nativeAcquireTrackable(long,long) -> nativeAcquireTrackable
    long nativeCreateAnchor(long,long) -> nativeCreateAnchor
com.google.ar.core.ImageFormat -> com.google.ar.core.ImageFormat:
    int YUV_420_888 -> YUV_420_888
    int RGBA_FP16 -> RGBA_FP16
    void <init>() -> <init>
com.google.ar.core.ImageMetadata -> com.google.ar.core.ImageMetadata:
    int SECTION_COLOR_CORRECTION -> SECTION_COLOR_CORRECTION
    int SECTION_CONTROL -> SECTION_CONTROL
    int SECTION_EDGE -> SECTION_EDGE
    int SECTION_FLASH -> SECTION_FLASH
    int SECTION_FLASH_INFO -> SECTION_FLASH_INFO
    int SECTION_HOT_PIXEL -> SECTION_HOT_PIXEL
    int SECTION_JPEG -> SECTION_JPEG
    int SECTION_LENS -> SECTION_LENS
    int SECTION_LENS_INFO -> SECTION_LENS_INFO
    int SECTION_NOISE_REDUCTION -> SECTION_NOISE_REDUCTION
    int SECTION_REQUEST -> SECTION_REQUEST
    int SECTION_SCALER -> SECTION_SCALER
    int SECTION_SENSOR -> SECTION_SENSOR
    int SECTION_SENSOR_INFO -> SECTION_SENSOR_INFO
    int SECTION_SHADING -> SECTION_SHADING
    int SECTION_STATISTICS -> SECTION_STATISTICS
    int SECTION_STATISTICS_INFO -> SECTION_STATISTICS_INFO
    int SECTION_TONEMAP -> SECTION_TONEMAP
    int SECTION_INFO -> SECTION_INFO
    int SECTION_BLACK_LEVEL -> SECTION_BLACK_LEVEL
    int SECTION_SYNC -> SECTION_SYNC
    int SECTION_DEPTH -> SECTION_DEPTH
    int COLOR_CORRECTION_START -> COLOR_CORRECTION_START
    int CONTROL_START -> CONTROL_START
    int EDGE_START -> EDGE_START
    int FLASH_START -> FLASH_START
    int FLASH_INFO_START -> FLASH_INFO_START
    int HOT_PIXEL_START -> HOT_PIXEL_START
    int JPEG_START -> JPEG_START
    int LENS_START -> LENS_START
    int LENS_INFO_START -> LENS_INFO_START
    int NOISE_REDUCTION_START -> NOISE_REDUCTION_START
    int REQUEST_START -> REQUEST_START
    int SCALER_START -> SCALER_START
    int SENSOR_START -> SENSOR_START
    int SENSOR_INFO_START -> SENSOR_INFO_START
    int SHADING_START -> SHADING_START
    int STATISTICS_START -> STATISTICS_START
    int STATISTICS_INFO_START -> STATISTICS_INFO_START
    int TONEMAP_START -> TONEMAP_START
    int INFO_START -> INFO_START
    int BLACK_LEVEL_START -> BLACK_LEVEL_START
    int SYNC_START -> SYNC_START
    int DEPTH_START -> DEPTH_START
    int COLOR_CORRECTION_MODE -> COLOR_CORRECTION_MODE
    int COLOR_CORRECTION_TRANSFORM -> COLOR_CORRECTION_TRANSFORM
    int COLOR_CORRECTION_GAINS -> COLOR_CORRECTION_GAINS
    int COLOR_CORRECTION_ABERRATION_MODE -> COLOR_CORRECTION_ABERRATION_MODE
    int CONTROL_AE_ANTIBANDING_MODE -> CONTROL_AE_ANTIBANDING_MODE
    int CONTROL_AE_EXPOSURE_COMPENSATION -> CONTROL_AE_EXPOSURE_COMPENSATION
    int CONTROL_AE_LOCK -> CONTROL_AE_LOCK
    int CONTROL_AE_MODE -> CONTROL_AE_MODE
    int CONTROL_AE_REGIONS -> CONTROL_AE_REGIONS
    int CONTROL_AE_TARGET_FPS_RANGE -> CONTROL_AE_TARGET_FPS_RANGE
    int CONTROL_AE_PRECAPTURE_TRIGGER -> CONTROL_AE_PRECAPTURE_TRIGGER
    int CONTROL_AF_MODE -> CONTROL_AF_MODE
    int CONTROL_AF_REGIONS -> CONTROL_AF_REGIONS
    int CONTROL_AF_TRIGGER -> CONTROL_AF_TRIGGER
    int CONTROL_AWB_LOCK -> CONTROL_AWB_LOCK
    int CONTROL_AWB_MODE -> CONTROL_AWB_MODE
    int CONTROL_AWB_REGIONS -> CONTROL_AWB_REGIONS
    int CONTROL_CAPTURE_INTENT -> CONTROL_CAPTURE_INTENT
    int CONTROL_EFFECT_MODE -> CONTROL_EFFECT_MODE
    int CONTROL_MODE -> CONTROL_MODE
    int CONTROL_SCENE_MODE -> CONTROL_SCENE_MODE
    int CONTROL_VIDEO_STABILIZATION_MODE -> CONTROL_VIDEO_STABILIZATION_MODE
    int CONTROL_AE_STATE -> CONTROL_AE_STATE
    int CONTROL_AF_STATE -> CONTROL_AF_STATE
    int CONTROL_AWB_STATE -> CONTROL_AWB_STATE
    int CONTROL_POST_RAW_SENSITIVITY_BOOST -> CONTROL_POST_RAW_SENSITIVITY_BOOST
    int EDGE_MODE -> EDGE_MODE
    int FLASH_MODE -> FLASH_MODE
    int FLASH_STATE -> FLASH_STATE
    int HOT_PIXEL_MODE -> HOT_PIXEL_MODE
    int JPEG_GPS_COORDINATES -> JPEG_GPS_COORDINATES
    int JPEG_GPS_PROCESSING_METHOD -> JPEG_GPS_PROCESSING_METHOD
    int JPEG_GPS_TIMESTAMP -> JPEG_GPS_TIMESTAMP
    int JPEG_ORIENTATION -> JPEG_ORIENTATION
    int JPEG_QUALITY -> JPEG_QUALITY
    int JPEG_THUMBNAIL_QUALITY -> JPEG_THUMBNAIL_QUALITY
    int JPEG_THUMBNAIL_SIZE -> JPEG_THUMBNAIL_SIZE
    int LENS_APERTURE -> LENS_APERTURE
    int LENS_FILTER_DENSITY -> LENS_FILTER_DENSITY
    int LENS_FOCAL_LENGTH -> LENS_FOCAL_LENGTH
    int LENS_FOCUS_DISTANCE -> LENS_FOCUS_DISTANCE
    int LENS_OPTICAL_STABILIZATION_MODE -> LENS_OPTICAL_STABILIZATION_MODE
    int LENS_POSE_ROTATION -> LENS_POSE_ROTATION
    int LENS_POSE_TRANSLATION -> LENS_POSE_TRANSLATION
    int LENS_FOCUS_RANGE -> LENS_FOCUS_RANGE
    int LENS_STATE -> LENS_STATE
    int LENS_INTRINSIC_CALIBRATION -> LENS_INTRINSIC_CALIBRATION
    int LENS_RADIAL_DISTORTION -> LENS_RADIAL_DISTORTION
    int NOISE_REDUCTION_MODE -> NOISE_REDUCTION_MODE
    int REQUEST_PIPELINE_DEPTH -> REQUEST_PIPELINE_DEPTH
    int SCALER_CROP_REGION -> SCALER_CROP_REGION
    int SENSOR_EXPOSURE_TIME -> SENSOR_EXPOSURE_TIME
    int SENSOR_FRAME_DURATION -> SENSOR_FRAME_DURATION
    int SENSOR_SENSITIVITY -> SENSOR_SENSITIVITY
    int SENSOR_TIMESTAMP -> SENSOR_TIMESTAMP
    int SENSOR_NEUTRAL_COLOR_POINT -> SENSOR_NEUTRAL_COLOR_POINT
    int SENSOR_NOISE_PROFILE -> SENSOR_NOISE_PROFILE
    int SENSOR_GREEN_SPLIT -> SENSOR_GREEN_SPLIT
    int SENSOR_TEST_PATTERN_DATA -> SENSOR_TEST_PATTERN_DATA
    int SENSOR_TEST_PATTERN_MODE -> SENSOR_TEST_PATTERN_MODE
    int SENSOR_ROLLING_SHUTTER_SKEW -> SENSOR_ROLLING_SHUTTER_SKEW
    int SENSOR_DYNAMIC_BLACK_LEVEL -> SENSOR_DYNAMIC_BLACK_LEVEL
    int SENSOR_DYNAMIC_WHITE_LEVEL -> SENSOR_DYNAMIC_WHITE_LEVEL
    int SHADING_MODE -> SHADING_MODE
    int STATISTICS_FACE_DETECT_MODE -> STATISTICS_FACE_DETECT_MODE
    int STATISTICS_HOT_PIXEL_MAP_MODE -> STATISTICS_HOT_PIXEL_MAP_MODE
    int STATISTICS_FACE_IDS -> STATISTICS_FACE_IDS
    int STATISTICS_FACE_LANDMARKS -> STATISTICS_FACE_LANDMARKS
    int STATISTICS_FACE_RECTANGLES -> STATISTICS_FACE_RECTANGLES
    int STATISTICS_FACE_SCORES -> STATISTICS_FACE_SCORES
    int STATISTICS_LENS_SHADING_MAP -> STATISTICS_LENS_SHADING_MAP
    int STATISTICS_SCENE_FLICKER -> STATISTICS_SCENE_FLICKER
    int STATISTICS_HOT_PIXEL_MAP -> STATISTICS_HOT_PIXEL_MAP
    int STATISTICS_LENS_SHADING_MAP_MODE -> STATISTICS_LENS_SHADING_MAP_MODE
    int TONEMAP_CURVE_BLUE -> TONEMAP_CURVE_BLUE
    int TONEMAP_CURVE_GREEN -> TONEMAP_CURVE_GREEN
    int TONEMAP_CURVE_RED -> TONEMAP_CURVE_RED
    int TONEMAP_MODE -> TONEMAP_MODE
    int TONEMAP_GAMMA -> TONEMAP_GAMMA
    int TONEMAP_PRESET_CURVE -> TONEMAP_PRESET_CURVE
    int BLACK_LEVEL_LOCK -> BLACK_LEVEL_LOCK
    int SYNC_FRAME_NUMBER -> SYNC_FRAME_NUMBER
    java.lang.String TAG -> TAG
    int TYPE_BYTE -> TYPE_BYTE
    int TYPE_INT -> TYPE_INT
    int TYPE_FLOAT -> TYPE_FLOAT
    int TYPE_LONG -> TYPE_LONG
    int TYPE_DOUBLE -> TYPE_DOUBLE
    int TYPE_RATIONAL -> TYPE_RATIONAL
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    com.google.ar.core.o sketchEntry -> sketchEntry
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    long[] getKeys() -> getKeys
    byte getByte(int) -> getByte
    int getInt(int) -> getInt
    float getFloat(int) -> getFloat
    long getLong(int) -> getLong
    double getDouble(int) -> getDouble
    android.util.Rational getRational(int) -> getRational
    byte[] getByteArray(int) -> getByteArray
    int[] getIntArray(int) -> getIntArray
    float[] getFloatArray(int) -> getFloatArray
    long[] getLongArray(int) -> getLongArray
    double[] getDoubleArray(int) -> getDoubleArray
    android.util.Rational[] getRationalArray(int) -> getRationalArray
    void nativeLoadSymbols() -> nativeLoadSymbols
    long[] nativeGetAllKeys(long,long) -> nativeGetAllKeys
    long nativeGetMetadataEntry(long,long,int) -> nativeGetMetadataEntry
    void nativeReleaseImageMetadata(long,long) -> nativeReleaseImageMetadata
    void nativeDestroyMetadataEntry(long,long) -> nativeDestroyMetadataEntry
    int nativeGetMetadataEntryValueType(long,long) -> nativeGetMetadataEntryValueType
    int nativeGetMetadataEntryValueCount(long,long) -> nativeGetMetadataEntryValueCount
    byte nativeGetByteFromMetadataEntry(long,long) -> nativeGetByteFromMetadataEntry
    int nativeGetIntFromMetadataEntry(long,long) -> nativeGetIntFromMetadataEntry
    float nativeGetFloatFromMetadataEntry(long,long) -> nativeGetFloatFromMetadataEntry
    long nativeGetLongFromMetadataEntry(long,long) -> nativeGetLongFromMetadataEntry
    double nativeGetDoubleFromMetadataEntry(long,long) -> nativeGetDoubleFromMetadataEntry
    android.util.Rational nativeGetRationalFromMetadataEntry(long,long) -> nativeGetRationalFromMetadataEntry
    byte[] nativeGetByteArrayFromMetadataEntry(long,long) -> nativeGetByteArrayFromMetadataEntry
    int[] nativeGetIntArrayFromMetadataEntry(long,long) -> nativeGetIntArrayFromMetadataEntry
    float[] nativeGetFloatArrayFromMetadataEntry(long,long) -> nativeGetFloatArrayFromMetadataEntry
    long[] nativeGetLongArrayFromMetadataEntry(long,long) -> nativeGetLongArrayFromMetadataEntry
    double[] nativeGetDoubleArrayFromMetadataEntry(long,long) -> nativeGetDoubleArrayFromMetadataEntry
    android.util.Rational[] nativeGetRationalArrayFromMetadataEntry(long,long) -> nativeGetRationalArrayFromMetadataEntry
    void getMetdataEntry(int,com.google.ar.core.o) -> getMetdataEntry
com.google.ar.core.InstallActivity -> com.google.ar.core.InstallActivity:
    java.lang.String TAG -> TAG
    java.lang.String MESSAGE_TYPE_KEY -> MESSAGE_TYPE_KEY
    java.lang.String INSTALL_BEHAVIOR_KEY -> INSTALL_BEHAVIOR_KEY
    int BOX_SIZE_DP -> BOX_SIZE_DP
    int INSTALLING_TEXT_BOTTOM_MARGIN_DP -> INSTALLING_TEXT_BOTTOM_MARGIN_DP
    android.view.ContextThemeWrapper themeWrapper -> themeWrapper
    com.google.ar.core.ArCoreApk$UserMessageType messageType -> messageType
    com.google.ar.core.ArCoreApk$InstallBehavior installBehavior -> installBehavior
    boolean finished -> finished
    boolean installStarted -> installStarted
    boolean waitingForCompletion -> waitingForCompletion
    com.google.ar.core.v lastEvent -> lastEvent
    void <init>() -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void showEducationDialog() -> showEducationDialog
    void showSpinner() -> showSpinner
    void animateToSpinner() -> animateToSpinner
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void finish() -> finish
    void finishWithFailure(java.lang.Exception) -> finishWithFailure
    void onDestroy() -> onDestroy
    boolean isOptional() -> isOptional
    void startInstaller() -> startInstaller
    void closeInstaller() -> closeInstaller
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void access$000(com.google.ar.core.InstallActivity,java.lang.Exception) -> access$000
    void access$100(com.google.ar.core.InstallActivity) -> access$100
    void access$200(com.google.ar.core.InstallActivity) -> access$200
    void access$300(com.google.ar.core.InstallActivity) -> access$300
    boolean access$500(com.google.ar.core.InstallActivity) -> access$500
    void access$600(com.google.ar.core.InstallActivity) -> access$600
    com.google.ar.core.v access$402(com.google.ar.core.InstallActivity,com.google.ar.core.v) -> access$402
com.google.ar.core.InstantPlacementPoint -> com.google.ar.core.InstantPlacementPoint:
    void <init>(long,com.google.ar.core.Session) -> <init>
    com.google.ar.core.InstantPlacementPoint$TrackingMethod getTrackingMethod() -> getTrackingMethod
    com.google.ar.core.Pose getPose() -> getPose
    com.google.ar.core.Pose nativeGetPose(long,long) -> nativeGetPose
    int nativeGetTrackingMethod(long,long) -> nativeGetTrackingMethod
    java.util.Collection getAnchors() -> getAnchors
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.ar.core.InstantPlacementPoint$TrackingMethod -> com.google.ar.core.InstantPlacementPoint$TrackingMethod:
    com.google.ar.core.InstantPlacementPoint$TrackingMethod NOT_TRACKING -> NOT_TRACKING
    com.google.ar.core.InstantPlacementPoint$TrackingMethod SCREENSPACE_WITH_APPROXIMATE_DISTANCE -> SCREENSPACE_WITH_APPROXIMATE_DISTANCE
    com.google.ar.core.InstantPlacementPoint$TrackingMethod FULL_TRACKING -> FULL_TRACKING
    int nativeCode -> nativeCode
    com.google.ar.core.InstantPlacementPoint$TrackingMethod[] $VALUES -> $VALUES
    com.google.ar.core.InstantPlacementPoint$TrackingMethod[] values() -> values
    com.google.ar.core.InstantPlacementPoint$TrackingMethod valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.InstantPlacementPoint$TrackingMethod fromNumber(int) -> fromNumber
    com.google.ar.core.InstantPlacementPoint$TrackingMethod[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.LightEstimate -> com.google.ar.core.LightEstimate:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    com.google.ar.core.LightEstimate$State getState() -> getState
    float getPixelIntensity() -> getPixelIntensity
    void getColorCorrection(float[],int) -> getColorCorrection
    long getTimestamp() -> getTimestamp
    float[] getEnvironmentalHdrMainLightDirection() -> getEnvironmentalHdrMainLightDirection
    float[] getEnvironmentalHdrMainLightIntensity() -> getEnvironmentalHdrMainLightIntensity
    float[] getEnvironmentalHdrAmbientSphericalHarmonics() -> getEnvironmentalHdrAmbientSphericalHarmonics
    com.google.ar.core.ArImage[] acquireEnvironmentalHdrCubeMap() -> acquireEnvironmentalHdrCubeMap
    com.google.ar.core.ArImage[] convertNativeArImageCubemapToArray(long[]) -> convertNativeArImageCubemapToArray
    long nativeCreateLightEstimate(long) -> nativeCreateLightEstimate
    void nativeDestroyLightEstimate(long,long) -> nativeDestroyLightEstimate
    int nativeGetState(long,long) -> nativeGetState
    float nativeGetPixelIntensity(long,long) -> nativeGetPixelIntensity
    void nativeGetColorCorrection(long,long,float[],int) -> nativeGetColorCorrection
    long nativeGetTimestamp(long,long) -> nativeGetTimestamp
    void nativeGetEnvironmentalHdrMainLightDirection(long,long,float[]) -> nativeGetEnvironmentalHdrMainLightDirection
    void nativeGetEnvironmentalHdrMainLightIntensity(long,long,float[]) -> nativeGetEnvironmentalHdrMainLightIntensity
    void nativeGetEnvironmentalHdrAmbientSphericalHarmonics(long,long,float[]) -> nativeGetEnvironmentalHdrAmbientSphericalHarmonics
    long[] nativeAcquireEnvironmentalHdrCubeMap(long,long) -> nativeAcquireEnvironmentalHdrCubeMap
com.google.ar.core.LightEstimate$State -> com.google.ar.core.LightEstimate$State:
    com.google.ar.core.LightEstimate$State NOT_VALID -> NOT_VALID
    com.google.ar.core.LightEstimate$State VALID -> VALID
    int nativeCode -> nativeCode
    com.google.ar.core.LightEstimate$State[] $VALUES -> $VALUES
    com.google.ar.core.LightEstimate$State[] values() -> values
    com.google.ar.core.LightEstimate$State valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.LightEstimate$State forNumber(int) -> forNumber
    com.google.ar.core.LightEstimate$State[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Plane -> com.google.ar.core.Plane:
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    com.google.ar.core.Plane$Type getType() -> getType
    com.google.ar.core.Plane getSubsumedBy() -> getSubsumedBy
    com.google.ar.core.Pose getCenterPose() -> getCenterPose
    float getExtentX() -> getExtentX
    float getExtentZ() -> getExtentZ
    java.nio.FloatBuffer getPolygon() -> getPolygon
    boolean isPoseInExtents(com.google.ar.core.Pose) -> isPoseInExtents
    boolean isPoseInPolygon(com.google.ar.core.Pose) -> isPoseInPolygon
    int nativeGetType(long,long) -> nativeGetType
    long nativeAcquireSubsumedBy(long,long) -> nativeAcquireSubsumedBy
    com.google.ar.core.Pose nativeGetCenterPose(long,long) -> nativeGetCenterPose
    float nativeGetExtentX(long,long) -> nativeGetExtentX
    float nativeGetExtentZ(long,long) -> nativeGetExtentZ
    float[] nativeGetPolygon(long,long) -> nativeGetPolygon
    boolean nativeIsPoseInExtents(long,long,com.google.ar.core.Pose) -> nativeIsPoseInExtents
    boolean nativeIsPoseInPolygon(long,long,com.google.ar.core.Pose) -> nativeIsPoseInPolygon
    java.util.Collection getAnchors() -> getAnchors
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.ar.core.Plane$Type -> com.google.ar.core.Plane$Type:
    com.google.ar.core.Plane$Type HORIZONTAL_UPWARD_FACING -> HORIZONTAL_UPWARD_FACING
    com.google.ar.core.Plane$Type HORIZONTAL_DOWNWARD_FACING -> HORIZONTAL_DOWNWARD_FACING
    com.google.ar.core.Plane$Type VERTICAL -> VERTICAL
    int nativeCode -> nativeCode
    com.google.ar.core.Plane$Type[] $VALUES -> $VALUES
    com.google.ar.core.Plane$Type[] values() -> values
    com.google.ar.core.Plane$Type valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Plane$Type forNumber(int) -> forNumber
    com.google.ar.core.Plane$Type[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.PlaybackStatus -> com.google.ar.core.PlaybackStatus:
    com.google.ar.core.PlaybackStatus NONE -> NONE
    com.google.ar.core.PlaybackStatus OK -> OK
    com.google.ar.core.PlaybackStatus IO_ERROR -> IO_ERROR
    com.google.ar.core.PlaybackStatus FINISHED -> FINISHED
    int nativeCode -> nativeCode
    com.google.ar.core.PlaybackStatus[] $VALUES -> $VALUES
    com.google.ar.core.PlaybackStatus[] values() -> values
    com.google.ar.core.PlaybackStatus valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.PlaybackStatus forNumber(int) -> forNumber
    com.google.ar.core.PlaybackStatus[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Point -> com.google.ar.core.Point:
    void <init>(long,com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    com.google.ar.core.Pose getPose() -> getPose
    com.google.ar.core.Point$OrientationMode getOrientationMode() -> getOrientationMode
    com.google.ar.core.Pose nativeGetPose(long,long) -> nativeGetPose
    int nativeGetOrientationMode(long,long) -> nativeGetOrientationMode
    java.util.Collection getAnchors() -> getAnchors
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.ar.core.Point$OrientationMode -> com.google.ar.core.Point$OrientationMode:
    com.google.ar.core.Point$OrientationMode INITIALIZED_TO_IDENTITY -> INITIALIZED_TO_IDENTITY
    com.google.ar.core.Point$OrientationMode ESTIMATED_SURFACE_NORMAL -> ESTIMATED_SURFACE_NORMAL
    int nativeCode -> nativeCode
    com.google.ar.core.Point$OrientationMode[] $VALUES -> $VALUES
    com.google.ar.core.Point$OrientationMode[] values() -> values
    com.google.ar.core.Point$OrientationMode valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Point$OrientationMode fromNumber(int) -> fromNumber
    com.google.ar.core.Point$OrientationMode[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.PointCloud -> com.google.ar.core.PointCloud:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session,long) -> <init>
    void <init>() -> <init>
    void release() -> release
    void finalize() -> finalize
    java.nio.FloatBuffer getPoints() -> getPoints
    java.nio.IntBuffer getIds() -> getIds
    long getTimestamp() -> getTimestamp
    void close() -> close
    java.nio.ByteBuffer nativeGetData(long,long) -> nativeGetData
    java.nio.ByteBuffer nativeGetIds(long,long) -> nativeGetIds
    long nativeGetTimestamp(long,long) -> nativeGetTimestamp
    void nativeReleasePointCloud(long,long) -> nativeReleasePointCloud
com.google.ar.core.Pose -> com.google.ar.core.Pose:
    com.google.ar.core.Pose IDENTITY -> IDENTITY
    com.google.ar.core.Quaternion quaternion -> quaternion
    float[] translation -> translation
    void <init>(float,float,float,float,float,float,float) -> <init>
    void <init>(float[],float[]) -> <init>
    void <init>(float[],com.google.ar.core.Quaternion) -> <init>
    com.google.ar.core.Pose makeTranslation(float,float,float) -> makeTranslation
    com.google.ar.core.Pose makeTranslation(float[]) -> makeTranslation
    com.google.ar.core.Pose makeRotation(float,float,float,float) -> makeRotation
    com.google.ar.core.Pose makeRotation(float[]) -> makeRotation
    com.google.ar.core.Pose compose(com.google.ar.core.Pose) -> compose
    com.google.ar.core.Pose makeInterpolated(com.google.ar.core.Pose,com.google.ar.core.Pose,float) -> makeInterpolated
    com.google.ar.core.Pose inverse() -> inverse
    com.google.ar.core.Pose extractRotation() -> extractRotation
    com.google.ar.core.Pose extractTranslation() -> extractTranslation
    void toMatrix(float[],int) -> toMatrix
    float tx() -> tx
    float ty() -> ty
    float tz() -> tz
    float qx() -> qx
    float qy() -> qy
    float qz() -> qz
    float qw() -> qw
    void getTranslation(float[],int) -> getTranslation
    float[] getTranslation() -> getTranslation
    void getRotationQuaternion(float[],int) -> getRotationQuaternion
    float[] getRotationQuaternion() -> getRotationQuaternion
    void rotateVector(float[],int,float[],int) -> rotateVector
    float[] rotateVector(float[]) -> rotateVector
    void transformPoint(float[],int,float[],int) -> transformPoint
    float[] transformPoint(float[]) -> transformPoint
    void getTransformedAxis(int,float,float[],int) -> getTransformedAxis
    float[] getTransformedAxis(int,float) -> getTransformedAxis
    float[] getXAxis() -> getXAxis
    float[] getYAxis() -> getYAxis
    float[] getZAxis() -> getZAxis
    java.lang.String toString() -> toString
    com.google.ar.core.Quaternion getQuaternion() -> getQuaternion
    void <clinit>() -> <clinit>
com.google.ar.core.Quaternion -> com.google.ar.core.Quaternion:
    float x -> x
    float y -> y
    float z -> z
    float w -> w
    com.google.ar.core.Quaternion a -> a
    void <init>() -> <init>
    void <init>(com.google.ar.core.Quaternion) -> <init>
    void <init>(float,float,float,float) -> <init>
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
    void a(float,float,float,float) -> a
    float b() -> a
    float c() -> b
    float d() -> c
    float e() -> d
    void f(float[],int) -> a
    com.google.ar.core.Quaternion g() -> e
    com.google.ar.core.Quaternion h(com.google.ar.core.Quaternion) -> a
    com.google.ar.core.Quaternion i(com.google.ar.core.Quaternion,com.google.ar.core.Quaternion,float) -> a
    void j(com.google.ar.core.Quaternion,float[],int,float[],int) -> a
    void k(float[],int) -> b
com.google.ar.core.R -> com.google.ar.core.R:
    void <init>() -> <init>
com.google.ar.core.R$id -> com.google.ar.core.R$a:
    int __arcore_cancelButton -> __arcore_cancelButton
    int __arcore_continueButton -> __arcore_continueButton
    int __arcore_messageText -> __arcore_messageText
com.google.ar.core.R$layout -> com.google.ar.core.R$b:
    int __arcore_education -> __arcore_education
com.google.ar.core.R$string -> com.google.ar.core.R$c:
    int __arcore_cancel -> __arcore_cancel
    int __arcore_continue -> __arcore_continue
    int __arcore_install_app -> __arcore_install_app
    int __arcore_install_feature -> __arcore_install_feature
    int __arcore_installing -> __arcore_installing
com.google.ar.core.RecordingConfig -> com.google.ar.core.RecordingConfig:
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    long nativeHandle -> nativeHandle
    void <init>(com.google.ar.core.Session) -> <init>
    void <init>() -> <init>
    void finalize() -> finalize
    com.google.ar.core.RecordingConfig setMp4DatasetFilePath(java.lang.String) -> setMp4DatasetFilePath
    java.lang.String getMp4DatasetFilePath() -> getMp4DatasetFilePath
    com.google.ar.core.RecordingConfig setAutoStopOnPause(boolean) -> setAutoStopOnPause
    boolean getAutoStopOnPause() -> getAutoStopOnPause
    com.google.ar.core.RecordingConfig setRecordingRotation(int) -> setRecordingRotation
    int getRecordingRotation() -> getRecordingRotation
    long nativeCreateRecordingConfig(long) -> nativeCreateRecordingConfig
    void nativeDestroyRecordingConfig(long,long) -> nativeDestroyRecordingConfig
    java.lang.String nativeGetMp4DatasetFilePath(long,long) -> nativeGetMp4DatasetFilePath
    void nativeSetMp4DatasetFilePath(long,long,java.lang.String) -> nativeSetMp4DatasetFilePath
    boolean nativeGetAutoStopOnPause(long,long) -> nativeGetAutoStopOnPause
    void nativeSetAutoStopOnPause(long,long,boolean) -> nativeSetAutoStopOnPause
    int nativeGetRecordingRotation(long,long) -> nativeGetRecordingRotation
    void nativeSetRecordingRotation(long,long,int) -> nativeSetRecordingRotation
com.google.ar.core.RecordingStatus -> com.google.ar.core.RecordingStatus:
    com.google.ar.core.RecordingStatus NONE -> NONE
    com.google.ar.core.RecordingStatus OK -> OK
    com.google.ar.core.RecordingStatus IO_ERROR -> IO_ERROR
    int nativeCode -> nativeCode
    com.google.ar.core.RecordingStatus[] $VALUES -> $VALUES
    com.google.ar.core.RecordingStatus[] values() -> values
    com.google.ar.core.RecordingStatus valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.RecordingStatus forNumber(int) -> forNumber
    com.google.ar.core.RecordingStatus[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Session -> com.google.ar.core.Session:
    java.lang.String TAG -> TAG
    long nativeWrapperHandle -> nativeWrapperHandle
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    com.google.ar.core.SharedCamera sharedCamera -> sharedCamera
    com.google.ar.core.n faceCache -> faceCache
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,java.util.Set) -> <init>
    void <init>(long) -> <init>
    void <init>() -> <init>
    com.google.ar.core.Session createForSharedCamera(android.content.Context) -> createForSharedCamera
    com.google.ar.core.SharedCamera getSharedCamera() -> getSharedCamera
    void finalize() -> finalize
    void close() -> close
    com.google.ar.core.Trackable createTrackable(long) -> createTrackable
    void configure(com.google.ar.core.Config) -> configure
    com.google.ar.core.Config getConfig() -> getConfig
    void getConfig(com.google.ar.core.Config) -> getConfig
    void resume() -> resume
    boolean isSharedCameraUsed() -> isSharedCameraUsed
    com.google.ar.core.Frame update() -> update
    void pause() -> pause
    void pauseSharedCameraIfInUse() -> pauseSharedCameraIfInUse
    void setCameraTextureNames(int[]) -> setCameraTextureNames
    void setCameraTextureName(int) -> setCameraTextureName
    void setDisplayGeometry(int,int,int) -> setDisplayGeometry
    boolean isSupported(com.google.ar.core.Config) -> isSupported
    java.util.Collection getAllAnchors() -> getAllAnchors
    java.util.Collection getAllTrackables(java.lang.Class) -> getAllTrackables
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    com.google.ar.core.Session$FeatureMapQuality estimateFeatureMapQualityForHosting(com.google.ar.core.Pose) -> estimateFeatureMapQualityForHosting
    com.google.ar.core.Anchor hostCloudAnchor(com.google.ar.core.Anchor) -> hostCloudAnchor
    com.google.ar.core.Anchor hostCloudAnchorWithTtl(com.google.ar.core.Anchor,int) -> hostCloudAnchorWithTtl
    com.google.ar.core.Anchor resolveCloudAnchor(java.lang.String) -> resolveCloudAnchor
    java.util.Collection convertNativeAnchorsToCollection(long[]) -> convertNativeAnchorsToCollection
    java.util.Collection convertNativeTrackablesToCollection(java.lang.Class,long[]) -> convertNativeTrackablesToCollection
    java.util.List getSupportedCameraConfigs() -> getSupportedCameraConfigs
    java.util.List getSupportedCameraConfigs(com.google.ar.core.CameraConfigFilter) -> getSupportedCameraConfigs
    void setCameraConfig(com.google.ar.core.CameraConfig) -> setCameraConfig
    com.google.ar.core.CameraConfig getCameraConfig() -> getCameraConfig
    java.util.List convertNativeCameraConfigsToCollection(long[]) -> convertNativeCameraConfigsToCollection
    boolean isDepthModeSupported(com.google.ar.core.Config$DepthMode) -> isDepthModeSupported
    void throwExceptionFromArStatus(int) -> throwExceptionFromArStatus
    void throwExceptionFromArStatus(java.lang.String,int,java.lang.String[],int[]) -> throwExceptionFromArStatus
    void loadDynamicSymbolsAfterSessionCreate() -> loadDynamicSymbolsAfterSessionCreate
    java.nio.ByteBuffer directByteBufferOrDefault(java.nio.ByteBuffer) -> directByteBufferOrDefault
    void setPlaybackDataset(java.lang.String) -> setPlaybackDataset
    com.google.ar.core.PlaybackStatus getPlaybackStatus() -> getPlaybackStatus
    void startRecording(com.google.ar.core.RecordingConfig) -> startRecording
    void stopRecording() -> stopRecording
    com.google.ar.core.RecordingStatus getRecordingStatus() -> getRecordingStatus
    long nativeCreateSessionAndWrapperWithFeatures(android.content.Context,int[]) -> nativeCreateSessionAndWrapperWithFeatures
    void nativeDestroySessionWrapper(long) -> nativeDestroySessionWrapper
    void nativeCloseSession(long) -> nativeCloseSession
    long nativeGetSymbolTable(long) -> nativeGetSymbolTable
    int nativeCheckModuleAvailability(long,int) -> nativeCheckModuleAvailability
    void nativeRequestModuleInstallImmediate(long,int[]) -> nativeRequestModuleInstallImmediate
    void nativeRequestModuleInstallDeferred(long,int[]) -> nativeRequestModuleInstallDeferred
    boolean nativeIsSupported(long,long) -> nativeIsSupported
    void nativeConfigure(long,long) -> nativeConfigure
    void nativeGetConfig(long,long) -> nativeGetConfig
    void nativeGetRandomAccessStats(long,long) -> nativeGetRandomAccessStats
    void nativeResume(long) -> nativeResume
    void nativePause(long) -> nativePause
    void nativeSetCameraTextureNames(long,int[]) -> nativeSetCameraTextureNames
    void nativeSetCameraTextureName(long,int) -> nativeSetCameraTextureName
    void nativeSetDisplayGeometry(long,int,int,int) -> nativeSetDisplayGeometry
    void nativeUpdate(long,long) -> nativeUpdate
    long nativeCreateAnchor(long,com.google.ar.core.Pose) -> nativeCreateAnchor
    long[] nativeAcquireAllAnchors(long) -> nativeAcquireAllAnchors
    long[] nativeAcquireAllTrackables(long,int) -> nativeAcquireAllTrackables
    int nativeEstimateFeatureMapQualityForHosting(long,com.google.ar.core.Pose) -> nativeEstimateFeatureMapQualityForHosting
    long nativeHostCloudAnchor(long,long) -> nativeHostCloudAnchor
    long nativeHostCloudAnchorWithTtl(long,long,int) -> nativeHostCloudAnchorWithTtl
    long nativeResolveCloudAnchor(long,java.lang.String) -> nativeResolveCloudAnchor
    long[] nativeGetSupportedCameraConfigsWithFilter(long,long) -> nativeGetSupportedCameraConfigsWithFilter
    long[] nativeGetSupportedCameraConfigs(long) -> nativeGetSupportedCameraConfigs
    int nativeSetCameraConfig(long,long) -> nativeSetCameraConfig
    long nativeGetCameraConfig(long) -> nativeGetCameraConfig
    void nativeSetPlaybackDataset(long,java.lang.String) -> nativeSetPlaybackDataset
    void nativeStartRecording(long,long) -> nativeStartRecording
    void nativeStopRecording(long) -> nativeStopRecording
    int nativeGetRecordingStatus(long) -> nativeGetRecordingStatus
    int nativeGetPlaybackStatus(long) -> nativeGetPlaybackStatus
    long nativeCreateSessionWrapperFromHandle(long,long) -> nativeCreateSessionWrapperFromHandle
    long nativeReleaseSessionOwnership(long) -> nativeReleaseSessionOwnership
    long nativeGetSessionNativeHandle(long) -> nativeGetSessionNativeHandle
    boolean nativeIsDepthModeSupported(long,int) -> nativeIsDepthModeSupported
com.google.ar.core.Session$Feature -> com.google.ar.core.Session$Feature:
    com.google.ar.core.Session$Feature FRONT_CAMERA -> FRONT_CAMERA
    com.google.ar.core.Session$Feature SHARED_CAMERA -> SHARED_CAMERA
    int nativeCode -> nativeCode
    com.google.ar.core.Session$Feature[] $VALUES -> $VALUES
    com.google.ar.core.Session$Feature[] values() -> values
    com.google.ar.core.Session$Feature valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Session$Feature[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.Session$FeatureMapQuality -> com.google.ar.core.Session$FeatureMapQuality:
    com.google.ar.core.Session$FeatureMapQuality INSUFFICIENT -> INSUFFICIENT
    com.google.ar.core.Session$FeatureMapQuality SUFFICIENT -> SUFFICIENT
    com.google.ar.core.Session$FeatureMapQuality GOOD -> GOOD
    int nativeCode -> nativeCode
    com.google.ar.core.Session$FeatureMapQuality[] $VALUES -> $VALUES
    com.google.ar.core.Session$FeatureMapQuality[] values() -> values
    com.google.ar.core.Session$FeatureMapQuality valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.Session$FeatureMapQuality forNumber(int) -> forNumber
    com.google.ar.core.Session$FeatureMapQuality[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.SessionCreateJniHelper -> com.google.ar.core.SessionCreateJniHelper:
    void <init>() -> <init>
    int getMinApkVersion(android.content.Context) -> getMinApkVersion
    int getArCoreApkVersionCode(android.content.Context) -> getArCoreApkVersionCode
    boolean checkApkSignature(android.content.Context) -> checkApkSignature
com.google.ar.core.SharedCamera -> com.google.ar.core.SharedCamera:
    java.lang.String TAG -> TAG
    boolean cameraSharedWithAr -> cameraSharedWithAr
    com.google.ar.core.Session session -> session
    android.os.Handler sharedCameraHandler -> sharedCameraHandler
    com.google.ar.core.au sharedCameraInfo -> sharedCameraInfo
    void <init>(com.google.ar.core.Session) -> <init>
    void close() -> close
    void setAppSurfaces(java.lang.String,java.util.List) -> setAppSurfaces
    android.graphics.SurfaceTexture getSurfaceTexture() -> getSurfaceTexture
    java.util.List getArCoreSurfaces() -> getArCoreSurfaces
    android.hardware.camera2.CameraDevice$StateCallback createARDeviceStateCallback(android.hardware.camera2.CameraDevice$StateCallback,android.os.Handler) -> createARDeviceStateCallback
    android.hardware.camera2.CameraCaptureSession$StateCallback createARSessionStateCallback(android.hardware.camera2.CameraCaptureSession$StateCallback,android.os.Handler) -> createARSessionStateCallback
    void pause() -> pause
    void setDummyOnImageAvailableListener(android.media.ImageReader) -> setDummyOnImageAvailableListener
    void setDummyListenerToAvoidImageBufferStarvation() -> setDummyListenerToAvoidImageBufferStarvation
    void onDeviceOpened(android.hardware.camera2.CameraDevice) -> onDeviceOpened
    void onDeviceClosed(android.hardware.camera2.CameraDevice) -> onDeviceClosed
    void onDeviceDisconnected(android.hardware.camera2.CameraDevice) -> onDeviceDisconnected
    void onCaptureSessionActive(android.hardware.camera2.CameraCaptureSession) -> onCaptureSessionActive
    void onCaptureSessionClosed(android.hardware.camera2.CameraCaptureSession) -> onCaptureSessionClosed
    void onCaptureSessionConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onCaptureSessionConfigureFailed
    void onCaptureSessionConfigured(android.hardware.camera2.CameraCaptureSession) -> onCaptureSessionConfigured
    void onCaptureSessionReady(android.hardware.camera2.CameraCaptureSession) -> onCaptureSessionReady
    android.media.ImageReader getCpuImageReader() -> getCpuImageReader
    android.media.ImageReader getCpuImageReaderMotionTracking() -> getCpuImageReaderMotionTracking
    android.graphics.SurfaceTexture getGpuSurfaceTexture() -> getGpuSurfaceTexture
    android.view.Surface getGpuSurface() -> getGpuSurface
    void setCaptureCallback(android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler) -> setCaptureCallback
    void nativeSharedCameraOnOpened(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraOnOpened
    void nativeSharedCameraOnClosed(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraOnClosed
    void nativeSharedCameraOnDisconnected(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraOnDisconnected
    android.media.ImageReader nativeSharedCameraGetImageReader(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraGetImageReader
    android.media.ImageReader nativeSharedCameraGetImageReaderMotionTracking(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraGetImageReaderMotionTracking
    android.graphics.SurfaceTexture nativeSharedCameraGetSurfaceTexture(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraGetSurfaceTexture
    android.view.Surface nativeSharedCameraGetSurface(long,android.hardware.camera2.CameraDevice) -> nativeSharedCameraGetSurface
    void nativeSharedCameraSetAppSurfaces(long,java.lang.String,java.util.List) -> nativeSharedCameraSetAppSurfaces
    void nativeSharedCameraCaptureSessionActive(long,android.hardware.camera2.CameraCaptureSession) -> nativeSharedCameraCaptureSessionActive
    void nativeSharedCameraCaptureSessionClosed(long,android.hardware.camera2.CameraCaptureSession) -> nativeSharedCameraCaptureSessionClosed
    void nativeSharedCameraCaptureSessionConfigureFailed(long,android.hardware.camera2.CameraCaptureSession) -> nativeSharedCameraCaptureSessionConfigureFailed
    void nativeSharedCameraCaptureSessionConfigured(long,android.hardware.camera2.CameraCaptureSession) -> nativeSharedCameraCaptureSessionConfigured
    void nativeSharedCameraCaptureSessionReady(long,android.hardware.camera2.CameraCaptureSession) -> nativeSharedCameraCaptureSessionReady
    void nativeSharedCameraSetCaptureCallback(long,android.hardware.camera2.CameraCaptureSession$CaptureCallback,android.os.Handler) -> nativeSharedCameraSetCaptureCallback
    void lambda$setDummyOnImageAvailableListener$0$SharedCamera(android.media.ImageReader) -> lambda$setDummyOnImageAvailableListener$0$SharedCamera
    void access$100(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraDevice) -> access$100
    void access$300(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraDevice) -> access$300
    android.graphics.SurfaceTexture access$400(com.google.ar.core.SharedCamera) -> access$400
    android.view.Surface access$500(com.google.ar.core.SharedCamera) -> access$500
    void access$600(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraDevice) -> access$600
    void access$700(com.google.ar.core.SharedCamera) -> access$700
    void access$800(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession) -> access$800
    void access$900(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession) -> access$900
    void access$1000(com.google.ar.core.SharedCamera) -> access$1000
    void access$1100(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession) -> access$1100
    void access$1200(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession) -> access$1200
    void access$1300(com.google.ar.core.SharedCamera,android.hardware.camera2.CameraCaptureSession) -> access$1300
    com.google.ar.core.au access$200(com.google.ar.core.SharedCamera) -> access$200
com.google.ar.core.Trackable -> com.google.ar.core.Trackable:
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    java.util.Collection getAnchors() -> getAnchors
com.google.ar.core.TrackableBase -> com.google.ar.core.TrackableBase:
    long nativeHandle -> nativeHandle
    com.google.ar.core.Session session -> session
    long nativeSymbolTableHandle -> nativeSymbolTableHandle
    void <init>(long,com.google.ar.core.Session) -> <init>
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    void finalize() -> finalize
    com.google.ar.core.TrackingState getTrackingState() -> getTrackingState
    com.google.ar.core.Anchor createAnchor(com.google.ar.core.Pose) -> createAnchor
    java.util.Collection getAnchors() -> getAnchors
    void internalReleaseNativeHandle(long,long) -> internalReleaseNativeHandle
    int internalGetType(long,long) -> internalGetType
    void nativeReleaseTrackable(long,long) -> nativeReleaseTrackable
    int nativeGetType(long,long) -> nativeGetType
    int nativeGetTrackingState(long,long) -> nativeGetTrackingState
    long nativeCreateAnchor(long,long,com.google.ar.core.Pose) -> nativeCreateAnchor
    long[] nativeGetAnchors(long,long) -> nativeGetAnchors
com.google.ar.core.TrackingFailureReason -> com.google.ar.core.TrackingFailureReason:
    com.google.ar.core.TrackingFailureReason NONE -> NONE
    com.google.ar.core.TrackingFailureReason BAD_STATE -> BAD_STATE
    com.google.ar.core.TrackingFailureReason INSUFFICIENT_LIGHT -> INSUFFICIENT_LIGHT
    com.google.ar.core.TrackingFailureReason EXCESSIVE_MOTION -> EXCESSIVE_MOTION
    com.google.ar.core.TrackingFailureReason INSUFFICIENT_FEATURES -> INSUFFICIENT_FEATURES
    com.google.ar.core.TrackingFailureReason CAMERA_UNAVAILABLE -> CAMERA_UNAVAILABLE
    int nativeCode -> nativeCode
    com.google.ar.core.TrackingFailureReason[] $VALUES -> $VALUES
    com.google.ar.core.TrackingFailureReason[] values() -> values
    com.google.ar.core.TrackingFailureReason valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.TrackingFailureReason forNumber(int) -> forNumber
    com.google.ar.core.TrackingFailureReason[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.TrackingState -> com.google.ar.core.TrackingState:
    com.google.ar.core.TrackingState TRACKING -> TRACKING
    com.google.ar.core.TrackingState PAUSED -> PAUSED
    com.google.ar.core.TrackingState STOPPED -> STOPPED
    int nativeCode -> nativeCode
    com.google.ar.core.TrackingState[] $VALUES -> $VALUES
    com.google.ar.core.TrackingState[] values() -> values
    com.google.ar.core.TrackingState valueOf(java.lang.String) -> valueOf
    void <init>(java.lang.String,int,int) -> <init>
    com.google.ar.core.TrackingState forNumber(int) -> forNumber
    com.google.ar.core.TrackingState[] $values() -> $values
    void <clinit>() -> <clinit>
com.google.ar.core.a -> com.google.ar.core.a:
    android.app.PendingIntent a(android.content.Context) -> a
com.google.ar.core.aa -> com.google.ar.core.b:
    java.util.Map a -> a
    com.google.ar.core.u b -> b
    com.google.ar.core.w c -> c
    void onCreated(int) -> onCreated
    void onBadgingChanged(int) -> onBadgingChanged
    void onActiveChanged(int,boolean) -> onActiveChanged
    void onProgressChanged(int,float) -> onProgressChanged
    void onFinished(int,boolean) -> onFinished
    void <init>(com.google.ar.core.w,com.google.ar.core.u) -> <init>
com.google.ar.core.ab -> com.google.ar.core.c:
    com.google.ar.core.u a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void <init>(com.google.ar.core.u) -> <init>
com.google.ar.core.ac -> com.google.ar.core.d:
    java.util.concurrent.atomic.AtomicBoolean a -> a
    com.google.ar.core.ae b -> b
    void <init>(com.google.ar.core.ae,java.util.concurrent.atomic.AtomicBoolean) -> <init>
    void b(android.os.Bundle) -> a
    void c(android.os.Bundle) -> b
com.google.ar.core.ad -> com.google.ar.core.e:
    java.util.concurrent.atomic.AtomicBoolean a -> a
    com.google.ar.core.ae b -> b
    void <init>(com.google.ar.core.ae,java.util.concurrent.atomic.AtomicBoolean) -> <init>
    void run() -> run
com.google.ar.core.ae -> com.google.ar.core.f:
    android.app.Activity a -> a
    com.google.ar.core.u b -> b
    com.google.ar.core.w c -> c
    void run() -> run
    void <init>(com.google.ar.core.w,android.app.Activity,com.google.ar.core.u) -> <init>
com.google.ar.core.af -> com.google.ar.core.g:
    void <init>() -> <init>
com.google.ar.core.ag -> com.google.ar.core.h:
    com.google.ar.core.ag a -> a
    com.google.ar.core.ag b -> b
    com.google.ar.core.ag c -> c
    com.google.ar.core.ag d -> d
    com.google.ar.core.ag e -> e
    com.google.ar.core.ag f -> f
    com.google.ar.core.ag g -> g
    com.google.ar.core.ag h -> h
    com.google.ar.core.ag i -> i
    com.google.ar.core.ag j -> j
    com.google.ar.core.ag k -> k
    com.google.ar.core.ag l -> l
    com.google.ar.core.ag m -> m
    com.google.ar.core.ag n -> n
    com.google.ar.core.ag o -> o
    com.google.ar.core.ag p -> p
    com.google.ar.core.ag q -> q
    com.google.ar.core.ag r -> r
    com.google.ar.core.ag s -> s
    com.google.ar.core.ag t -> t
    com.google.ar.core.ag u -> u
    com.google.ar.core.ag v -> v
    com.google.ar.core.ag w -> w
    com.google.ar.core.ag x -> x
    com.google.ar.core.ag y -> y
    com.google.ar.core.ag z -> z
    com.google.ar.core.ag A -> A
    com.google.ar.core.ag B -> B
    com.google.ar.core.ag C -> C
    com.google.ar.core.ag D -> D
    int E -> E
    java.lang.Class F -> F
    java.lang.String G -> G
    com.google.ar.core.ag[] H -> H
    com.google.ar.core.ag[] values() -> values
    void <init>(java.lang.String,int,int,java.lang.Class) -> <init>
    void <init>(java.lang.String,int,int,java.lang.Class,java.lang.String) -> <init>
    void <clinit>() -> <clinit>
com.google.ar.core.ah -> com.google.ar.core.i:
    com.google.ar.core.ah a -> a
    com.google.ar.core.ah b -> b
    com.google.ar.core.ah c -> c
    com.google.ar.core.ah d -> d
    com.google.ar.core.ah e -> e
    com.google.ar.core.ah f -> f
    com.google.ar.core.ah g -> g
    int h -> h
    java.lang.Class i -> i
    com.google.ar.core.ah[] j -> j
    com.google.ar.core.ah[] values() -> values
    void <init>(java.lang.String,int,int,java.lang.Class) -> <init>
    com.google.ar.core.ah a(java.lang.Class) -> a
    void <clinit>() -> <clinit>
com.google.ar.core.ai -> com.google.ar.core.j:
    android.media.ImageReader$OnImageAvailableListener a -> a
    void <init>() -> <init>
    void onImageAvailable(android.media.ImageReader) -> onImageAvailable
    void <clinit>() -> <clinit>
com.google.ar.core.aj -> com.google.ar.core.k:
    android.hardware.camera2.CameraDevice$StateCallback a -> a
    android.hardware.camera2.CameraDevice b -> b
    void <init>(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice) -> <init>
    void run() -> run
com.google.ar.core.ak -> com.google.ar.core.l:
    android.hardware.camera2.CameraDevice$StateCallback a -> a
    android.hardware.camera2.CameraDevice b -> b
    void <init>(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice) -> <init>
    void run() -> run
com.google.ar.core.al -> com.google.ar.core.m:
    android.hardware.camera2.CameraDevice$StateCallback a -> a
    android.hardware.camera2.CameraDevice b -> b
    void <init>(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice) -> <init>
    void run() -> run
com.google.ar.core.am -> com.google.ar.core.n:
    android.hardware.camera2.CameraDevice$StateCallback a -> a
    android.hardware.camera2.CameraDevice b -> b
    int c -> c
    void <init>(android.hardware.camera2.CameraDevice$StateCallback,android.hardware.camera2.CameraDevice,int) -> <init>
    void run() -> run
com.google.ar.core.an -> com.google.ar.core.o:
    android.os.Handler a -> a
    android.hardware.camera2.CameraDevice$StateCallback b -> b
    com.google.ar.core.SharedCamera c -> c
    int d -> d
    void <init>(com.google.ar.core.SharedCamera,android.os.Handler,android.hardware.camera2.CameraDevice$StateCallback) -> <init>
    void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
    void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    void onError(android.hardware.camera2.CameraDevice,int) -> onError
com.google.ar.core.annotations.NativeEnum -> com.google.ar.core.annotations.NativeEnum:
    java.lang.String value() -> value
com.google.ar.core.annotations.UsedByNative -> com.google.ar.core.annotations.UsedByNative:
    java.lang.String value() -> value
com.google.ar.core.annotations.UsedByReflection -> com.google.ar.core.annotations.UsedByReflection:
    java.lang.String value() -> value
com.google.ar.core.ao -> com.google.ar.core.p:
    android.hardware.camera2.CameraCaptureSession$StateCallback a -> a
    android.hardware.camera2.CameraCaptureSession b -> b
    void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession) -> <init>
    void run() -> run
com.google.ar.core.ap -> com.google.ar.core.q:
    android.hardware.camera2.CameraCaptureSession$StateCallback a -> a
    android.hardware.camera2.CameraCaptureSession b -> b
    void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession) -> <init>
    void run() -> run
com.google.ar.core.aq -> com.google.ar.core.s:
    android.hardware.camera2.CameraCaptureSession$StateCallback a -> a
    android.hardware.camera2.CameraCaptureSession b -> b
    void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession) -> <init>
    void run() -> run
com.google.ar.core.ar -> com.google.ar.core.t:
    android.hardware.camera2.CameraCaptureSession$StateCallback a -> a
    android.hardware.camera2.CameraCaptureSession b -> b
    void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession) -> <init>
    void run() -> run
com.google.ar.core.as -> com.google.ar.core.u:
    android.hardware.camera2.CameraCaptureSession$StateCallback a -> a
    android.hardware.camera2.CameraCaptureSession b -> b
    void <init>(android.hardware.camera2.CameraCaptureSession$StateCallback,android.hardware.camera2.CameraCaptureSession) -> <init>
    void run() -> run
com.google.ar.core.at -> com.google.ar.core.v:
    android.os.Handler a -> a
    android.hardware.camera2.CameraCaptureSession$StateCallback b -> b
    com.google.ar.core.SharedCamera c -> c
    int d -> d
    void <init>(com.google.ar.core.SharedCamera,android.os.Handler,android.hardware.camera2.CameraCaptureSession$StateCallback) -> <init>
    void onClosed(android.hardware.camera2.CameraCaptureSession) -> onClosed
    void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
    void onReady(android.hardware.camera2.CameraCaptureSession) -> onReady
    void onActive(android.hardware.camera2.CameraCaptureSession) -> onActive
com.google.ar.core.au -> com.google.ar.core.w:
    android.hardware.camera2.CameraDevice a -> a
    java.util.Map b -> b
    android.graphics.SurfaceTexture c -> c
    android.view.Surface d -> d
    void <init>() -> <init>
    android.hardware.camera2.CameraDevice a() -> a
    void b(android.hardware.camera2.CameraDevice) -> a
    void c(java.lang.String,java.util.List) -> a
    android.graphics.SurfaceTexture d() -> b
    void e(android.graphics.SurfaceTexture) -> a
    android.view.Surface f() -> c
    void g(android.view.Surface) -> a
    void <init>(byte[]) -> <init>
com.google.ar.core.b -> com.google.ar.core.x:
    boolean isUnknown() -> isUnknown
    void <init>() -> <init>
com.google.ar.core.c -> com.google.ar.core.y:
    boolean isUnknown() -> isUnknown
    boolean isTransient() -> isTransient
    void <init>() -> <init>
com.google.ar.core.d -> com.google.ar.core.z:
    boolean isUnknown() -> isUnknown
    void <init>() -> <init>
com.google.ar.core.e -> com.google.ar.core.aa:
    boolean isUnsupported() -> isUnsupported
    void <init>() -> <init>
com.google.ar.core.exceptions.AnchorNotSupportedForHostingException -> com.google.ar.core.exceptions.AnchorNotSupportedForHostingException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.CameraNotAvailableException -> com.google.ar.core.exceptions.CameraNotAvailableException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.CloudAnchorsNotConfiguredException -> com.google.ar.core.exceptions.CloudAnchorsNotConfiguredException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.DataInvalidFormatException -> com.google.ar.core.exceptions.DataInvalidFormatException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.DataUnsupportedVersionException -> com.google.ar.core.exceptions.DataUnsupportedVersionException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.DeadlineExceededException -> com.google.ar.core.exceptions.DeadlineExceededException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.FatalException -> com.google.ar.core.exceptions.FatalException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
    void <init>(java.lang.String,java.lang.Throwable) -> <init>
com.google.ar.core.exceptions.ImageInsufficientQualityException -> com.google.ar.core.exceptions.ImageInsufficientQualityException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.MetadataNotFoundException -> com.google.ar.core.exceptions.MetadataNotFoundException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.MissingGlContextException -> com.google.ar.core.exceptions.MissingGlContextException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.NotTrackingException -> com.google.ar.core.exceptions.NotTrackingException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.NotYetAvailableException -> com.google.ar.core.exceptions.NotYetAvailableException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.PlaybackFailedException -> com.google.ar.core.exceptions.PlaybackFailedException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.RecordingFailedException -> com.google.ar.core.exceptions.RecordingFailedException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.ResourceExhaustedException -> com.google.ar.core.exceptions.ResourceExhaustedException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.SessionNotPausedException -> com.google.ar.core.exceptions.SessionNotPausedException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.SessionPausedException -> com.google.ar.core.exceptions.SessionPausedException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.SessionUnsupportedException -> com.google.ar.core.exceptions.SessionUnsupportedException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.TextureNotSetException -> com.google.ar.core.exceptions.TextureNotSetException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnavailableApkTooOldException -> com.google.ar.core.exceptions.UnavailableApkTooOldException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnavailableArcoreNotInstalledException -> com.google.ar.core.exceptions.UnavailableArcoreNotInstalledException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnavailableDeviceNotCompatibleException -> com.google.ar.core.exceptions.UnavailableDeviceNotCompatibleException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnavailableException -> com.google.ar.core.exceptions.UnavailableException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnavailableSdkTooOldException -> com.google.ar.core.exceptions.UnavailableSdkTooOldException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnavailableUserDeclinedInstallationException -> com.google.ar.core.exceptions.UnavailableUserDeclinedInstallationException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.exceptions.UnsupportedConfigurationException -> com.google.ar.core.exceptions.UnsupportedConfigurationException:
    void <init>() -> <init>
    void <init>(java.lang.String) -> <init>
com.google.ar.core.f -> com.google.ar.core.ab:
    boolean isSupported() -> isSupported
    void <init>() -> <init>
com.google.ar.core.g -> com.google.ar.core.ac:
    boolean isSupported() -> isSupported
    void <init>() -> <init>
com.google.ar.core.h -> com.google.ar.core.ad:
    boolean isSupported() -> isSupported
    void <init>() -> <init>
com.google.ar.core.i -> com.google.ar.core.ae:
    void a(com.google.ar.core.ArCoreApk$Availability) -> a
com.google.ar.core.j -> com.google.ar.core.af:
    com.google.ar.core.k a -> a
    void <init>(com.google.ar.core.k) -> <init>
    void a(com.google.ar.core.ArCoreApk$Availability) -> a
com.google.ar.core.k -> com.google.ar.core.ag:
    com.google.ar.core.k c -> c
    java.lang.Exception a -> a
    boolean d -> d
    boolean b -> b
    int e -> e
    long f -> f
    com.google.ar.core.ArCoreApk$Availability g -> g
    boolean h -> h
    com.google.ar.core.w i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    void <init>() -> <init>
    com.google.ar.core.k a() -> a
    com.google.ar.core.ArCoreApk$Availability checkAvailability(android.content.Context) -> checkAvailability
    com.google.ar.core.ArCoreApk$InstallStatus requestInstall(android.app.Activity,boolean,com.google.ar.core.ArCoreApk$InstallBehavior,com.google.ar.core.ArCoreApk$UserMessageType) -> requestInstall
    com.google.ar.core.ArCoreApk$InstallStatus requestInstall(android.app.Activity,boolean) -> requestInstall
    com.google.ar.core.w b(android.content.Context) -> a
    void c() -> b
    boolean d(android.content.Context) -> b
    boolean g(android.content.Context) -> c
    boolean h() -> c
    int i(android.content.Context) -> d
    void j(android.content.Context) -> e
    void <clinit>() -> <clinit>
    void e(com.google.ar.core.k,com.google.ar.core.ArCoreApk$Availability) -> a
    void f(com.google.ar.core.k) -> a
    com.google.ar.core.ArCoreApk$InstallStatus k(android.app.Activity) -> a
com.google.ar.core.l -> com.google.ar.core.ah:
    long b -> b
    int c -> c
    com.google.ar.core.ArImage a -> a
    void <init>(com.google.ar.core.ArImage,long,int) -> <init>
    int getRowStride() -> getRowStride
    int getPixelStride() -> getPixelStride
    java.nio.ByteBuffer getBuffer() -> getBuffer
com.google.ar.core.m -> com.google.ar.core.ai:
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    void <init>() -> <init>
com.google.ar.core.n -> com.google.ar.core.aj:
    java.util.Map a -> a
    void <init>() -> <init>
    com.google.ar.core.AugmentedFace a(long,com.google.ar.core.Session) -> a
com.google.ar.core.o -> com.google.ar.core.ak:
    long a -> a
    int b -> b
    int c -> c
    void <init>() -> <init>
com.google.ar.core.p -> com.google.ar.core.al:
    java.util.concurrent.atomic.AtomicReference a -> a
    void a(com.google.ar.core.ArCoreApk$Availability) -> a
    void <init>(java.util.concurrent.atomic.AtomicReference) -> <init>
com.google.ar.core.q -> com.google.ar.core.am:
    com.google.ar.core.InstallActivity a -> a
    void <init>(com.google.ar.core.InstallActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.google.ar.core.r -> com.google.ar.core.an:
    com.google.ar.core.InstallActivity a -> a
    void <init>(com.google.ar.core.InstallActivity) -> <init>
    void onClick(android.view.View) -> onClick
com.google.ar.core.s -> com.google.ar.core.ao:
    int a -> a
    int b -> b
    int c -> c
    com.google.ar.core.InstallActivity d -> d
    void <init>(com.google.ar.core.InstallActivity,int,int,int) -> <init>
    void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
com.google.ar.core.t -> com.google.ar.core.ap:
    com.google.ar.core.InstallActivity a -> a
    void <init>(com.google.ar.core.InstallActivity) -> <init>
    void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
com.google.ar.core.u -> com.google.ar.core.aq:
    boolean a -> a
    com.google.ar.core.InstallActivity b -> b
    void <init>(com.google.ar.core.InstallActivity) -> <init>
    void a(com.google.ar.core.v) -> a
    void b(java.lang.Exception) -> a
com.google.ar.core.v -> com.google.ar.core.ar:
    com.google.ar.core.v a -> a
    com.google.ar.core.v b -> b
    com.google.ar.core.v c -> c
    com.google.ar.core.v[] d -> d
    com.google.ar.core.v[] values() -> values
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.google.ar.core.w -> com.google.ar.core.as:
    java.util.Queue a -> a
    android.content.Context b -> b
    com.google.a.b.a.a.a.c c -> c
    android.content.ServiceConnection d -> d
    android.content.BroadcastReceiver e -> e
    android.content.Context f -> f
    android.content.pm.PackageInstaller g -> g
    android.content.pm.PackageInstaller$SessionCallback h -> h
    int i -> i
    void <init>() -> <init>
    void a(android.content.Context) -> a
    void b() -> a
    void c(android.content.Context,com.google.ar.core.i) -> a
    void l(android.os.IBinder) -> a
    void m() -> c
    void n(java.lang.Runnable) -> a
    void d(android.app.Activity,com.google.ar.core.u) -> a
    void e(com.google.ar.core.w,android.os.IBinder) -> a
    void f(com.google.ar.core.w) -> a
    com.google.a.b.a.a.a.c g(com.google.ar.core.w) -> b
    android.content.pm.PackageInstaller h(com.google.ar.core.w) -> c
    void i(com.google.ar.core.w,android.app.Activity,com.google.ar.core.u) -> a
    void j(com.google.ar.core.w,android.app.Activity,android.os.Bundle,com.google.ar.core.u) -> a
    void <init>(byte[]) -> <init>
    android.os.Bundle k() -> b
    void o(android.app.Activity,com.google.ar.core.u) -> b
    void p(android.app.Activity,android.os.Bundle,com.google.ar.core.u) -> a
com.google.ar.core.x -> com.google.ar.core.at:
    com.google.ar.core.w a -> a
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void <init>(com.google.ar.core.w) -> <init>
com.google.ar.core.y -> com.google.ar.core.au:
    com.google.ar.core.z a -> a
    void <init>(com.google.ar.core.z) -> <init>
    void c(android.os.Bundle) -> b
    void b(android.os.Bundle) -> a
com.google.ar.core.z -> com.google.ar.core.av:
    android.content.Context a -> a
    com.google.ar.core.i b -> b
    com.google.ar.core.w c -> c
    void run() -> run
    void <init>(com.google.ar.core.w,android.content.Context,com.google.ar.core.i) -> <init>
com.google.vr.dynamite.client.DynamiteClient -> com.google.vr.dynamite.client.DynamiteClient:
    android.util.ArrayMap a -> a
    void <init>() -> <init>
    int checkVersion(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> checkVersion
    long loadNativeRemoteLibrary(android.content.Context,java.lang.String,java.lang.String) -> loadNativeRemoteLibrary
    java.lang.ClassLoader getRemoteClassLoader(android.content.Context,java.lang.String,java.lang.String) -> getRemoteClassLoader
    java.lang.ClassLoader getRemoteDexClassLoader(android.content.Context,java.lang.String) -> getRemoteDexClassLoader
    android.content.Context getRemoteContext(android.content.Context,java.lang.String,java.lang.String) -> getRemoteContext
    void <clinit>() -> <clinit>
    com.google.vr.dynamite.client.e getRemoteLibraryLoaderFromInfo(com.google.vr.dynamite.client.f) -> getRemoteLibraryLoaderFromInfo
com.google.vr.dynamite.client.ILoadedInstanceCreator -> com.google.vr.dynamite.client.ILoadedInstanceCreator:
    com.google.vr.dynamite.client.INativeLibraryLoader newNativeLibraryLoader(com.google.vr.dynamite.client.IObjectWrapper,com.google.vr.dynamite.client.IObjectWrapper) -> newNativeLibraryLoader
com.google.vr.dynamite.client.INativeLibraryLoader -> com.google.vr.dynamite.client.INativeLibraryLoader:
    long initializeAndLoadNativeLibrary(java.lang.String) -> initializeAndLoadNativeLibrary
    int checkVersion(java.lang.String) -> checkVersion
com.google.vr.dynamite.client.IObjectWrapper -> com.google.vr.dynamite.client.IObjectWrapper:
com.google.vr.dynamite.client.ObjectWrapper -> com.google.vr.dynamite.client.ObjectWrapper:
    java.lang.Object wrappedObject -> wrappedObject
    void <init>(java.lang.Object) -> <init>
    java.lang.Object unwrap(com.google.vr.dynamite.client.IObjectWrapper,java.lang.Class) -> unwrap
    com.google.vr.dynamite.client.IObjectWrapper b(java.lang.Object) -> a
com.google.vr.dynamite.client.UsedByNative -> com.google.vr.dynamite.client.UsedByNative:
com.google.vr.dynamite.client.UsedByReflection -> com.google.vr.dynamite.client.UsedByReflection:
com.google.vr.dynamite.client.a -> com.google.vr.dynamite.client.a:
    void <init>(android.os.IBinder) -> <init>
    com.google.vr.dynamite.client.INativeLibraryLoader newNativeLibraryLoader(com.google.vr.dynamite.client.IObjectWrapper,com.google.vr.dynamite.client.IObjectWrapper) -> newNativeLibraryLoader
com.google.vr.dynamite.client.b -> com.google.vr.dynamite.client.b:
    void <init>(android.os.IBinder) -> <init>
    long initializeAndLoadNativeLibrary(java.lang.String) -> initializeAndLoadNativeLibrary
    int checkVersion(java.lang.String) -> checkVersion
com.google.vr.dynamite.client.c -> com.google.vr.dynamite.client.c:
    void <init>() -> <init>
com.google.vr.dynamite.client.d -> com.google.vr.dynamite.client.d:
    int a -> a
    java.lang.String getMessage() -> getMessage
    void <init>() -> <init>
com.google.vr.dynamite.client.e -> com.google.vr.dynamite.client.e:
    android.content.Context a -> a
    com.google.vr.dynamite.client.ILoadedInstanceCreator b -> b
    com.google.vr.dynamite.client.f c -> c
    void <init>(com.google.vr.dynamite.client.f) -> <init>
    com.google.vr.dynamite.client.ILoadedInstanceCreator a(android.content.Context) -> a
    android.content.Context b(android.content.Context) -> b
    android.os.IBinder c(java.lang.ClassLoader) -> a
com.google.vr.dynamite.client.f -> com.google.vr.dynamite.client.f:
    java.lang.String a -> a
    java.lang.String b -> b
    void <init>(java.lang.String,java.lang.String) -> <init>
    java.lang.String a() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
com.unity3d.player.AudioVolumeHandler -> com.unity3d.player.AudioVolumeHandler:
    com.unity3d.player.a a -> a
    void onAudioVolumeChanged(int) -> onAudioVolumeChanged
    void <init>(android.content.Context) -> <init>
    void a() -> a
com.unity3d.player.BuildConfig -> com.unity3d.player.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String LIBRARY_PACKAGE_NAME -> LIBRARY_PACKAGE_NAME
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    java.lang.String FLAVOR -> FLAVOR
    int VERSION_CODE -> VERSION_CODE
    java.lang.String VERSION_NAME -> VERSION_NAME
    void <init>() -> <init>
com.unity3d.player.Camera2Wrapper -> com.unity3d.player.Camera2Wrapper:
    android.content.Context a -> a
    com.unity3d.player.b b -> b
    int c -> c
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void initCamera2Jni() -> initCamera2Jni
    void deinitCamera2Jni() -> deinitCamera2Jni
    void nativeFrameReady(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> nativeFrameReady
    void nativeSurfaceTextureReady(java.lang.Object) -> nativeSurfaceTextureReady
    int getCamera2Count() -> getCamera2Count
    int getCamera2SensorOrientation(int) -> getCamera2SensorOrientation
    boolean isCamera2FrontFacing(int) -> isCamera2FrontFacing
    int getCamera2FocalLengthEquivalent(int) -> getCamera2FocalLengthEquivalent
    int[] getCamera2Resolutions(int) -> getCamera2Resolutions
    boolean initializeCamera2(int,int,int,int,int) -> initializeCamera2
    boolean isCamera2AutoFocusPointSupported(int) -> isCamera2AutoFocusPointSupported
    boolean setAutoFocusPoint(float,float) -> setAutoFocusPoint
    android.graphics.Rect getFrameSizeCamera2() -> getFrameSizeCamera2
    void closeCamera2() -> closeCamera2
    void startCamera2() -> startCamera2
    void pauseCamera2() -> pauseCamera2
    void stopCamera2() -> stopCamera2
    int a(float) -> a
    java.lang.Object getCameraFocusArea(float,float) -> getCameraFocusArea
    void a(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> a
    void a(java.lang.Object) -> a
com.unity3d.player.GoogleARCoreApi -> com.unity3d.player.GoogleARCoreApi:
    void <init>() -> <init>
    void initializeARCore(android.app.Activity) -> initializeARCore
    void pauseARCore() -> pauseARCore
    void resumeARCore() -> resumeARCore
com.unity3d.player.HFPStatus -> com.unity3d.player.HFPStatus:
    android.content.Context a -> a
    android.content.BroadcastReceiver b -> b
    android.content.Intent c -> c
    boolean d -> d
    android.media.AudioManager e -> e
    int f -> f
    void initHFPStatusJni() -> initHFPStatusJni
    void deinitHFPStatusJni() -> deinitHFPStatusJni
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void requestHFPStat() -> requestHFPStat
    boolean getHFPStat() -> getHFPStat
    boolean a(com.unity3d.player.HFPStatus) -> a
    android.media.AudioManager b(com.unity3d.player.HFPStatus) -> b
    boolean a(com.unity3d.player.HFPStatus,boolean) -> a
    int a(com.unity3d.player.HFPStatus,int) -> a
    int c(com.unity3d.player.HFPStatus) -> c
com.unity3d.player.HFPStatus$1 -> com.unity3d.player.HFPStatus$1:
    com.unity3d.player.HFPStatus a -> a
    void <init>(com.unity3d.player.HFPStatus) -> <init>
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.unity3d.player.HFPStatus$a -> com.unity3d.player.HFPStatus$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.IPermissionRequestCallbacks -> com.unity3d.player.IPermissionRequestCallbacks:
    void onPermissionGranted(java.lang.String) -> onPermissionGranted
    void onPermissionDenied(java.lang.String) -> onPermissionDenied
    void onPermissionDeniedAndDontAskAgain(java.lang.String) -> onPermissionDeniedAndDontAskAgain
com.unity3d.player.IUnityPlayerLifecycleEvents -> com.unity3d.player.IUnityPlayerLifecycleEvents:
    void onUnityPlayerUnloaded() -> onUnityPlayerUnloaded
    void onUnityPlayerQuitted() -> onUnityPlayerQuitted
com.unity3d.player.NativeLoader -> com.unity3d.player.NativeLoader:
    boolean load(java.lang.String) -> load
    boolean unload() -> unload
com.unity3d.player.NetworkConnectivity -> com.unity3d.player.NetworkConnectivity:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    android.net.ConnectivityManager e -> e
    android.net.ConnectivityManager$NetworkCallback f -> f
    int a() -> a
    void <init>(android.content.Context) -> <init>
    void b() -> b
    int a(com.unity3d.player.NetworkConnectivity,int) -> a
com.unity3d.player.NetworkConnectivity$1 -> com.unity3d.player.NetworkConnectivity$1:
    com.unity3d.player.NetworkConnectivity a -> a
    void <init>(com.unity3d.player.NetworkConnectivity) -> <init>
    void onAvailable(android.net.Network) -> onAvailable
    void onCapabilitiesChanged(android.net.Network,android.net.NetworkCapabilities) -> onCapabilitiesChanged
    void onUnavailable() -> onUnavailable
    void onLost(android.net.Network) -> onLost
com.unity3d.player.PlatformSupport -> com.unity3d.player.PlatformSupport:
    boolean LOLLIPOP_SUPPORT -> LOLLIPOP_SUPPORT
    boolean MARSHMALLOW_SUPPORT -> MARSHMALLOW_SUPPORT
    boolean NOUGAT_SUPPORT -> NOUGAT_SUPPORT
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.unity3d.player.R -> com.unity3d.player.R:
    void <init>() -> <init>
com.unity3d.player.R$id -> com.unity3d.player.R$id:
    int __arcore_cancelButton -> __arcore_cancelButton
    int __arcore_continueButton -> __arcore_continueButton
    int __arcore_messageText -> __arcore_messageText
    void <init>() -> <init>
com.unity3d.player.R$layout -> com.unity3d.player.R$layout:
    int __arcore_education -> __arcore_education
    void <init>() -> <init>
com.unity3d.player.R$raw -> com.unity3d.player.R$raw:
    int keep_arcore -> keep_arcore
    void <init>() -> <init>
com.unity3d.player.R$string -> com.unity3d.player.R$string:
    int __arcore_cancel -> __arcore_cancel
    int __arcore_continue -> __arcore_continue
    int __arcore_install_app -> __arcore_install_app
    int __arcore_install_feature -> __arcore_install_feature
    int __arcore_installing -> __arcore_installing
    int vuforia_share_chooser_title -> vuforia_share_chooser_title
    void <init>() -> <init>
com.unity3d.player.R$style -> com.unity3d.player.R$style:
    int BaseUnityTheme -> BaseUnityTheme
    int UnityThemeSelector -> UnityThemeSelector
    int UnityThemeSelector_Translucent -> UnityThemeSelector_Translucent
    void <init>() -> <init>
com.unity3d.player.R$xml -> com.unity3d.player.R$xml:
    int filepaths -> filepaths
    void <init>() -> <init>
com.unity3d.player.ReflectionHelper -> com.unity3d.player.ReflectionHelper:
    boolean LOG -> LOG
    boolean LOGV -> LOGV
    com.unity3d.player.ReflectionHelper$a[] a -> a
    long b -> b
    void <init>() -> <init>
    boolean a(com.unity3d.player.ReflectionHelper$a) -> a
    void a(com.unity3d.player.ReflectionHelper$a,java.lang.reflect.Member) -> a
    java.lang.reflect.Constructor getConstructorID(java.lang.Class,java.lang.String) -> getConstructorID
    java.lang.reflect.Method getMethodID(java.lang.Class,java.lang.String,java.lang.String,boolean) -> getMethodID
    java.lang.reflect.Field getFieldID(java.lang.Class,java.lang.String,java.lang.String,boolean) -> getFieldID
    java.lang.String getFieldSignature(java.lang.reflect.Field) -> getFieldSignature
    float a(java.lang.Class,java.lang.Class) -> a
    float a(java.lang.Class,java.lang.Class[],java.lang.Class[]) -> a
    java.lang.Class[] a(java.lang.String) -> a
    java.lang.Class a(java.lang.String,int[]) -> a
    java.lang.Object nativeProxyInvoke(long,java.lang.String,java.lang.Object[]) -> nativeProxyInvoke
    void nativeProxyFinalize(long) -> nativeProxyFinalize
    void nativeProxyLogJNIInvokeException(long) -> nativeProxyLogJNIInvokeException
    void endUnityLaunch() -> endUnityLaunch
    java.lang.Object newProxyInstance(long,java.lang.Class) -> newProxyInstance
    void setNativeExceptionOnProxy(java.lang.Object,long,boolean) -> setNativeExceptionOnProxy
    java.lang.Object newProxyInstance(long,java.lang.Class[]) -> newProxyInstance
    long a() -> a
    void a(long) -> a
    java.lang.Object a(long,java.lang.String,java.lang.Object[]) -> a
    void b(long) -> b
    void <clinit>() -> <clinit>
com.unity3d.player.ReflectionHelper$1 -> com.unity3d.player.ReflectionHelper$1:
    long c -> c
    long d -> d
    boolean e -> e
    long a -> a
    java.lang.Class[] b -> b
    void <init>(long,java.lang.Class[]) -> <init>
    java.lang.Object a(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    void a(long,boolean) -> a
    void finalize() -> finalize
com.unity3d.player.ReflectionHelper$a -> com.unity3d.player.ReflectionHelper$a:
    java.lang.Class b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    java.lang.reflect.Member a -> a
    void <init>(java.lang.Class,java.lang.String,java.lang.String) -> <init>
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.unity3d.player.ReflectionHelper$b -> com.unity3d.player.ReflectionHelper$b:
    void a(long,boolean) -> a
com.unity3d.player.UnityPermissions -> com.unity3d.player.UnityPermissions:
    java.lang.String SKIP_DIALOG_METADATA_NAME -> SKIP_DIALOG_METADATA_NAME
    void <init>() -> <init>
    boolean checkInfoForMetadata(android.content.pm.PackageItemInfo) -> checkInfoForMetadata
    boolean skipPermissionsDialog(android.app.Activity) -> skipPermissionsDialog
    boolean hasUserAuthorizedPermission(android.app.Activity,java.lang.String) -> hasUserAuthorizedPermission
    void requestUserPermissions(android.app.Activity,java.lang.String[],com.unity3d.player.IPermissionRequestCallbacks) -> requestUserPermissions
com.unity3d.player.UnityPlayer -> com.unity3d.player.UnityPlayer:
    android.app.Activity currentActivity -> currentActivity
    int mInitialScreenOrientation -> mInitialScreenOrientation
    boolean mMainDisplayOverride -> mMainDisplayOverride
    boolean mIsFullscreen -> mIsFullscreen
    com.unity3d.player.j mState -> mState
    java.util.concurrent.ConcurrentLinkedQueue m_Events -> m_Events
    android.content.BroadcastReceiver mKillingIsMyBusiness -> mKillingIsMyBusiness
    android.view.OrientationEventListener mOrientationListener -> mOrientationListener
    int mNaturalOrientation -> mNaturalOrientation
    int ANR_TIMEOUT_SECONDS -> ANR_TIMEOUT_SECONDS
    int RUN_STATE_CHANGED_MSG_CODE -> RUN_STATE_CHANGED_MSG_CODE
    com.unity3d.player.UnityPlayer$e m_MainThread -> m_MainThread
    boolean m_AddPhoneCallListener -> m_AddPhoneCallListener
    com.unity3d.player.UnityPlayer$c m_PhoneCallListener -> m_PhoneCallListener
    android.telephony.TelephonyManager m_TelephonyManager -> m_TelephonyManager
    android.content.ClipboardManager m_ClipboardManager -> m_ClipboardManager
    com.unity3d.player.h m_SplashScreen -> m_SplashScreen
    com.unity3d.player.f m_PersistentUnitySurface -> m_PersistentUnitySurface
    com.unity3d.player.GoogleARCoreApi m_ARCoreApi -> m_ARCoreApi
    com.unity3d.player.UnityPlayer$a m_FakeListener -> m_FakeListener
    com.unity3d.player.Camera2Wrapper m_Camera2Wrapper -> m_Camera2Wrapper
    com.unity3d.player.HFPStatus m_HFPStatus -> m_HFPStatus
    com.unity3d.player.AudioVolumeHandler m_AudioVolumeHandler -> m_AudioVolumeHandler
    android.net.Uri m_launchUri -> m_launchUri
    com.unity3d.player.NetworkConnectivity m_NetworkConnectivity -> m_NetworkConnectivity
    com.unity3d.player.IUnityPlayerLifecycleEvents m_UnityPlayerLifecycleEvents -> m_UnityPlayerLifecycleEvents
    android.content.Context mContext -> mContext
    android.view.SurfaceView mGlView -> mGlView
    boolean mQuitting -> mQuitting
    boolean mProcessKillRequested -> mProcessKillRequested
    com.unity3d.player.l mVideoPlayerProxy -> mVideoPlayerProxy
    com.unity3d.player.g mSoftInputDialog -> mSoftInputDialog
    java.lang.String SPLASH_ENABLE_METADATA_NAME -> SPLASH_ENABLE_METADATA_NAME
    java.lang.String SPLASH_MODE_METADATA_NAME -> SPLASH_MODE_METADATA_NAME
    java.lang.String ARCORE_ENABLE_METADATA_NAME -> ARCORE_ENABLE_METADATA_NAME
    void <init>(android.content.Context) -> <init>
    void <init>(android.content.Context,com.unity3d.player.IUnityPlayerLifecycleEvents) -> <init>
    int getNaturalOrientation(int) -> getNaturalOrientation
    void onUnityPlayerUnloaded() -> onUnityPlayerUnloaded
    void onUnityPlayerQuitted() -> onUnityPlayerQuitted
    void toggleGyroscopeSensor(boolean) -> toggleGyroscopeSensor
    java.lang.String GetGlViewContentDescription(android.content.Context) -> GetGlViewContentDescription
    void DisableStaticSplashScreen() -> DisableStaticSplashScreen
    void EarlyEnableFullScreenIfVrLaunched(android.app.Activity) -> EarlyEnableFullScreenIfVrLaunched
    boolean IsWindowTranslucent() -> IsWindowTranslucent
    android.view.SurfaceView CreateGlView() -> CreateGlView
    void sendSurfaceChangedEvent() -> sendSurfaceChangedEvent
    void updateGLDisplay(int,android.view.Surface) -> updateGLDisplay
    boolean updateDisplayInternal(int,android.view.Surface) -> updateDisplayInternal
    boolean displayChanged(int,android.view.Surface) -> displayChanged
    void UnitySendMessage(java.lang.String,java.lang.String,java.lang.String) -> UnitySendMessage
    void nativeUnitySendMessage(java.lang.String,java.lang.String,byte[]) -> nativeUnitySendMessage
    void finish() -> finish
    void runOnAnonymousThread(java.lang.Runnable) -> runOnAnonymousThread
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    void postOnUiThread(java.lang.Runnable) -> postOnUiThread
    void init(int,boolean) -> init
    android.view.View getView() -> getView
    android.os.Bundle getSettings() -> getSettings
    void quit() -> quit
    void newIntent(android.content.Intent) -> newIntent
    void destroy() -> destroy
    void kill() -> kill
    void pause() -> pause
    void pauseUnity() -> pauseUnity
    void resume() -> resume
    void lowMemory() -> lowMemory
    void shutdown() -> shutdown
    void unload() -> unload
    void checkResumePlayer() -> checkResumePlayer
    boolean skipPermissionsDialog() -> skipPermissionsDialog
    void requestUserAuthorization(java.lang.String) -> requestUserAuthorization
    int getNetworkConnectivity() -> getNetworkConnectivity
    void configurationChanged(android.content.res.Configuration) -> configurationChanged
    void windowFocusChanged(boolean) -> windowFocusChanged
    boolean loadLibrary(java.lang.String) -> loadLibrary
    void addPhoneCallListener() -> addPhoneCallListener
    void initJni(android.content.Context) -> initJni
    boolean nativeRender() -> nativeRender
    void nativeSetInputArea(int,int,int,int) -> nativeSetInputArea
    void nativeSetKeyboardIsVisible(boolean) -> nativeSetKeyboardIsVisible
    void nativeSetInputString(java.lang.String) -> nativeSetInputString
    void nativeSetInputSelection(int,int) -> nativeSetInputSelection
    void nativeSoftInputCanceled() -> nativeSoftInputCanceled
    void nativeSoftInputLostFocus() -> nativeSoftInputLostFocus
    void nativeReportKeyboardConfigChanged() -> nativeReportKeyboardConfigChanged
    boolean nativePause() -> nativePause
    void nativeResume() -> nativeResume
    void nativeLowMemory() -> nativeLowMemory
    void nativeApplicationUnload() -> nativeApplicationUnload
    void nativeFocusChanged(boolean) -> nativeFocusChanged
    void nativeRecreateGfxState(int,android.view.Surface) -> nativeRecreateGfxState
    void nativeSendSurfaceChangedEvent() -> nativeSendSurfaceChangedEvent
    boolean nativeDone() -> nativeDone
    void nativeSoftInputClosed() -> nativeSoftInputClosed
    boolean nativeInjectEvent(android.view.InputEvent) -> nativeInjectEvent
    boolean nativeIsAutorotationOn() -> nativeIsAutorotationOn
    void nativeMuteMasterAudio(boolean) -> nativeMuteMasterAudio
    void nativeRestartActivityIndicator() -> nativeRestartActivityIndicator
    void nativeSetLaunchURL(java.lang.String) -> nativeSetLaunchURL
    void nativeOrientationChanged(int,int) -> nativeOrientationChanged
    java.lang.String logLoadLibMainError(java.lang.String,java.lang.String) -> logLoadLibMainError
    java.lang.String loadNative(java.lang.String) -> loadNative
    void unloadNative() -> unloadNative
    java.lang.String getUnityNativeLibraryPath(android.content.Context) -> getUnityNativeLibraryPath
    void showSoftInput(java.lang.String,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean) -> showSoftInput
    void hideSoftInput() -> hideSoftInput
    void setSoftInputStr(java.lang.String) -> setSoftInputStr
    void setCharacterLimit(int) -> setCharacterLimit
    void setHideInputField(boolean) -> setHideInputField
    void setSelection(int,int) -> setSelection
    java.lang.String getKeyboardLayout() -> getKeyboardLayout
    void reportSoftInputStr(java.lang.String,int,boolean) -> reportSoftInputStr
    void reportSoftInputSelection(int,int) -> reportSoftInputSelection
    void reportSoftInputArea(android.graphics.Rect) -> reportSoftInputArea
    void reportSoftInputIsVisible(boolean) -> reportSoftInputIsVisible
    void setClipboardText(java.lang.String) -> setClipboardText
    java.lang.String getClipboardText() -> getClipboardText
    java.lang.String getLaunchURL() -> getLaunchURL
    boolean initializeGoogleAr() -> initializeGoogleAr
    boolean showVideoPlayer(java.lang.String,int,int,int,boolean,int,int) -> showVideoPlayer
    void pauseJavaAndCallUnloadCallback() -> pauseJavaAndCallUnloadCallback
    android.content.pm.ApplicationInfo getApplicationInfo() -> getApplicationInfo
    boolean getSplashEnabled() -> getSplashEnabled
    boolean getARCoreEnabled() -> getARCoreEnabled
    int getSplashMode() -> getSplashMode
    void executeGLThreadJobs() -> executeGLThreadJobs
    void disableLogger() -> disableLogger
    void queueGLThreadEvent(java.lang.Runnable) -> queueGLThreadEvent
    void queueGLThreadEvent(com.unity3d.player.UnityPlayer$f) -> queueGLThreadEvent
    boolean isFinishing() -> isFinishing
    void hideStatusBar() -> hideStatusBar
    boolean injectEvent(android.view.InputEvent) -> injectEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onKeyMultiple(int,int,android.view.KeyEvent) -> onKeyMultiple
    boolean onKeyLongPress(int,android.view.KeyEvent) -> onKeyLongPress
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    void swapViews(android.view.View,android.view.View) -> swapViews
    boolean addViewToPlayer(android.view.View,boolean) -> addViewToPlayer
    void removeViewFromPlayer(android.view.View) -> removeViewFromPlayer
    void reportError(java.lang.String,java.lang.String) -> reportError
    java.lang.String getNetworkProxySettings(java.lang.String) -> getNetworkProxySettings
    boolean startOrientationListener(int) -> startOrientationListener
    boolean stopOrientationListener() -> stopOrientationListener
    void access$000(com.unity3d.player.UnityPlayer,boolean) -> access$000
    boolean access$100(com.unity3d.player.UnityPlayer) -> access$100
    void access$200(com.unity3d.player.UnityPlayer) -> access$200
    boolean access$300(com.unity3d.player.UnityPlayer) -> access$300
    void access$400(com.unity3d.player.UnityPlayer) -> access$400
    void access$500(com.unity3d.player.UnityPlayer,java.lang.String) -> access$500
    void access$600(com.unity3d.player.UnityPlayer,int,int) -> access$600
    void access$800(com.unity3d.player.UnityPlayer,boolean) -> access$800
    com.unity3d.player.h access$1000(com.unity3d.player.UnityPlayer) -> access$1000
    com.unity3d.player.h access$1002(com.unity3d.player.UnityPlayer,com.unity3d.player.h) -> access$1002
    void access$1100(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> access$1100
    com.unity3d.player.f access$1200(com.unity3d.player.UnityPlayer) -> access$1200
    void access$1300(com.unity3d.player.UnityPlayer) -> access$1300
    android.view.SurfaceView access$1400(com.unity3d.player.UnityPlayer) -> access$1400
    void access$1500(com.unity3d.player.UnityPlayer) -> access$1500
    void access$1600(com.unity3d.player.UnityPlayer,int,android.view.Surface) -> access$1600
    boolean access$1700(com.unity3d.player.UnityPlayer) -> access$1700
    void access$1800(com.unity3d.player.UnityPlayer) -> access$1800
    boolean access$1900(com.unity3d.player.UnityPlayer) -> access$1900
    boolean access$2002(com.unity3d.player.UnityPlayer,boolean) -> access$2002
    void access$2100(com.unity3d.player.UnityPlayer) -> access$2100
    void access$2200(com.unity3d.player.UnityPlayer) -> access$2200
    android.content.Context access$2300(com.unity3d.player.UnityPlayer) -> access$2300
    void access$2400(com.unity3d.player.UnityPlayer) -> access$2400
    void access$2500(com.unity3d.player.UnityPlayer) -> access$2500
    void access$2700(com.unity3d.player.UnityPlayer) -> access$2700
    void access$2800(com.unity3d.player.UnityPlayer,java.lang.String) -> access$2800
    void access$2900(com.unity3d.player.UnityPlayer) -> access$2900
    void access$3000(com.unity3d.player.UnityPlayer,int,int) -> access$3000
    void access$3100(com.unity3d.player.UnityPlayer,int,int,int,int) -> access$3100
    void access$3200(com.unity3d.player.UnityPlayer,boolean) -> access$3200
    com.unity3d.player.l access$3302(com.unity3d.player.UnityPlayer,com.unity3d.player.l) -> access$3302
    boolean access$3400(com.unity3d.player.UnityPlayer) -> access$3400
    int access$3500(com.unity3d.player.UnityPlayer) -> access$3500
    com.unity3d.player.IUnityPlayerLifecycleEvents access$3600(com.unity3d.player.UnityPlayer) -> access$3600
    int access$3700(com.unity3d.player.UnityPlayer) -> access$3700
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$1 -> com.unity3d.player.UnityPlayer$1:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onClick(android.content.DialogInterface,int) -> onClick
com.unity3d.player.UnityPlayer$10 -> com.unity3d.player.UnityPlayer$10:
    boolean a -> a
    java.lang.String b -> b
    int c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,boolean,java.lang.String,int) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$11 -> com.unity3d.player.UnityPlayer$11:
    int a -> a
    int b -> b
    com.unity3d.player.UnityPlayer c -> c
    void <init>(com.unity3d.player.UnityPlayer,int,int) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$12 -> com.unity3d.player.UnityPlayer$12:
    android.graphics.Rect a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,android.graphics.Rect) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$13 -> com.unity3d.player.UnityPlayer$13:
    boolean a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,boolean) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$14 -> com.unity3d.player.UnityPlayer$14:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void a() -> a
com.unity3d.player.UnityPlayer$15 -> com.unity3d.player.UnityPlayer$15:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$16 -> com.unity3d.player.UnityPlayer$16:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$17 -> com.unity3d.player.UnityPlayer$17:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer,android.content.Context,int) -> <init>
    void onOrientationChanged(int) -> onOrientationChanged
com.unity3d.player.UnityPlayer$18 -> com.unity3d.player.UnityPlayer$18:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$19 -> com.unity3d.player.UnityPlayer$19:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.unity3d.player.UnityPlayer$2 -> com.unity3d.player.UnityPlayer$2:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$20 -> com.unity3d.player.UnityPlayer$20:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$21 -> com.unity3d.player.UnityPlayer$21:
    int a -> a
    android.view.Surface b -> b
    java.util.concurrent.Semaphore c -> c
    com.unity3d.player.UnityPlayer d -> d
    void <init>(com.unity3d.player.UnityPlayer,int,android.view.Surface,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$22 -> com.unity3d.player.UnityPlayer$22:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$23 -> com.unity3d.player.UnityPlayer$23:
    java.util.concurrent.Semaphore a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$24 -> com.unity3d.player.UnityPlayer$24:
    java.util.concurrent.Semaphore a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.util.concurrent.Semaphore) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$3 -> com.unity3d.player.UnityPlayer$3:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$3$1 -> com.unity3d.player.UnityPlayer$3$1:
    com.unity3d.player.UnityPlayer$3 a -> a
    void <init>(com.unity3d.player.UnityPlayer$3) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$4 -> com.unity3d.player.UnityPlayer$4:
    com.unity3d.player.UnityPlayer a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    boolean e -> e
    boolean f -> f
    boolean g -> g
    java.lang.String h -> h
    int i -> i
    boolean j -> j
    com.unity3d.player.UnityPlayer k -> k
    void <init>(com.unity3d.player.UnityPlayer,com.unity3d.player.UnityPlayer,java.lang.String,int,boolean,boolean,boolean,boolean,java.lang.String,int,boolean) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$4$1 -> com.unity3d.player.UnityPlayer$4$1:
    com.unity3d.player.UnityPlayer$4 a -> a
    void <init>(com.unity3d.player.UnityPlayer$4) -> <init>
    void onCancel(android.content.DialogInterface) -> onCancel
com.unity3d.player.UnityPlayer$5 -> com.unity3d.player.UnityPlayer$5:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$6 -> com.unity3d.player.UnityPlayer$6:
    java.lang.String a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,java.lang.String) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$7 -> com.unity3d.player.UnityPlayer$7:
    int a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,int) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$8 -> com.unity3d.player.UnityPlayer$8:
    boolean a -> a
    com.unity3d.player.UnityPlayer b -> b
    void <init>(com.unity3d.player.UnityPlayer,boolean) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$9 -> com.unity3d.player.UnityPlayer$9:
    int a -> a
    int b -> b
    com.unity3d.player.UnityPlayer c -> c
    void <init>(com.unity3d.player.UnityPlayer,int,int) -> <init>
    void run() -> run
com.unity3d.player.UnityPlayer$a -> com.unity3d.player.UnityPlayer$a:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.unity3d.player.UnityPlayer$b -> com.unity3d.player.UnityPlayer$b:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$c -> com.unity3d.player.UnityPlayer$c:
    com.unity3d.player.UnityPlayer a -> a
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void onCallStateChanged(int,java.lang.String) -> onCallStateChanged
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayer$d -> com.unity3d.player.UnityPlayer$d:
    com.unity3d.player.UnityPlayer$d a -> a
    com.unity3d.player.UnityPlayer$d b -> b
    com.unity3d.player.UnityPlayer$d c -> c
    com.unity3d.player.UnityPlayer$d d -> d
    com.unity3d.player.UnityPlayer$d e -> e
    com.unity3d.player.UnityPlayer$d f -> f
    com.unity3d.player.UnityPlayer$d g -> g
    com.unity3d.player.UnityPlayer$d h -> h
    com.unity3d.player.UnityPlayer$d i -> i
    com.unity3d.player.UnityPlayer$d j -> j
    com.unity3d.player.UnityPlayer$d[] k -> k
    void <init>(java.lang.String,int) -> <init>
    void <clinit>() -> <clinit>
com.unity3d.player.UnityPlayer$e -> com.unity3d.player.UnityPlayer$e:
    android.os.Handler a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    com.unity3d.player.UnityPlayer i -> i
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
    void a() -> a
    void b() -> b
    void a(java.lang.Runnable) -> a
    void c() -> c
    void d() -> d
    void b(java.lang.Runnable) -> b
    void c(java.lang.Runnable) -> c
    void d(java.lang.Runnable) -> d
    void e() -> e
    void a(com.unity3d.player.UnityPlayer$d) -> a
    void a(int,int) -> a
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayer$e$1 -> com.unity3d.player.UnityPlayer$e$1:
    com.unity3d.player.UnityPlayer$e a -> a
    void <init>(com.unity3d.player.UnityPlayer$e) -> <init>
    void a() -> a
    boolean handleMessage(android.os.Message) -> handleMessage
com.unity3d.player.UnityPlayer$f -> com.unity3d.player.UnityPlayer$f:
    com.unity3d.player.UnityPlayer e -> e
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    void run() -> run
    void a() -> a
    void <init>(com.unity3d.player.UnityPlayer,byte) -> <init>
com.unity3d.player.UnityPlayerActivity -> com.unity3d.player.UnityPlayerActivity:
    com.unity3d.player.UnityPlayer mUnityPlayer -> mUnityPlayer
    void <init>() -> <init>
    java.lang.String updateUnityCommandLineArguments(java.lang.String) -> updateUnityCommandLineArguments
    void onCreate(android.os.Bundle) -> onCreate
    void onUnityPlayerUnloaded() -> onUnityPlayerUnloaded
    void onUnityPlayerQuitted() -> onUnityPlayerQuitted
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onLowMemory() -> onLowMemory
    void onTrimMemory(int) -> onTrimMemory
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
com.unity3d.player.a -> com.unity3d.player.a:
    android.content.Context a -> a
    android.media.AudioManager b -> b
    com.unity3d.player.a$a c -> c
    void <init>(android.content.Context) -> <init>
    void a(com.unity3d.player.a$b) -> a
    void a() -> a
com.unity3d.player.a$a -> com.unity3d.player.a$a:
    com.unity3d.player.a$b b -> b
    android.media.AudioManager c -> c
    int d -> d
    int e -> e
    com.unity3d.player.a a -> a
    void <init>(com.unity3d.player.a,android.os.Handler,android.media.AudioManager,int,com.unity3d.player.a$b) -> <init>
    void onChange(boolean,android.net.Uri) -> onChange
    boolean deliverSelfNotifications() -> deliverSelfNotifications
com.unity3d.player.a$b -> com.unity3d.player.a$b:
    void onAudioVolumeChanged(int) -> onAudioVolumeChanged
com.unity3d.player.b -> com.unity3d.player.b:
    com.unity3d.player.c a -> a
    android.hardware.camera2.CameraManager b -> b
    java.lang.String[] c -> c
    android.hardware.camera2.CameraDevice d -> d
    java.util.concurrent.Semaphore e -> e
    android.os.HandlerThread f -> f
    android.os.Handler g -> g
    android.graphics.Rect h -> h
    android.graphics.Rect i -> i
    int j -> j
    int k -> k
    float l -> l
    float m -> m
    int n -> n
    int o -> o
    boolean p -> p
    android.util.Range q -> q
    android.media.ImageReader r -> r
    android.media.Image s -> s
    android.hardware.camera2.CaptureRequest$Builder t -> t
    android.hardware.camera2.CameraCaptureSession u -> u
    java.lang.Object v -> v
    int w -> w
    android.graphics.SurfaceTexture x -> x
    android.view.Surface y -> y
    int z -> z
    android.hardware.camera2.CameraCaptureSession$CaptureCallback A -> A
    android.hardware.camera2.CameraDevice$StateCallback B -> B
    android.media.ImageReader$OnImageAvailableListener C -> C
    android.graphics.SurfaceTexture$OnFrameAvailableListener D -> D
    void <init>(com.unity3d.player.c) -> <init>
    android.hardware.camera2.CameraManager b(android.content.Context) -> b
    java.lang.String[] c(android.content.Context) -> c
    int a(android.content.Context) -> a
    int a(android.content.Context,int) -> a
    boolean b(android.content.Context,int) -> b
    boolean c(android.content.Context,int) -> c
    int d(android.content.Context,int) -> d
    android.util.Size[] a(android.hardware.camera2.CameraCharacteristics) -> a
    int[] e(android.content.Context,int) -> e
    void g() -> g
    void h() -> h
    boolean a(android.content.Context,int,int,int,int,int) -> a
    void b(android.hardware.camera2.CameraCharacteristics) -> b
    boolean a(float,float) -> a
    android.graphics.Rect a() -> a
    void b() -> b
    void i() -> i
    void a(java.lang.Object) -> a
    void j() -> j
    void k() -> k
    void c() -> c
    void d() -> d
    void e() -> e
    void a(android.hardware.camera2.CameraDevice) -> a
    android.graphics.Rect a(android.util.Size[],double,double) -> a
    int a(android.util.Range[],int) -> a
    void a(com.unity3d.player.b,java.lang.Object) -> a
    android.hardware.camera2.CameraDevice a(com.unity3d.player.b) -> a
    java.lang.Object b(com.unity3d.player.b) -> b
    android.hardware.camera2.CameraCaptureSession a(com.unity3d.player.b,android.hardware.camera2.CameraCaptureSession) -> a
    android.hardware.camera2.CaptureRequest$Builder a(com.unity3d.player.b,android.hardware.camera2.CaptureRequest$Builder) -> a
    android.view.Surface c(com.unity3d.player.b) -> c
    android.hardware.camera2.CaptureRequest$Builder d(com.unity3d.player.b) -> d
    android.media.ImageReader e(com.unity3d.player.b) -> e
    android.util.Range f(com.unity3d.player.b) -> f
    void g(com.unity3d.player.b) -> g
    android.hardware.camera2.CameraDevice a(com.unity3d.player.b,android.hardware.camera2.CameraDevice) -> a
    java.util.concurrent.Semaphore f() -> f
    void b(com.unity3d.player.b,android.hardware.camera2.CameraDevice) -> b
    com.unity3d.player.c h(com.unity3d.player.b) -> h
    android.media.Image i(com.unity3d.player.b) -> i
    android.media.Image a(com.unity3d.player.b,android.media.Image) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.b$1 -> com.unity3d.player.b$1:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
    void onCaptureFailed(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.CaptureFailure) -> onCaptureFailed
    void onCaptureSequenceCompleted(android.hardware.camera2.CameraCaptureSession,int,long) -> onCaptureSequenceCompleted
    void onCaptureSequenceAborted(android.hardware.camera2.CameraCaptureSession,int) -> onCaptureSequenceAborted
com.unity3d.player.b$2 -> com.unity3d.player.b$2:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
com.unity3d.player.b$3 -> com.unity3d.player.b$3:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
    void onClosed(android.hardware.camera2.CameraDevice) -> onClosed
    void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
    void onError(android.hardware.camera2.CameraDevice,int) -> onError
com.unity3d.player.b$4 -> com.unity3d.player.b$4:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onImageAvailable(android.media.ImageReader) -> onImageAvailable
com.unity3d.player.b$5 -> com.unity3d.player.b$5:
    com.unity3d.player.b a -> a
    void <init>(com.unity3d.player.b) -> <init>
    void onFrameAvailable(android.graphics.SurfaceTexture) -> onFrameAvailable
com.unity3d.player.b$a -> com.unity3d.player.b$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    void <clinit>() -> <clinit>
com.unity3d.player.c -> com.unity3d.player.c:
    void a(java.lang.Object,java.lang.Object,java.lang.Object,int,int,int) -> a
    void a(java.lang.Object) -> a
com.unity3d.player.d -> com.unity3d.player.d:
    boolean a -> a
    void Log(int,java.lang.String) -> Log
    void <clinit>() -> <clinit>
com.unity3d.player.e -> com.unity3d.player.e:
    com.unity3d.player.IPermissionRequestCallbacks a -> a
    android.app.Activity b -> b
    android.os.Looper c -> c
    void <init>() -> <init>
    void <init>(android.app.Activity,com.unity3d.player.IPermissionRequestCallbacks) -> <init>
    void onCreate(android.os.Bundle) -> onCreate
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
com.unity3d.player.e$a -> com.unity3d.player.e$a:
    com.unity3d.player.IPermissionRequestCallbacks b -> b
    java.lang.String c -> c
    int d -> d
    boolean e -> e
    com.unity3d.player.e a -> a
    void <init>(com.unity3d.player.e,com.unity3d.player.IPermissionRequestCallbacks,java.lang.String,int,boolean) -> <init>
    void run() -> run
com.unity3d.player.f -> com.unity3d.player.f:
    java.lang.ref.WeakReference a -> a
    android.app.Activity b -> b
    android.view.View c -> c
    void <init>(android.content.Context) -> <init>
    void a() -> a
    void a(android.view.SurfaceView) -> a
    void a(android.view.ViewGroup) -> a
    void b(android.view.ViewGroup) -> b
    void onActivityResumed(android.app.Activity) -> onActivityResumed
    void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    void onActivityPaused(android.app.Activity) -> onActivityPaused
    void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    void onActivityStarted(android.app.Activity) -> onActivityStarted
    void onActivityStopped(android.app.Activity) -> onActivityStopped
com.unity3d.player.f$a -> com.unity3d.player.f$a:
    android.graphics.Bitmap a -> a
    com.unity3d.player.f b -> b
    void <init>(com.unity3d.player.f,android.content.Context) -> <init>
    void onPixelCopyFinished(int) -> onPixelCopyFinished
    void a(android.view.SurfaceView) -> a
com.unity3d.player.g -> com.unity3d.player.g:
    android.content.Context a -> a
    com.unity3d.player.UnityPlayer b -> b
    int c -> c
    int d -> d
    int e -> e
    void <init>(android.content.Context,com.unity3d.player.UnityPlayer,java.lang.String,int,boolean,boolean,boolean,java.lang.String,int,boolean) -> <init>
    void a(boolean) -> a
    void a(android.widget.EditText,java.lang.String,int,boolean,boolean,boolean,java.lang.String,int) -> a
    void afterTextChanged(android.text.Editable) -> afterTextChanged
    void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    int a(int,boolean,boolean,boolean) -> a
    void a(java.lang.String,boolean) -> a
    void onClick(android.view.View) -> onClick
    void onBackPressed() -> onBackPressed
    android.view.View createSoftInputView() -> createSoftInputView
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    void a(int) -> a
    void a(int,int) -> a
    java.lang.String a() -> a
    com.unity3d.player.UnityPlayer a(com.unity3d.player.g) -> a
    java.lang.String b(com.unity3d.player.g) -> b
    void a(com.unity3d.player.g,java.lang.String,boolean) -> a
    android.content.Context c(com.unity3d.player.g) -> c
    void <clinit>() -> <clinit>
com.unity3d.player.g$1 -> com.unity3d.player.g$1:
    android.view.View a -> a
    com.unity3d.player.g b -> b
    void <init>(com.unity3d.player.g,android.view.View) -> <init>
    void onGlobalLayout() -> onGlobalLayout
com.unity3d.player.g$2 -> com.unity3d.player.g$2:
    com.unity3d.player.g a -> a
    void <init>(com.unity3d.player.g) -> <init>
    void onFocusChange(android.view.View,boolean) -> onFocusChange
com.unity3d.player.g$3 -> com.unity3d.player.g$3:
    com.unity3d.player.g a -> a
    void <init>(com.unity3d.player.g,android.content.Context) -> <init>
    boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    void onSelectionChanged(int,int) -> onSelectionChanged
com.unity3d.player.g$4 -> com.unity3d.player.g$4:
    com.unity3d.player.g a -> a
    void <init>(com.unity3d.player.g) -> <init>
    boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
com.unity3d.player.h -> com.unity3d.player.h:
    int a -> a
    int b -> b
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    void <init>(android.content.Context,int) -> <init>
    void onLayout(boolean,int,int,int,int) -> onLayout
    void onDetachedFromWindow() -> onDetachedFromWindow
com.unity3d.player.h$1 -> com.unity3d.player.h$1:
    int[] a -> a
    void <clinit>() -> <clinit>
com.unity3d.player.h$a -> com.unity3d.player.h$a:
    int a -> a
    int b -> b
    int c -> c
    int[] d -> d
    int[] a() -> a
    void <clinit>() -> <clinit>
com.unity3d.player.i -> com.unity3d.player.i:
    java.lang.Thread$UncaughtExceptionHandler a -> a
    void <init>() -> <init>
    boolean a() -> a
    void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.unity3d.player.j -> com.unity3d.player.j:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    void <init>() -> <init>
    void a() -> a
    void b() -> b
    boolean c() -> c
    void a(boolean) -> a
    void b(boolean) -> b
    boolean d() -> d
    void c(boolean) -> c
    boolean e() -> e
    void d(boolean) -> d
    boolean f() -> f
    boolean g() -> g
    java.lang.String toString() -> toString
    void <clinit>() -> <clinit>
com.unity3d.player.k -> com.unity3d.player.k:
    boolean a -> a
    android.content.Context b -> b
    android.view.SurfaceView c -> c
    android.view.SurfaceHolder d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    boolean h -> h
    long i -> i
    long j -> j
    android.widget.FrameLayout k -> k
    android.view.Display l -> l
    int m -> m
    int n -> n
    int o -> o
    int p -> p
    android.media.MediaPlayer q -> q
    android.widget.MediaController r -> r
    boolean s -> s
    boolean t -> t
    int u -> u
    boolean v -> v
    boolean w -> w
    com.unity3d.player.k$a x -> x
    com.unity3d.player.k$b y -> y
    int z -> z
    void b(java.lang.String) -> b
    void <init>(android.content.Context,java.lang.String,int,int,int,boolean,long,long,com.unity3d.player.k$a) -> <init>
    boolean a() -> a
    void a(int) -> a
    void destroyPlayer() -> destroyPlayer
    void c() -> c
    void CancelOnPrepare() -> CancelOnPrepare
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void onBufferingUpdate(android.media.MediaPlayer,int) -> onBufferingUpdate
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onVideoSizeChanged(android.media.MediaPlayer,int,int) -> onVideoSizeChanged
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void doCleanUp() -> doCleanUp
    void d() -> d
    void updateVideoLayout() -> updateVideoLayout
    boolean canPause() -> canPause
    boolean canSeekBackward() -> canSeekBackward
    boolean canSeekForward() -> canSeekForward
    int getBufferPercentage() -> getBufferPercentage
    int getCurrentPosition() -> getCurrentPosition
    int getDuration() -> getDuration
    boolean isPlaying() -> isPlaying
    void pause() -> pause
    void seekTo(int) -> seekTo
    void start() -> start
    int getAudioSessionId() -> getAudioSessionId
    boolean b() -> b
    void a(java.lang.String) -> a
    void <clinit>() -> <clinit>
com.unity3d.player.k$a -> com.unity3d.player.k$a:
    void a(int) -> a
com.unity3d.player.k$b -> com.unity3d.player.k$b:
    com.unity3d.player.k b -> b
    boolean c -> c
    com.unity3d.player.k a -> a
    void <init>(com.unity3d.player.k,com.unity3d.player.k) -> <init>
    void run() -> run
    void a() -> a
com.unity3d.player.l -> com.unity3d.player.l:
    com.unity3d.player.UnityPlayer a -> a
    android.content.Context b -> b
    com.unity3d.player.l$a c -> c
    java.util.concurrent.Semaphore d -> d
    java.util.concurrent.locks.Lock e -> e
    com.unity3d.player.k f -> f
    int g -> g
    boolean h -> h
    boolean i -> i
    void <init>(com.unity3d.player.UnityPlayer) -> <init>
    boolean a(android.content.Context,java.lang.String,int,int,int,boolean,long,long,com.unity3d.player.l$a) -> a
    void d() -> d
    void a() -> a
    void b() -> b
    void c() -> c
    void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    com.unity3d.player.k a(com.unity3d.player.l) -> a
    int a(com.unity3d.player.l,int) -> a
    java.util.concurrent.Semaphore b(com.unity3d.player.l) -> b
    com.unity3d.player.k a(com.unity3d.player.l,com.unity3d.player.k) -> a
    android.content.Context c(com.unity3d.player.l) -> c
    java.util.concurrent.locks.Lock d(com.unity3d.player.l) -> d
    boolean e(com.unity3d.player.l) -> e
    void f(com.unity3d.player.l) -> f
    com.unity3d.player.UnityPlayer g(com.unity3d.player.l) -> g
    boolean h(com.unity3d.player.l) -> h
com.unity3d.player.l$1 -> com.unity3d.player.l$1:
    java.lang.String a -> a
    int b -> b
    int c -> c
    int d -> d
    boolean e -> e
    long f -> f
    long g -> g
    com.unity3d.player.l h -> h
    void <init>(com.unity3d.player.l,java.lang.String,int,int,int,boolean,long,long) -> <init>
    void run() -> run
com.unity3d.player.l$1$1 -> com.unity3d.player.l$1$1:
    com.unity3d.player.l$1 a -> a
    void <init>(com.unity3d.player.l$1) -> <init>
    void a(int) -> a
com.unity3d.player.l$1$1$1 -> com.unity3d.player.l$1$1$1:
    com.unity3d.player.l$1$1 a -> a
    void <init>(com.unity3d.player.l$1$1) -> <init>
    void run() -> run
com.unity3d.player.l$2 -> com.unity3d.player.l$2:
    com.unity3d.player.l a -> a
    void <init>(com.unity3d.player.l) -> <init>
    void run() -> run
com.unity3d.player.l$3 -> com.unity3d.player.l$3:
    com.unity3d.player.l a -> a
    void <init>(com.unity3d.player.l) -> <init>
    void run() -> run
com.unity3d.player.l$4 -> com.unity3d.player.l$4:
    com.unity3d.player.l a -> a
    void <init>(com.unity3d.player.l) -> <init>
    void run() -> run
com.unity3d.player.l$a -> com.unity3d.player.l$a:
    void a() -> a
com.vuforia.VuforiaUnityPlayer.DebugLog -> com.vuforia.VuforiaUnityPlayer.DebugLog:
    java.lang.String LOGTAG -> LOGTAG
    void <init>() -> <init>
    void LOGE(java.lang.String) -> LOGE
    void LOGW(java.lang.String) -> LOGW
    void LOGD(java.lang.String) -> LOGD
    void LOGI(java.lang.String) -> LOGI
com.vuforia.VuforiaUnityPlayer.OrientationUtility -> com.vuforia.VuforiaUnityPlayer.OrientationUtility:
    int SCREEN_ORIENTATION_UNKNOWN -> SCREEN_ORIENTATION_UNKNOWN
    int SCREEN_ORIENTATION_PORTRAIT -> SCREEN_ORIENTATION_PORTRAIT
    int SCREEN_ORIENTATION_PORTRAITUPSIDEDOWN -> SCREEN_ORIENTATION_PORTRAITUPSIDEDOWN
    int SCREEN_ORIENTATION_LANDSCAPELEFT -> SCREEN_ORIENTATION_LANDSCAPELEFT
    int SCREEN_ORIENTATION_LANDSCAPERIGHT -> SCREEN_ORIENTATION_LANDSCAPERIGHT
    void <init>() -> <init>
    int getSurfaceOrientation(android.app.Activity) -> getSurfaceOrientation
com.vuforia.VuforiaUnityPlayer.VuforiaInitializer -> com.vuforia.VuforiaUnityPlayer.VuforiaInitializer:
    java.lang.String NATIVE_LIB_UNITYPLAYER -> NATIVE_LIB_UNITYPLAYER
    void <init>() -> <init>
    void loadNativeLibraries() -> loadNativeLibraries
    boolean loadLibrary(java.lang.String) -> loadLibrary
com.vuforia.ar.pl.Camera1_Preview -> com.vuforia.ar.pl.Camera1_Preview:
    com.vuforia.ar.pl.SurfaceManager surfaceManager -> surfaceManager
    java.util.Vector cameraCacheInfo -> cameraCacheInfo
    java.util.HashMap cameraCacheInfoIndexCache -> cameraCacheInfoIndexCache
    int CAMERA_CAPTUREINFO_VALUE_WIDTH -> CAMERA_CAPTUREINFO_VALUE_WIDTH
    int CAMERA_CAPTUREINFO_VALUE_HEIGHT -> CAMERA_CAPTUREINFO_VALUE_HEIGHT
    int CAMERA_CAPTUREINFO_VALUE_FORMAT -> CAMERA_CAPTUREINFO_VALUE_FORMAT
    int CAMERA_CAPTUREINFO_VALUE_FRAMERATE -> CAMERA_CAPTUREINFO_VALUE_FRAMERATE
    int CAMERA_CAPTUREINFO_VALUE_PREVIEWSURFACEENABLED -> CAMERA_CAPTUREINFO_VALUE_PREVIEWSURFACEENABLED
    int _NUM_CAMERA_CAPTUREINFO_VALUE_ -> _NUM_CAMERA_CAPTUREINFO_VALUE_
    int CAMERA_CAPSINFO_VALUE_SUPPORTED_QUERYABLE_PARAMS -> CAMERA_CAPSINFO_VALUE_SUPPORTED_QUERYABLE_PARAMS
    int CAMERA_CAPSINFO_VALUE_SUPPORTED_SETTABLE_PARAMS -> CAMERA_CAPSINFO_VALUE_SUPPORTED_SETTABLE_PARAMS
    int CAMERA_CAPSINFO_VALUE_SUPPORTED_PARAMVALUES -> CAMERA_CAPSINFO_VALUE_SUPPORTED_PARAMVALUES
    int CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGESIZES -> CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGESIZES
    int CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_FRAMERATES -> CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_FRAMERATES
    int CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGEFORMATS -> CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGEFORMATS
    int _NUM_CAMERA_CAPSINFO_VALUE_ -> _NUM_CAMERA_CAPSINFO_VALUE_
    int AR_CAMERA_PARAMTYPE_BASE -> AR_CAMERA_PARAMTYPE_BASE
    int AR_CAMERA_PARAMTYPE_TORCHMODE -> AR_CAMERA_PARAMTYPE_TORCHMODE
    int AR_CAMERA_PARAMTYPE_FOCUSMODE -> AR_CAMERA_PARAMTYPE_FOCUSMODE
    int AR_CAMERA_PARAMTYPE_FOCUSVALUE -> AR_CAMERA_PARAMTYPE_FOCUSVALUE
    int AR_CAMERA_PARAMTYPE_FOCUSRANGE -> AR_CAMERA_PARAMTYPE_FOCUSRANGE
    int AR_CAMERA_PARAMTYPE_FOCUSREGION -> AR_CAMERA_PARAMTYPE_FOCUSREGION
    int AR_CAMERA_PARAMTYPE_EXPOSUREMODE -> AR_CAMERA_PARAMTYPE_EXPOSUREMODE
    int AR_CAMERA_PARAMTYPE_ISO -> AR_CAMERA_PARAMTYPE_ISO
    int AR_CAMERA_PARAMTYPE_ISORANGE -> AR_CAMERA_PARAMTYPE_ISORANGE
    int AR_CAMERA_PARAMTYPE_EXPOSURETIME -> AR_CAMERA_PARAMTYPE_EXPOSURETIME
    int AR_CAMERA_PARAMTYPE_EXPOSURETIMERANGE -> AR_CAMERA_PARAMTYPE_EXPOSURETIMERANGE
    int AR_CAMERA_PARAMTYPE_EXPOSUREVALUE -> AR_CAMERA_PARAMTYPE_EXPOSUREVALUE
    int AR_CAMERA_PARAMTYPE_EXPOSUREVALUERANGE -> AR_CAMERA_PARAMTYPE_EXPOSUREVALUERANGE
    int AR_CAMERA_PARAMTYPE_WHITEBALANCEMODE -> AR_CAMERA_PARAMTYPE_WHITEBALANCEMODE
    int AR_CAMERA_PARAMTYPE_WHITEBALANCEVALUE -> AR_CAMERA_PARAMTYPE_WHITEBALANCEVALUE
    int AR_CAMERA_PARAMTYPE_WHITEBALANCERANGE -> AR_CAMERA_PARAMTYPE_WHITEBALANCERANGE
    int AR_CAMERA_PARAMTYPE_ZOOMVALUE -> AR_CAMERA_PARAMTYPE_ZOOMVALUE
    int AR_CAMERA_PARAMTYPE_ZOOMRANGE -> AR_CAMERA_PARAMTYPE_ZOOMRANGE
    int AR_CAMERA_PARAMTYPE_BRIGHTNESSVALUE -> AR_CAMERA_PARAMTYPE_BRIGHTNESSVALUE
    int AR_CAMERA_PARAMTYPE_BRIGHTNESSRANGE -> AR_CAMERA_PARAMTYPE_BRIGHTNESSRANGE
    int AR_CAMERA_PARAMTYPE_CONTRASTVALUE -> AR_CAMERA_PARAMTYPE_CONTRASTVALUE
    int AR_CAMERA_PARAMTYPE_CONTRASTRANGE -> AR_CAMERA_PARAMTYPE_CONTRASTRANGE
    int AR_CAMERA_PARAMTYPE_ROTATION -> AR_CAMERA_PARAMTYPE_ROTATION
    int AR_CAMERA_PARAMTYPE_RECORDING_HINT -> AR_CAMERA_PARAMTYPE_RECORDING_HINT
    int AR_CAMERA_PARAMTYPE_LENS_IS_ADJUSTING -> AR_CAMERA_PARAMTYPE_LENS_IS_ADJUSTING
    int AR_CAMERA_PARAMTYPE_VIDEO_STABILIZATION -> AR_CAMERA_PARAMTYPE_VIDEO_STABILIZATION
    int AR_CAMERA_PARAMVALUE_BASE -> AR_CAMERA_PARAMVALUE_BASE
    int AR_CAMERA_TORCHMODE_OFF -> AR_CAMERA_TORCHMODE_OFF
    int AR_CAMERA_TORCHMODE_ON -> AR_CAMERA_TORCHMODE_ON
    int AR_CAMERA_TORCHMODE_AUTO -> AR_CAMERA_TORCHMODE_AUTO
    int AR_CAMERA_TORCHMODE_CONTINUOUSAUTO -> AR_CAMERA_TORCHMODE_CONTINUOUSAUTO
    int AR_CAMERA_FOCUSMODE_NORMAL -> AR_CAMERA_FOCUSMODE_NORMAL
    int AR_CAMERA_FOCUSMODE_AUTO -> AR_CAMERA_FOCUSMODE_AUTO
    int AR_CAMERA_FOCUSMODE_CONTINUOUSAUTO -> AR_CAMERA_FOCUSMODE_CONTINUOUSAUTO
    int AR_CAMERA_FOCUSMODE_MACRO -> AR_CAMERA_FOCUSMODE_MACRO
    int AR_CAMERA_FOCUSMODE_INFINITY -> AR_CAMERA_FOCUSMODE_INFINITY
    int AR_CAMERA_FOCUSMODE_FIXED -> AR_CAMERA_FOCUSMODE_FIXED
    int AR_CAMERA_EXPOSUREMODE_LOCKED -> AR_CAMERA_EXPOSUREMODE_LOCKED
    int AR_CAMERA_EXPOSUREMODE_AUTO -> AR_CAMERA_EXPOSUREMODE_AUTO
    int AR_CAMERA_EXPOSUREMODE_CONTINUOUSAUTO -> AR_CAMERA_EXPOSUREMODE_CONTINUOUSAUTO
    int AR_CAMERA_WHITEBALANCEMODE_LOCKED -> AR_CAMERA_WHITEBALANCEMODE_LOCKED
    int AR_CAMERA_WHITEBALANCEMODE_AUTO -> AR_CAMERA_WHITEBALANCEMODE_AUTO
    int AR_CAMERA_WHITEBALANCEMODE_CONTINUOUSAUTO -> AR_CAMERA_WHITEBALANCEMODE_CONTINUOUSAUTO
    int AR_CAMERA_TYPE_UNKNOWN -> AR_CAMERA_TYPE_UNKNOWN
    int AR_CAMERA_TYPE_MONO -> AR_CAMERA_TYPE_MONO
    int AR_CAMERA_TYPE_STEREO -> AR_CAMERA_TYPE_STEREO
    int AR_CAMERA_DIRECTION_UNKNOWN -> AR_CAMERA_DIRECTION_UNKNOWN
    int AR_CAMERA_DIRECTION_BACK -> AR_CAMERA_DIRECTION_BACK
    int AR_CAMERA_DIRECTION_FRONT -> AR_CAMERA_DIRECTION_FRONT
    int AR_CAMERA_STATUS_UNKNOWN -> AR_CAMERA_STATUS_UNKNOWN
    int AR_CAMERA_STATUS_UNINITIALIZED -> AR_CAMERA_STATUS_UNINITIALIZED
    int AR_CAMERA_STATUS_OPENED -> AR_CAMERA_STATUS_OPENED
    int AR_CAMERA_STATUS_CAPTURE_RUNNING -> AR_CAMERA_STATUS_CAPTURE_RUNNING
    int AR_CAMERA_IMAGE_FORMAT_UNKNOWN -> AR_CAMERA_IMAGE_FORMAT_UNKNOWN
    int AR_CAMERA_IMAGE_FORMAT_LUM -> AR_CAMERA_IMAGE_FORMAT_LUM
    int AR_CAMERA_IMAGE_FORMAT_RGB565 -> AR_CAMERA_IMAGE_FORMAT_RGB565
    int AR_CAMERA_IMAGE_FORMAT_RGB888 -> AR_CAMERA_IMAGE_FORMAT_RGB888
    int AR_CAMERA_IMAGE_FORMAT_RGB24 -> AR_CAMERA_IMAGE_FORMAT_RGB24
    int AR_CAMERA_IMAGE_FORMAT_RGBA8888 -> AR_CAMERA_IMAGE_FORMAT_RGBA8888
    int AR_CAMERA_IMAGE_FORMAT_RGBA32 -> AR_CAMERA_IMAGE_FORMAT_RGBA32
    int AR_CAMERA_IMAGE_FORMAT_ARGB8888 -> AR_CAMERA_IMAGE_FORMAT_ARGB8888
    int AR_CAMERA_IMAGE_FORMAT_ARGB32 -> AR_CAMERA_IMAGE_FORMAT_ARGB32
    int AR_CAMERA_IMAGE_FORMAT_BGRA8888 -> AR_CAMERA_IMAGE_FORMAT_BGRA8888
    int AR_CAMERA_IMAGE_FORMAT_BGRA32 -> AR_CAMERA_IMAGE_FORMAT_BGRA32
    int AR_CAMERA_IMAGE_FORMAT_NV12 -> AR_CAMERA_IMAGE_FORMAT_NV12
    int AR_CAMERA_IMAGE_FORMAT_NV16 -> AR_CAMERA_IMAGE_FORMAT_NV16
    int AR_CAMERA_IMAGE_FORMAT_NV21 -> AR_CAMERA_IMAGE_FORMAT_NV21
    int AR_CAMERA_IMAGE_FORMAT_YV12 -> AR_CAMERA_IMAGE_FORMAT_YV12
    int AR_CAMERA_IMAGE_FORMAT_YV16 -> AR_CAMERA_IMAGE_FORMAT_YV16
    int AR_CAMERA_IMAGE_FORMAT_RGBA5551 -> AR_CAMERA_IMAGE_FORMAT_RGBA5551
    int AR_CAMERA_IMAGE_FORMAT_RGBA4444 -> AR_CAMERA_IMAGE_FORMAT_RGBA4444
    int AR_CAMERA_IMAGE_FORMAT_BGR888 -> AR_CAMERA_IMAGE_FORMAT_BGR888
    int AR_CAMERA_IMAGE_FORMAT_BGR24 -> AR_CAMERA_IMAGE_FORMAT_BGR24
    int[] CAMERA_IMAGE_FORMAT_CONVERSIONTABLE -> CAMERA_IMAGE_FORMAT_CONVERSIONTABLE
    boolean CONVERT_FORMAT_TO_PL -> CONVERT_FORMAT_TO_PL
    boolean CONVERT_FORMAT_TO_ANDROID -> CONVERT_FORMAT_TO_ANDROID
    int NUM_CAPTURE_BUFFERS -> NUM_CAPTURE_BUFFERS
    int NUM_CAPTURE_BUFFERS_TO_ADD -> NUM_CAPTURE_BUFFERS_TO_ADD
    int NUM_MAX_CAMERAOPEN_RETRY -> NUM_MAX_CAMERAOPEN_RETRY
    int TIME_CAMERAOPEN_RETRY_DELAY_MS -> TIME_CAMERAOPEN_RETRY_DELAY_MS
    java.lang.String MODULENAME -> MODULENAME
    java.lang.String FOCUS_MODE_NORMAL -> FOCUS_MODE_NORMAL
    java.lang.String SAMSUNG_PARAM_VRMODE_SUPPORTED -> SAMSUNG_PARAM_VRMODE_SUPPORTED
    java.lang.String SAMSUNG_PARAM_VRMODE -> SAMSUNG_PARAM_VRMODE
    java.lang.String SAMSUNG_PARAM_FAST_FPS_MODE -> SAMSUNG_PARAM_FAST_FPS_MODE
    void <init>() -> <init>
    boolean checkPermission() -> checkPermission
    int getCameraDeviceIndex(int,int,int) -> getCameraDeviceIndex
    android.hardware.Camera$Parameters getCameraParameters(android.hardware.Camera) -> getCameraParameters
    com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo getCameraCacheInfo(int) -> getCameraCacheInfo
    boolean setCustomCameraParams(android.hardware.Camera$Parameters,java.lang.String) -> setCustomCameraParams
    boolean setCameraPreviewFps(int,android.hardware.Camera$Parameters) -> setCameraPreviewFps
    boolean setCameraCaptureParams(com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo,android.hardware.Camera$Parameters,int[],int[]) -> setCameraCaptureParams
    boolean checkSamsungHighFPS(com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo) -> checkSamsungHighFPS
    boolean setupPreviewBuffer(com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo) -> setupPreviewBuffer
    void setCameraCapsBit(com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo,int,int,boolean) -> setCameraCapsBit
    int translateImageFormat(int,boolean) -> translateImageFormat
    int getBitsPerPixel(int) -> getBitsPerPixel
    void onPreviewFrame(byte[],android.hardware.Camera) -> onPreviewFrame
    void newFrameAvailable(long,int,int,int,int,byte[],long) -> newFrameAvailable
    boolean init() -> init
    void setSurfaceManager(com.vuforia.ar.pl.SurfaceManager) -> setSurfaceManager
    int getNumberOfCameras() -> getNumberOfCameras
    int getOrientation(int) -> getOrientation
    int getDirection(int) -> getDirection
    int getDeviceID(int) -> getDeviceID
    int open(long,int,int,int,java.lang.String,int[],int[]) -> open
    boolean close(int) -> close
    int[] getCameraCapabilities(int) -> getCameraCapabilities
    boolean setCaptureInfo(int,int[],int[]) -> setCaptureInfo
    int[] getCaptureInfo(int) -> getCaptureInfo
    boolean start(int) -> start
    boolean stop(int) -> stop
    boolean setUntypedCameraParameter(int,java.lang.String,java.lang.String) -> setUntypedCameraParameter
    java.lang.String getUntypedCameraParameter(int,java.lang.String) -> getUntypedCameraParameter
    java.lang.String getFlattenedParameters(int) -> getFlattenedParameters
    boolean setTypedCameraParameter(int,int,java.lang.Object) -> setTypedCameraParameter
    java.lang.Object getTypedCameraParameter(int,int) -> getTypedCameraParameter
    int getStatus(int) -> getStatus
    java.util.HashMap access$000(com.vuforia.ar.pl.Camera1_Preview) -> access$000
    com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo access$100(com.vuforia.ar.pl.Camera1_Preview,int) -> access$100
    void <clinit>() -> <clinit>
com.vuforia.ar.pl.Camera1_Preview$1 -> com.vuforia.ar.pl.Camera1_Preview$1:
    com.vuforia.ar.pl.Camera1_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera1_Preview) -> <init>
    void onAutoFocus(boolean,android.hardware.Camera) -> onAutoFocus
com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo -> com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo:
    int deviceID -> deviceID
    long deviceHandle -> deviceHandle
    android.hardware.Camera camera -> camera
    com.vuforia.ar.pl.CameraSurface surface -> surface
    android.graphics.SurfaceTexture surfaceTexture -> surfaceTexture
    byte[][] buffer -> buffer
    int bufferWidth -> bufferWidth
    int bufferHeight -> bufferHeight
    int bufferFormatPL -> bufferFormatPL
    int requestWidth -> requestWidth
    int requestHeight -> requestHeight
    int requestFormatAndroid -> requestFormatAndroid
    int overrideWidth -> overrideWidth
    int overrideHeight -> overrideHeight
    int overrideFormatAndroid -> overrideFormatAndroid
    int bufferSize -> bufferSize
    int[] caps -> caps
    int status -> status
    boolean isAutoFocusing -> isAutoFocusing
    com.vuforia.ar.pl.Camera1_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera1_Preview) -> <init>
com.vuforia.ar.pl.Camera2_Preview -> com.vuforia.ar.pl.Camera2_Preview:
    java.util.Vector mCameraCacheInfos -> mCameraCacheInfos
    java.util.Vector mCameraCacheInfosInProgress -> mCameraCacheInfosInProgress
    java.util.HashMap mCameraCacheInfoIndexCache -> mCameraCacheInfoIndexCache
    android.content.Context mContext -> mContext
    android.hardware.camera2.CameraManager mCameraManager -> mCameraManager
    java.util.concurrent.Semaphore mOpenCloseSemaphore -> mOpenCloseSemaphore
    int CAMERA_CAPTUREINFO_VALUE_WIDTH -> CAMERA_CAPTUREINFO_VALUE_WIDTH
    int CAMERA_CAPTUREINFO_VALUE_HEIGHT -> CAMERA_CAPTUREINFO_VALUE_HEIGHT
    int CAMERA_CAPTUREINFO_VALUE_FORMAT -> CAMERA_CAPTUREINFO_VALUE_FORMAT
    int CAMERA_CAPTUREINFO_VALUE_FRAMERATE -> CAMERA_CAPTUREINFO_VALUE_FRAMERATE
    int CAMERA_CAPTUREINFO_VALUE_PREVIEWSURFACEENABLED -> CAMERA_CAPTUREINFO_VALUE_PREVIEWSURFACEENABLED
    int _NUM_CAMERA_CAPTUREINFO_VALUE_ -> _NUM_CAMERA_CAPTUREINFO_VALUE_
    int CAMERA_CAPSINFO_VALUE_SUPPORTED_QUERYABLE_PARAMS -> CAMERA_CAPSINFO_VALUE_SUPPORTED_QUERYABLE_PARAMS
    int CAMERA_CAPSINFO_VALUE_SUPPORTED_SETTABLE_PARAMS -> CAMERA_CAPSINFO_VALUE_SUPPORTED_SETTABLE_PARAMS
    int CAMERA_CAPSINFO_VALUE_SUPPORTED_PARAMVALUES -> CAMERA_CAPSINFO_VALUE_SUPPORTED_PARAMVALUES
    int CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGESIZES -> CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGESIZES
    int CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_FRAMERATES -> CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_FRAMERATES
    int CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGEFORMATS -> CAMERA_CAPSINFO_VALUE_NUM_SUPPORTED_IMAGEFORMATS
    int _NUM_CAMERA_CAPSINFO_VALUE_ -> _NUM_CAMERA_CAPSINFO_VALUE_
    int AR_CAMERA_PARAMTYPE_BASE -> AR_CAMERA_PARAMTYPE_BASE
    int AR_CAMERA_PARAMTYPE_TORCHMODE -> AR_CAMERA_PARAMTYPE_TORCHMODE
    int AR_CAMERA_PARAMTYPE_FOCUSMODE -> AR_CAMERA_PARAMTYPE_FOCUSMODE
    int AR_CAMERA_PARAMTYPE_FOCUSVALUE -> AR_CAMERA_PARAMTYPE_FOCUSVALUE
    int AR_CAMERA_PARAMTYPE_FOCUSRANGE -> AR_CAMERA_PARAMTYPE_FOCUSRANGE
    int AR_CAMERA_PARAMTYPE_FOCUSREGION -> AR_CAMERA_PARAMTYPE_FOCUSREGION
    int AR_CAMERA_PARAMTYPE_EXPOSUREMODE -> AR_CAMERA_PARAMTYPE_EXPOSUREMODE
    int AR_CAMERA_PARAMTYPE_ISO -> AR_CAMERA_PARAMTYPE_ISO
    int AR_CAMERA_PARAMTYPE_ISORANGE -> AR_CAMERA_PARAMTYPE_ISORANGE
    int AR_CAMERA_PARAMTYPE_EXPOSURETIME -> AR_CAMERA_PARAMTYPE_EXPOSURETIME
    int AR_CAMERA_PARAMTYPE_EXPOSURETIMERANGE -> AR_CAMERA_PARAMTYPE_EXPOSURETIMERANGE
    int AR_CAMERA_PARAMTYPE_EXPOSUREVALUE -> AR_CAMERA_PARAMTYPE_EXPOSUREVALUE
    int AR_CAMERA_PARAMTYPE_EXPOSUREVALUERANGE -> AR_CAMERA_PARAMTYPE_EXPOSUREVALUERANGE
    int AR_CAMERA_PARAMTYPE_WHITEBALANCEMODE -> AR_CAMERA_PARAMTYPE_WHITEBALANCEMODE
    int AR_CAMERA_PARAMTYPE_WHITEBALANCEVALUE -> AR_CAMERA_PARAMTYPE_WHITEBALANCEVALUE
    int AR_CAMERA_PARAMTYPE_WHITEBALANCERANGE -> AR_CAMERA_PARAMTYPE_WHITEBALANCERANGE
    int AR_CAMERA_PARAMTYPE_ZOOMVALUE -> AR_CAMERA_PARAMTYPE_ZOOMVALUE
    int AR_CAMERA_PARAMTYPE_ZOOMRANGE -> AR_CAMERA_PARAMTYPE_ZOOMRANGE
    int AR_CAMERA_PARAMTYPE_BRIGHTNESSVALUE -> AR_CAMERA_PARAMTYPE_BRIGHTNESSVALUE
    int AR_CAMERA_PARAMTYPE_BRIGHTNESSRANGE -> AR_CAMERA_PARAMTYPE_BRIGHTNESSRANGE
    int AR_CAMERA_PARAMTYPE_CONTRASTVALUE -> AR_CAMERA_PARAMTYPE_CONTRASTVALUE
    int AR_CAMERA_PARAMTYPE_CONTRASTRANGE -> AR_CAMERA_PARAMTYPE_CONTRASTRANGE
    int AR_CAMERA_PARAMTYPE_ROTATION -> AR_CAMERA_PARAMTYPE_ROTATION
    int AR_CAMERA_PARAMTYPE_RECORDING_HINT -> AR_CAMERA_PARAMTYPE_RECORDING_HINT
    int AR_CAMERA_PARAMTYPE_LENS_IS_ADJUSTING -> AR_CAMERA_PARAMTYPE_LENS_IS_ADJUSTING
    int AR_CAMERA_PARAMTYPE_VIDEO_STABILIZATION -> AR_CAMERA_PARAMTYPE_VIDEO_STABILIZATION
    int AR_CAMERA_PARAMVALUE_BASE -> AR_CAMERA_PARAMVALUE_BASE
    int AR_CAMERA_TORCHMODE_OFF -> AR_CAMERA_TORCHMODE_OFF
    int AR_CAMERA_TORCHMODE_ON -> AR_CAMERA_TORCHMODE_ON
    int AR_CAMERA_TORCHMODE_AUTO -> AR_CAMERA_TORCHMODE_AUTO
    int AR_CAMERA_TORCHMODE_CONTINUOUSAUTO -> AR_CAMERA_TORCHMODE_CONTINUOUSAUTO
    int AR_CAMERA_FOCUSMODE_NORMAL -> AR_CAMERA_FOCUSMODE_NORMAL
    int AR_CAMERA_FOCUSMODE_AUTO -> AR_CAMERA_FOCUSMODE_AUTO
    int AR_CAMERA_FOCUSMODE_CONTINUOUSAUTO -> AR_CAMERA_FOCUSMODE_CONTINUOUSAUTO
    int AR_CAMERA_FOCUSMODE_MACRO -> AR_CAMERA_FOCUSMODE_MACRO
    int AR_CAMERA_FOCUSMODE_INFINITY -> AR_CAMERA_FOCUSMODE_INFINITY
    int AR_CAMERA_FOCUSMODE_FIXED -> AR_CAMERA_FOCUSMODE_FIXED
    int AR_CAMERA_EXPOSUREMODE_LOCKED -> AR_CAMERA_EXPOSUREMODE_LOCKED
    int AR_CAMERA_EXPOSUREMODE_AUTO -> AR_CAMERA_EXPOSUREMODE_AUTO
    int AR_CAMERA_EXPOSUREMODE_CONTINUOUSAUTO -> AR_CAMERA_EXPOSUREMODE_CONTINUOUSAUTO
    int AR_CAMERA_EXPOSUREMODE_MANUAL -> AR_CAMERA_EXPOSUREMODE_MANUAL
    int AR_CAMERA_EXPOSUREMODE_SHUTTER_PRIORITY -> AR_CAMERA_EXPOSUREMODE_SHUTTER_PRIORITY
    int AR_CAMERA_WHITEBALANCEMODE_LOCKED -> AR_CAMERA_WHITEBALANCEMODE_LOCKED
    int AR_CAMERA_WHITEBALANCEMODE_AUTO -> AR_CAMERA_WHITEBALANCEMODE_AUTO
    int AR_CAMERA_WHITEBALANCEMODE_CONTINUOUSAUTO -> AR_CAMERA_WHITEBALANCEMODE_CONTINUOUSAUTO
    int AR_CAMERA_TYPE_UNKNOWN -> AR_CAMERA_TYPE_UNKNOWN
    int AR_CAMERA_TYPE_MONO -> AR_CAMERA_TYPE_MONO
    int AR_CAMERA_TYPE_STEREO -> AR_CAMERA_TYPE_STEREO
    int AR_CAMERA_DIRECTION_UNKNOWN -> AR_CAMERA_DIRECTION_UNKNOWN
    int AR_CAMERA_DIRECTION_BACK -> AR_CAMERA_DIRECTION_BACK
    int AR_CAMERA_DIRECTION_FRONT -> AR_CAMERA_DIRECTION_FRONT
    int AR_CAMERA_STATUS_UNKNOWN -> AR_CAMERA_STATUS_UNKNOWN
    int AR_CAMERA_STATUS_UNINITIALIZED -> AR_CAMERA_STATUS_UNINITIALIZED
    int AR_CAMERA_STATUS_OPENED -> AR_CAMERA_STATUS_OPENED
    int AR_CAMERA_STATUS_CAPTURE_RUNNING -> AR_CAMERA_STATUS_CAPTURE_RUNNING
    int AR_CAMERA_IMAGE_FORMAT_UNKNOWN -> AR_CAMERA_IMAGE_FORMAT_UNKNOWN
    int AR_CAMERA_IMAGE_FORMAT_LUM -> AR_CAMERA_IMAGE_FORMAT_LUM
    int AR_CAMERA_IMAGE_FORMAT_RGB565 -> AR_CAMERA_IMAGE_FORMAT_RGB565
    int AR_CAMERA_IMAGE_FORMAT_RGB888 -> AR_CAMERA_IMAGE_FORMAT_RGB888
    int AR_CAMERA_IMAGE_FORMAT_RGB24 -> AR_CAMERA_IMAGE_FORMAT_RGB24
    int AR_CAMERA_IMAGE_FORMAT_RGBA8888 -> AR_CAMERA_IMAGE_FORMAT_RGBA8888
    int AR_CAMERA_IMAGE_FORMAT_RGBA32 -> AR_CAMERA_IMAGE_FORMAT_RGBA32
    int AR_CAMERA_IMAGE_FORMAT_ARGB8888 -> AR_CAMERA_IMAGE_FORMAT_ARGB8888
    int AR_CAMERA_IMAGE_FORMAT_ARGB32 -> AR_CAMERA_IMAGE_FORMAT_ARGB32
    int AR_CAMERA_IMAGE_FORMAT_BGRA8888 -> AR_CAMERA_IMAGE_FORMAT_BGRA8888
    int AR_CAMERA_IMAGE_FORMAT_BGRA32 -> AR_CAMERA_IMAGE_FORMAT_BGRA32
    int AR_CAMERA_IMAGE_FORMAT_NV12 -> AR_CAMERA_IMAGE_FORMAT_NV12
    int AR_CAMERA_IMAGE_FORMAT_NV16 -> AR_CAMERA_IMAGE_FORMAT_NV16
    int AR_CAMERA_IMAGE_FORMAT_NV21 -> AR_CAMERA_IMAGE_FORMAT_NV21
    int AR_CAMERA_IMAGE_FORMAT_YV12 -> AR_CAMERA_IMAGE_FORMAT_YV12
    int AR_CAMERA_IMAGE_FORMAT_YV16 -> AR_CAMERA_IMAGE_FORMAT_YV16
    int AR_CAMERA_IMAGE_FORMAT_RGBA5551 -> AR_CAMERA_IMAGE_FORMAT_RGBA5551
    int AR_CAMERA_IMAGE_FORMAT_RGBA4444 -> AR_CAMERA_IMAGE_FORMAT_RGBA4444
    int AR_CAMERA_IMAGE_FORMAT_BGR888 -> AR_CAMERA_IMAGE_FORMAT_BGR888
    int AR_CAMERA_IMAGE_FORMAT_BGR24 -> AR_CAMERA_IMAGE_FORMAT_BGR24
    int AR_CAMERA_IMAGE_FORMAT_YUV420P -> AR_CAMERA_IMAGE_FORMAT_YUV420P
    int[] CAMERA_VALID_IMAGE_FORMAT_PL -> CAMERA_VALID_IMAGE_FORMAT_PL
    int NUM_CAPTURE_BUFFERS -> NUM_CAPTURE_BUFFERS
    int NUM_MAX_CAMERAOPEN_RETRY -> NUM_MAX_CAMERAOPEN_RETRY
    int TIME_CAMERAOPEN_RETRY_DELAY_MS -> TIME_CAMERAOPEN_RETRY_DELAY_MS
    java.lang.String MODULENAME -> MODULENAME
    int MAX_LOWEST_FPS_ALLOWED -> MAX_LOWEST_FPS_ALLOWED
    int MAX_HIGHEST_FPS_ALLOWED -> MAX_HIGHEST_FPS_ALLOWED
    android.util.Range EMPTY_RANGE -> EMPTY_RANGE
    java.lang.String FOCUS_MODE_NORMAL -> FOCUS_MODE_NORMAL
    int mIsPermissionGranted -> mIsPermissionGranted
    void <init>() -> <init>
    boolean checkPermission() -> checkPermission
    int getCameraDeviceIndex(int,int,int) -> getCameraDeviceIndex
    com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo getCameraCacheInfo(int) -> getCameraCacheInfo
    boolean setCustomCameraParams(com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo,java.lang.String) -> setCustomCameraParams
    android.hardware.camera2.CaptureRequest$Key mapStringToKey(java.lang.String,android.hardware.camera2.CameraCharacteristics,java.lang.Object) -> mapStringToKey
    boolean setCameraCaptureParams(com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo,int[],int[]) -> setCameraCaptureParams
    boolean setupPreviewBuffer(com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo) -> setupPreviewBuffer
    void setCameraCapsBit(com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo,int,int,boolean) -> setCameraCapsBit
    int translateImageFormatPLToAndroid(int) -> translateImageFormatPLToAndroid
    int getBitsPerPixel(int) -> getBitsPerPixel
    java.util.List getSupportedPreviewFrameRates(android.hardware.camera2.CameraCharacteristics) -> getSupportedPreviewFrameRates
    boolean checkCameraManager() -> checkCameraManager
    int compareHardwareSupportLevel(int,int) -> compareHardwareSupportLevel
    void cleanupHandlerThread(com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo) -> cleanupHandlerThread
    void newFrameAvailable(long,int,int,int,int[],int,java.nio.ByteBuffer,java.lang.Object) -> newFrameAvailable
    long getBufferAddress(java.nio.ByteBuffer) -> getBufferAddress
    boolean init() -> init
    int getNumberOfCameras() -> getNumberOfCameras
    int getOrientation(int) -> getOrientation
    int getDirection(int) -> getDirection
    int getDeviceID(int) -> getDeviceID
    boolean checkMinimumHardwareSupportLevel(int,int) -> checkMinimumHardwareSupportLevel
    int open(long,int,int,int,java.lang.String,int[],int[]) -> open
    boolean close(int) -> close
    int[] getCameraCapabilities(int) -> getCameraCapabilities
    boolean setCaptureInfo(int,int[],int[]) -> setCaptureInfo
    int[] getCaptureInfo(int) -> getCaptureInfo
    boolean start(int) -> start
    boolean stop(int) -> stop
    boolean setUntypedCameraParameter(int,java.lang.String,java.lang.Object) -> setUntypedCameraParameter
    java.lang.Object getUntypedCameraParameter(int,java.lang.String) -> getUntypedCameraParameter
    int getUntypedCameraParameterType(int,java.lang.String) -> getUntypedCameraParameterType
    int getNamedParameterCount(int) -> getNamedParameterCount
    java.lang.String getNamedParameter(int,int) -> getNamedParameter
    boolean setTypedCameraParameter(int,int,java.lang.Object) -> setTypedCameraParameter
    java.lang.Object getTypedCameraParameter(int,int) -> getTypedCameraParameter
    int getStatus(int) -> getStatus
    java.util.HashMap access$000(com.vuforia.ar.pl.Camera2_Preview) -> access$000
    java.util.Vector access$100(com.vuforia.ar.pl.Camera2_Preview) -> access$100
    void access$200(com.vuforia.ar.pl.Camera2_Preview,long,int,int,int,int[],int,java.nio.ByteBuffer,java.lang.Object) -> access$200
    long access$300(com.vuforia.ar.pl.Camera2_Preview,java.nio.ByteBuffer) -> access$300
    java.util.Vector access$500(com.vuforia.ar.pl.Camera2_Preview) -> access$500
    java.util.concurrent.Semaphore access$600(com.vuforia.ar.pl.Camera2_Preview) -> access$600
    void <clinit>() -> <clinit>
com.vuforia.ar.pl.Camera2_Preview$1 -> com.vuforia.ar.pl.Camera2_Preview$1:
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview) -> <init>
    void onOpened(android.hardware.camera2.CameraDevice) -> onOpened
    void onError(android.hardware.camera2.CameraDevice,int) -> onError
    void onDisconnected(android.hardware.camera2.CameraDevice) -> onDisconnected
com.vuforia.ar.pl.Camera2_Preview$2 -> com.vuforia.ar.pl.Camera2_Preview$2:
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview) -> <init>
    void onConfigured(android.hardware.camera2.CameraCaptureSession) -> onConfigured
    void onConfigureFailed(android.hardware.camera2.CameraCaptureSession) -> onConfigureFailed
com.vuforia.ar.pl.Camera2_Preview$AutofocusRunner -> com.vuforia.ar.pl.Camera2_Preview$AutofocusRunner:
    com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo mCCI -> mCCI
    android.hardware.camera2.CaptureRequest mCancelRequest -> mCancelRequest
    android.hardware.camera2.CaptureRequest mFocusRequest -> mFocusRequest
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview,com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo) -> <init>
    boolean triggerAutofocus() -> triggerAutofocus
    void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo -> com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo:
    int deviceID -> deviceID
    long deviceHandle -> deviceHandle
    java.lang.String deviceIDString -> deviceIDString
    android.hardware.camera2.CameraCharacteristics characteristics -> characteristics
    android.hardware.camera2.CameraDevice device -> device
    android.hardware.camera2.CameraCaptureSession session -> session
    android.hardware.camera2.CaptureRequest$Builder builder -> builder
    android.hardware.camera2.CaptureResult lastResult -> lastResult
    java.util.List surfaces -> surfaces
    android.media.ImageReader reader -> reader
    android.media.Image[] images -> images
    java.util.concurrent.Semaphore imageSemaphore -> imageSemaphore
    android.os.Handler handler -> handler
    android.os.HandlerThread thread -> thread
    int bufferWidth -> bufferWidth
    int bufferHeight -> bufferHeight
    int bufferFormatPL -> bufferFormatPL
    int requestWidth -> requestWidth
    int requestHeight -> requestHeight
    int requestFormatPL -> requestFormatPL
    int requestFormatAndroid -> requestFormatAndroid
    int requestFramerate -> requestFramerate
    int overrideWidth -> overrideWidth
    int overrideHeight -> overrideHeight
    int overrideFormatPL -> overrideFormatPL
    int overrideFormatAndroid -> overrideFormatAndroid
    int[] caps -> caps
    int status -> status
    boolean isAutoFocusing -> isAutoFocusing
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview) -> <init>
com.vuforia.ar.pl.Camera2_Preview$FrameInfo -> com.vuforia.ar.pl.Camera2_Preview$FrameInfo:
    long timestamp -> timestamp
    long exposureTime -> exposureTime
    int iso -> iso
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview) -> <init>
com.vuforia.ar.pl.Camera2_Preview$OnCameraDataAvailable -> com.vuforia.ar.pl.Camera2_Preview$OnCameraDataAvailable:
    int actualCaptureFormat -> actualCaptureFormat
    int[] actualBufferSize -> actualBufferSize
    long prevTimestamp -> prevTimestamp
    com.vuforia.ar.pl.Camera2_Preview$FrameInfo info -> info
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview) -> <init>
    void onImageAvailable(android.media.ImageReader) -> onImageAvailable
    int getImageFormat(android.media.Image) -> getImageFormat
    int[] calculateActualBufferSize(long,long,long,int,int,int,int,int) -> calculateActualBufferSize
    void <init>(com.vuforia.ar.pl.Camera2_Preview,com.vuforia.ar.pl.Camera2_Preview$1) -> <init>
com.vuforia.ar.pl.Camera2_Preview$OnFrameCapturedCallback -> com.vuforia.ar.pl.Camera2_Preview$OnFrameCapturedCallback:
    com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo mCCI -> mCCI
    com.vuforia.ar.pl.Camera2_Preview this$0 -> this$0
    void <init>(com.vuforia.ar.pl.Camera2_Preview,com.vuforia.ar.pl.Camera2_Preview$CameraCacheInfo) -> <init>
    void onCaptureCompleted(android.hardware.camera2.CameraCaptureSession,android.hardware.camera2.CaptureRequest,android.hardware.camera2.TotalCaptureResult) -> onCaptureCompleted
com.vuforia.ar.pl.CameraSurface -> com.vuforia.ar.pl.CameraSurface:
    android.hardware.Camera camera -> camera
    android.view.SurfaceHolder surfaceHolder -> surfaceHolder
    java.lang.String MODULENAME -> MODULENAME
    void <init>(android.content.Context) -> <init>
    void setCamera(android.hardware.Camera) -> setCamera
    void surfaceCreated(android.view.SurfaceHolder) -> surfaceCreated
    void surfaceChanged(android.view.SurfaceHolder,int,int,int) -> surfaceChanged
    void surfaceDestroyed(android.view.SurfaceHolder) -> surfaceDestroyed
com.vuforia.ar.pl.DebugLog -> com.vuforia.ar.pl.DebugLog:
    java.lang.String LOGTAG -> LOGTAG
    void <init>() -> <init>
    void LOGE(java.lang.String,java.lang.String) -> LOGE
    void LOGW(java.lang.String,java.lang.String) -> LOGW
    void LOGD(java.lang.String,java.lang.String) -> LOGD
    void LOGI(java.lang.String,java.lang.String) -> LOGI
com.vuforia.ar.pl.ImageTools -> com.vuforia.ar.pl.ImageTools:
    java.lang.String MODULENAME -> MODULENAME
    int CAMERA_IMAGE_FORMAT_LUM -> CAMERA_IMAGE_FORMAT_LUM
    int CAMERA_IMAGE_FORMAT_RGB565 -> CAMERA_IMAGE_FORMAT_RGB565
    int CAMERA_IMAGE_FORMAT_RGB888 -> CAMERA_IMAGE_FORMAT_RGB888
    int CAMERA_IMAGE_FORMAT_RGBA8888 -> CAMERA_IMAGE_FORMAT_RGBA8888
    int CAMERA_IMAGE_FORMAT_NV12 -> CAMERA_IMAGE_FORMAT_NV12
    int CAMERA_IMAGE_FORMAT_NV21 -> CAMERA_IMAGE_FORMAT_NV21
    void <init>() -> <init>
    byte[] encodeImage(byte[],int,int,int,int,int) -> encodeImage
com.vuforia.ar.pl.MediaTools -> com.vuforia.ar.pl.MediaTools:
    java.lang.String MODULENAME -> MODULENAME
    void <init>() -> <init>
    int[] getH264InputBufferLayout(int,int,int) -> getH264InputBufferLayout
    boolean isAudioRecordingAvailable(android.app.Activity) -> isAudioRecordingAvailable
com.vuforia.ar.pl.PermissionHandler -> com.vuforia.ar.pl.PermissionHandler:
    java.lang.String MODULENAME -> MODULENAME
    int AR_PERMISSIONS_STATUS_FAILED -> AR_PERMISSIONS_STATUS_FAILED
    int AR_PERMISSIONS_STATUS_DENIED -> AR_PERMISSIONS_STATUS_DENIED
    int AR_PERMISSIONS_STATUS_GRANTED -> AR_PERMISSIONS_STATUS_GRANTED
    int PERMISSIONS_REQUEST_CODE -> PERMISSIONS_REQUEST_CODE
    void <init>() -> <init>
    int checkPermissions(android.app.Activity,java.lang.String[]) -> checkPermissions
    int requestPermissions(android.app.Activity,java.lang.String[]) -> requestPermissions
    boolean isPermissionDefinedInManifest(android.app.Activity,java.lang.String) -> isPermissionDefinedInManifest
    java.util.List getPendingPermissions(android.app.Activity,java.lang.String[]) -> getPendingPermissions
com.vuforia.ar.pl.PermissionHandler$PermissionsRequestFragment -> com.vuforia.ar.pl.PermissionHandler$PermissionsRequestFragment:
    android.os.ConditionVariable mCompletionCondition -> mCompletionCondition
    java.lang.String[] mPermissionsArrayToRequest -> mPermissionsArrayToRequest
    int mPermissionsStatus -> mPermissionsStatus
    void <init>(java.lang.String[]) -> <init>
    void onStart() -> onStart
    void removeSelf() -> removeSelf
    void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    int waitForCompletion() -> waitForCompletion
com.vuforia.ar.pl.RenderManager -> com.vuforia.ar.pl.RenderManager:
    int AR_RENDERING_MODE_UNKNOWN -> AR_RENDERING_MODE_UNKNOWN
    int AR_RENDERING_MODE_DISABLED -> AR_RENDERING_MODE_DISABLED
    int AR_RENDERING_MODE_CONTINUOUS -> AR_RENDERING_MODE_CONTINUOUS
    int AR_RENDERING_MODE_WHENDIRTY -> AR_RENDERING_MODE_WHENDIRTY
    int AR_RENDERING_MODE_SYNC_WITH_CAMERA -> AR_RENDERING_MODE_SYNC_WITH_CAMERA
    int viewId -> viewId
    com.vuforia.ar.pl.SurfaceManager surfaceManager -> surfaceManager
    int renderMode -> renderMode
    boolean synchronousMode -> synchronousMode
    java.util.concurrent.ScheduledThreadPoolExecutor timer -> timer
    java.util.concurrent.ScheduledFuture fixedFrameRateRunnerTask -> fixedFrameRateRunnerTask
    java.util.concurrent.ScheduledFuture renderRequestWatcherTask -> renderRequestWatcherTask
    java.util.concurrent.atomic.AtomicBoolean renderRequestServiced -> renderRequestServiced
    java.util.concurrent.atomic.AtomicBoolean renderRequested -> renderRequested
    long delayMS -> delayMS
    long minMS -> minMS
    long maxMS -> maxMS
    java.lang.String MODULENAME -> MODULENAME
    void <init>(com.vuforia.ar.pl.SurfaceManager) -> <init>
    void startTimer() -> startTimer
    void shutdownTimer() -> shutdownTimer
    boolean canSetRenderMode() -> canSetRenderMode
    int getRenderMode() -> getRenderMode
    boolean setRenderMode(int) -> setRenderMode
    boolean setRenderFpsLimits(boolean,int,int) -> setRenderFpsLimits
    boolean requestRender() -> requestRender
    void <clinit>() -> <clinit>
com.vuforia.ar.pl.RenderManager$1 -> com.vuforia.ar.pl.RenderManager$1:
com.vuforia.ar.pl.RenderManager$FixedFrameRateRunner -> com.vuforia.ar.pl.RenderManager$FixedFrameRateRunner:
    com.vuforia.ar.pl.RenderManager this$0 -> this$0
    void <init>(com.vuforia.ar.pl.RenderManager) -> <init>
    void run() -> run
    void <init>(com.vuforia.ar.pl.RenderManager,com.vuforia.ar.pl.RenderManager$1) -> <init>
com.vuforia.ar.pl.RenderManager$RenderRequestWatcher -> com.vuforia.ar.pl.RenderManager$RenderRequestWatcher:
    com.vuforia.ar.pl.RenderManager this$0 -> this$0
    void <init>(com.vuforia.ar.pl.RenderManager) -> <init>
    void run() -> run
    void <init>(com.vuforia.ar.pl.RenderManager,com.vuforia.ar.pl.RenderManager$1) -> <init>
com.vuforia.ar.pl.SurfaceManager -> com.vuforia.ar.pl.SurfaceManager:
    boolean renderWhenDirtyEnabled -> renderWhenDirtyEnabled
    android.opengl.GLSurfaceView glSurfaceView -> glSurfaceView
    int glSurfaceViewChildPosition -> glSurfaceViewChildPosition
    android.view.View cameraSurfaceParentView -> cameraSurfaceParentView
    com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo cciForSurface -> cciForSurface
    java.util.concurrent.locks.Lock viewLock -> viewLock
    java.util.concurrent.locks.Lock addSurfaceLock -> addSurfaceLock
    java.lang.String MODULENAME -> MODULENAME
    void <init>() -> <init>
    android.opengl.GLSurfaceView searchForGLSurfaceView(android.view.View) -> searchForGLSurfaceView
    boolean applyRenderWhenDirty() -> applyRenderWhenDirty
    void setupCameraSurface(com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo) -> setupCameraSurface
    boolean retrieveGLSurfaceView() -> retrieveGLSurfaceView
    boolean setEnableRenderWhenDirty(boolean) -> setEnableRenderWhenDirty
    void requestRender() -> requestRender
    boolean addCameraSurface(com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo) -> addCameraSurface
    void access$000(com.vuforia.ar.pl.SurfaceManager,com.vuforia.ar.pl.Camera1_Preview$CameraCacheInfo) -> access$000
com.vuforia.ar.pl.SurfaceManager$1 -> com.vuforia.ar.pl.SurfaceManager$1:
    com.vuforia.ar.pl.SurfaceManager this$0 -> this$0
    void <init>(com.vuforia.ar.pl.SurfaceManager) -> <init>
    void run() -> run
com.vuforia.ar.pl.SystemTools -> com.vuforia.ar.pl.SystemTools:
    int AR_ERROR_NONE -> AR_ERROR_NONE
    int AR_ERROR_UNKNOWN -> AR_ERROR_UNKNOWN
    int AR_ERROR_INVALID_VALUE -> AR_ERROR_INVALID_VALUE
    int AR_ERROR_INVALID_ENUM -> AR_ERROR_INVALID_ENUM
    int AR_ERROR_INVALID_HANDLE -> AR_ERROR_INVALID_HANDLE
    int AR_ERROR_INVALID_OPERATION -> AR_ERROR_INVALID_OPERATION
    int AR_ERROR_OPERATION_FAILED -> AR_ERROR_OPERATION_FAILED
    int AR_ERROR_OPERATION_CANCELED -> AR_ERROR_OPERATION_CANCELED
    int AR_ERROR_OPERATION_TIMEOUT -> AR_ERROR_OPERATION_TIMEOUT
    java.lang.String MODULENAME -> MODULENAME
    void <init>() -> <init>
    void setSystemErrorCode(int) -> setSystemErrorCode
    void logSystemError(java.lang.String) -> logSystemError
    android.app.Activity getActivityFromNative() -> getActivityFromNative
    boolean checkMinimumApiLevel(int) -> checkMinimumApiLevel
com.vuforia.engine.BuildConfig -> com.vuforia.engine.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String APPLICATION_ID -> APPLICATION_ID
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    void <init>() -> <init>
com.vuforia.engine.app.BuildConfig -> com.vuforia.engine.app.BuildConfig:
    boolean DEBUG -> DEBUG
    java.lang.String LIBRARY_PACKAGE_NAME -> LIBRARY_PACKAGE_NAME
    java.lang.String BUILD_TYPE -> BUILD_TYPE
    void <init>() -> <init>
com.vuforia.engine.app.R -> com.vuforia.engine.app.R:
    void <init>() -> <init>
com.vuforia.engine.app.R$string -> com.vuforia.engine.app.R$string:
    int vuforia_share_chooser_title -> vuforia_share_chooser_title
    void <init>() -> <init>
com.vuforia.engine.app.R$xml -> com.vuforia.engine.app.R$xml:
    int filepaths -> filepaths
    void <init>() -> <init>
com.vuforia.engine.app.VuforiaContentProvider -> com.vuforia.engine.app.VuforiaContentProvider:
    java.lang.String TAG -> TAG
    int RECORDING_ID -> RECORDING_ID
    android.content.UriMatcher mUriMatcher -> mUriMatcher
    java.io.File mBaseDir -> mBaseDir
    void <init>() -> <init>
    boolean onCreate() -> onCreate
    android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    java.lang.String getType(android.net.Uri) -> getType
    android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
    android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    android.net.Uri getUriForFile(android.content.Context,java.io.File) -> getUriForFile
    java.lang.String[] resolveRecordingsProjection(java.lang.String[]) -> resolveRecordingsProjection
    java.io.File getFileForUri(android.net.Uri) -> getFileForUri
com.vuforia.engine.app.VuforiaRecordingContract -> com.vuforia.engine.app.VuforiaRecordingContract:
    java.lang.String AUTHORITY_PACKAGE -> AUTHORITY_PACKAGE
    java.lang.String RESOURCES_NAME -> RESOURCES_NAME
    java.lang.String RESOURCES_FOLDER -> RESOURCES_FOLDER
    java.lang.String CONTENT_URI_FORMAT -> CONTENT_URI_FORMAT
    java.lang.String URI_MATCH_FILTER -> URI_MATCH_FILTER
    java.lang.String[] PROJECTION_ALL -> PROJECTION_ALL
    void <init>() -> <init>
    void <clinit>() -> <clinit>
com.vuforia.engine.app.VuforiaRecordingContract$Columns -> com.vuforia.engine.app.VuforiaRecordingContract$Columns:
    java.lang.String DISPLAY_NAME -> DISPLAY_NAME
    java.lang.String SIZE -> SIZE
com.vuforia.engine.app.VuforiaShare -> com.vuforia.engine.app.VuforiaShare:
    java.lang.String TAG -> TAG
    void <init>() -> <init>
    boolean Share(android.app.Activity,java.lang.String) -> Share
    void grantUriPermissionsToShareIntentTargets(android.content.Context,java.util.List,android.net.Uri) -> grantUriPermissionsToShareIntentTargets
org.fmod.FMODAudioDevice -> org.fmod.FMODAudioDevice:
    java.lang.Thread a -> a
    boolean b -> b
    android.media.AudioTrack c -> c
    boolean d -> d
    java.nio.ByteBuffer e -> e
    byte[] f -> f
    org.fmod.a g -> g
    int h -> h
    int i -> i
    int j -> j
    int k -> k
    void <init>() -> <init>
    void start() -> start
    void stop() -> stop
    void close() -> close
    boolean isRunning() -> isRunning
    void run() -> run
    void releaseAudioTrack() -> releaseAudioTrack
    int fmodGetInfo(int) -> fmodGetInfo
    int fmodProcess(java.nio.ByteBuffer) -> fmodProcess
    int fmodProcessMicData(java.nio.ByteBuffer,int) -> fmodProcessMicData
    int startAudioRecord(int,int,int) -> startAudioRecord
    void stopAudioRecord() -> stopAudioRecord
    void <clinit>() -> <clinit>
org.fmod.a -> org.fmod.a:
    org.fmod.FMODAudioDevice a -> a
    java.nio.ByteBuffer b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.Thread f -> f
    boolean g -> g
    android.media.AudioRecord h -> h
    boolean i -> i
    void <init>(org.fmod.FMODAudioDevice,int,int) -> <init>
    int a() -> a
    void b() -> b
    void c() -> c
    void run() -> run
    void d() -> d
