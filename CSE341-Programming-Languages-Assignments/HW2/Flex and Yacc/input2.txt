(- 5 2)
(+ 5 2)
(set x 50)
(/ x 10)
(* x 10)
(** x 2)
(equal (+ 5 2) (+ 5 2))
(equal (+ 5 2) (+ 5 3))
(or true true)
(and true false)
(not true)
(equal true true)
true
(less (+ 5 2) (+ 5 3))
(if (less 5 10) (- 8 2))
(if (less 10 5) (- 8 2) (- 8 3))
(if (not false) (concat '(1 2 3) '(4 5 6)))
(+ 5 2)
(set a 1)
(for (a (* 5 2) (* 1 2) ) (append 2 '(9 8 7)))
(while (true) (concat '(1 2 3) '(4 5 6)))
(set id 5)
(set b 10)
(id (concat '(7 9 6) '(2 3 1)))
(deffun id (a b) (append 2 '(9 8 7)))
(deffun id (a b) '(3 5 2))
(/ 8 2)
(disp nil)
(disp (1 2 3))
(concat '() '(1 2 3))
(defvar id 50)
;;; helloworld.g++
(defvar newid 50)
(load "input3.txt")
(exit)